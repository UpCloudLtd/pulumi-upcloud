// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesNodeGroupCustomPlan {
    /**
     * @return The number of CPU cores dedicated to individual node group nodes when using custom plan
     * 
     */
    private Integer cores;
    /**
     * @return The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
     * 
     */
    private Integer memory;
    /**
     * @return The size of the storage device in gigabytes.
     * 
     */
    private Integer storageSize;
    /**
     * @return The storage tier to use. Defaults to maxiops
     * 
     */
    private @Nullable String storageTier;

    private KubernetesNodeGroupCustomPlan() {}
    /**
     * @return The number of CPU cores dedicated to individual node group nodes when using custom plan
     * 
     */
    public Integer cores() {
        return this.cores;
    }
    /**
     * @return The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
     * 
     */
    public Integer memory() {
        return this.memory;
    }
    /**
     * @return The size of the storage device in gigabytes.
     * 
     */
    public Integer storageSize() {
        return this.storageSize;
    }
    /**
     * @return The storage tier to use. Defaults to maxiops
     * 
     */
    public Optional<String> storageTier() {
        return Optional.ofNullable(this.storageTier);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesNodeGroupCustomPlan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cores;
        private Integer memory;
        private Integer storageSize;
        private @Nullable String storageTier;
        public Builder() {}
        public Builder(KubernetesNodeGroupCustomPlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cores = defaults.cores;
    	      this.memory = defaults.memory;
    	      this.storageSize = defaults.storageSize;
    	      this.storageTier = defaults.storageTier;
        }

        @CustomType.Setter
        public Builder cores(Integer cores) {
            if (cores == null) {
              throw new MissingRequiredPropertyException("KubernetesNodeGroupCustomPlan", "cores");
            }
            this.cores = cores;
            return this;
        }
        @CustomType.Setter
        public Builder memory(Integer memory) {
            if (memory == null) {
              throw new MissingRequiredPropertyException("KubernetesNodeGroupCustomPlan", "memory");
            }
            this.memory = memory;
            return this;
        }
        @CustomType.Setter
        public Builder storageSize(Integer storageSize) {
            if (storageSize == null) {
              throw new MissingRequiredPropertyException("KubernetesNodeGroupCustomPlan", "storageSize");
            }
            this.storageSize = storageSize;
            return this;
        }
        @CustomType.Setter
        public Builder storageTier(@Nullable String storageTier) {

            this.storageTier = storageTier;
            return this;
        }
        public KubernetesNodeGroupCustomPlan build() {
            final var _resultValue = new KubernetesNodeGroupCustomPlan();
            _resultValue.cores = cores;
            _resultValue.memory = memory;
            _resultValue.storageSize = storageSize;
            _resultValue.storageTier = storageTier;
            return _resultValue;
        }
    }
}
