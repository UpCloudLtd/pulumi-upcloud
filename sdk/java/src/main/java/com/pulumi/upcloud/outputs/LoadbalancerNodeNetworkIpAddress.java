// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadbalancerNodeNetworkIpAddress {
    /**
     * @return Node&#39;s IP address
     * 
     */
    private @Nullable String address;
    /**
     * @return Whether the node listens to the traffic
     * 
     */
    private @Nullable Boolean listen;

    private LoadbalancerNodeNetworkIpAddress() {}
    /**
     * @return Node&#39;s IP address
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return Whether the node listens to the traffic
     * 
     */
    public Optional<Boolean> listen() {
        return Optional.ofNullable(this.listen);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadbalancerNodeNetworkIpAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable Boolean listen;
        public Builder() {}
        public Builder(LoadbalancerNodeNetworkIpAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.listen = defaults.listen;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {

            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder listen(@Nullable Boolean listen) {

            this.listen = listen;
            return this;
        }
        public LoadbalancerNodeNetworkIpAddress build() {
            final var _resultValue = new LoadbalancerNodeNetworkIpAddress();
            _resultValue.address = address;
            _resultValue.listen = listen;
            return _resultValue;
        }
    }
}
