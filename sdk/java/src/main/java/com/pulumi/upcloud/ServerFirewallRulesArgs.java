// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.upcloud.inputs.ServerFirewallRulesFirewallRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerFirewallRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerFirewallRulesArgs Empty = new ServerFirewallRulesArgs();

    /**
     * A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
     * 
     *     Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one destination/source-address/port range.
     *     
     *     A default rule can be created by providing only `action` and `direction` attributes. Default rule should be defined last.
     *     
     *     If used, IP address and port ranges must have both start and end values specified. These can be the same value if only one IP address or port number is specified.
     *     Source and destination port numbers can only be set if the protocol is TCP or UDP.
     *     The ICMP type may only be set if the protocol is ICMP.
     * 
     */
    @Import(name="firewallRules")
    private @Nullable Output<List<ServerFirewallRulesFirewallRuleArgs>> firewallRules;

    /**
     * @return A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
     * 
     *     Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one destination/source-address/port range.
     *     
     *     A default rule can be created by providing only `action` and `direction` attributes. Default rule should be defined last.
     *     
     *     If used, IP address and port ranges must have both start and end values specified. These can be the same value if only one IP address or port number is specified.
     *     Source and destination port numbers can only be set if the protocol is TCP or UDP.
     *     The ICMP type may only be set if the protocol is ICMP.
     * 
     */
    public Optional<Output<List<ServerFirewallRulesFirewallRuleArgs>>> firewallRules() {
        return Optional.ofNullable(this.firewallRules);
    }

    /**
     * The UUID of the server to be protected with the firewall rules.
     * 
     */
    @Import(name="serverId", required=true)
    private Output<String> serverId;

    /**
     * @return The UUID of the server to be protected with the firewall rules.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    private ServerFirewallRulesArgs() {}

    private ServerFirewallRulesArgs(ServerFirewallRulesArgs $) {
        this.firewallRules = $.firewallRules;
        this.serverId = $.serverId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerFirewallRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerFirewallRulesArgs $;

        public Builder() {
            $ = new ServerFirewallRulesArgs();
        }

        public Builder(ServerFirewallRulesArgs defaults) {
            $ = new ServerFirewallRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param firewallRules A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
         * 
         *     Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one destination/source-address/port range.
         *     
         *     A default rule can be created by providing only `action` and `direction` attributes. Default rule should be defined last.
         *     
         *     If used, IP address and port ranges must have both start and end values specified. These can be the same value if only one IP address or port number is specified.
         *     Source and destination port numbers can only be set if the protocol is TCP or UDP.
         *     The ICMP type may only be set if the protocol is ICMP.
         * 
         * @return builder
         * 
         */
        public Builder firewallRules(@Nullable Output<List<ServerFirewallRulesFirewallRuleArgs>> firewallRules) {
            $.firewallRules = firewallRules;
            return this;
        }

        /**
         * @param firewallRules A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
         * 
         *     Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one destination/source-address/port range.
         *     
         *     A default rule can be created by providing only `action` and `direction` attributes. Default rule should be defined last.
         *     
         *     If used, IP address and port ranges must have both start and end values specified. These can be the same value if only one IP address or port number is specified.
         *     Source and destination port numbers can only be set if the protocol is TCP or UDP.
         *     The ICMP type may only be set if the protocol is ICMP.
         * 
         * @return builder
         * 
         */
        public Builder firewallRules(List<ServerFirewallRulesFirewallRuleArgs> firewallRules) {
            return firewallRules(Output.of(firewallRules));
        }

        /**
         * @param firewallRules A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
         * 
         *     Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one destination/source-address/port range.
         *     
         *     A default rule can be created by providing only `action` and `direction` attributes. Default rule should be defined last.
         *     
         *     If used, IP address and port ranges must have both start and end values specified. These can be the same value if only one IP address or port number is specified.
         *     Source and destination port numbers can only be set if the protocol is TCP or UDP.
         *     The ICMP type may only be set if the protocol is ICMP.
         * 
         * @return builder
         * 
         */
        public Builder firewallRules(ServerFirewallRulesFirewallRuleArgs... firewallRules) {
            return firewallRules(List.of(firewallRules));
        }

        /**
         * @param serverId The UUID of the server to be protected with the firewall rules.
         * 
         * @return builder
         * 
         */
        public Builder serverId(Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId The UUID of the server to be protected with the firewall rules.
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        public ServerFirewallRulesArgs build() {
            if ($.serverId == null) {
                throw new MissingRequiredPropertyException("ServerFirewallRulesArgs", "serverId");
            }
            return $;
        }
    }

}
