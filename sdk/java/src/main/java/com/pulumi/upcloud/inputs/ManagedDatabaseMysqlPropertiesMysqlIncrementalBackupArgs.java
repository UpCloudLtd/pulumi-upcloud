// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs Empty = new ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs();

    /**
     * Enable incremental backups. Enable periodic incremental backups. When enabled, full_backup_week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable incremental backups. Enable periodic incremental backups. When enabled, full_backup_week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Full backup week schedule. Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun.
     * 
     */
    @Import(name="fullBackupWeekSchedule")
    private @Nullable Output<String> fullBackupWeekSchedule;

    /**
     * @return Full backup week schedule. Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun.
     * 
     */
    public Optional<Output<String>> fullBackupWeekSchedule() {
        return Optional.ofNullable(this.fullBackupWeekSchedule);
    }

    private ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs() {}

    private ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs(ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs $) {
        this.enabled = $.enabled;
        this.fullBackupWeekSchedule = $.fullBackupWeekSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs $;

        public Builder() {
            $ = new ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs();
        }

        public Builder(ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs defaults) {
            $ = new ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable incremental backups. Enable periodic incremental backups. When enabled, full_backup_week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable incremental backups. Enable periodic incremental backups. When enabled, full_backup_week_schedule must be set. Incremental backups only store changes since the last backup, making them faster and more storage-efficient than full backups. This is particularly useful for large databases where daily full backups would be too time-consuming or expensive.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param fullBackupWeekSchedule Full backup week schedule. Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun.
         * 
         * @return builder
         * 
         */
        public Builder fullBackupWeekSchedule(@Nullable Output<String> fullBackupWeekSchedule) {
            $.fullBackupWeekSchedule = fullBackupWeekSchedule;
            return this;
        }

        /**
         * @param fullBackupWeekSchedule Full backup week schedule. Comma-separated list of days of the week when full backups should be created. Valid values: mon, tue, wed, thu, fri, sat, sun.
         * 
         * @return builder
         * 
         */
        public Builder fullBackupWeekSchedule(String fullBackupWeekSchedule) {
            return fullBackupWeekSchedule(Output.of(fullBackupWeekSchedule));
        }

        public ManagedDatabaseMysqlPropertiesMysqlIncrementalBackupArgs build() {
            return $;
        }
    }

}
