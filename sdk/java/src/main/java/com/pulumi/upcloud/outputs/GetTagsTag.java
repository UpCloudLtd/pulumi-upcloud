// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTagsTag {
    /**
     * @return Free form text representing the meaning of the tag
     * 
     */
    private String description;
    /**
     * @return The value representing the tag
     * 
     */
    private String name;
    /**
     * @return A collection of servers that have been assigned the tag
     * 
     */
    private List<String> servers;

    private GetTagsTag() {}
    /**
     * @return Free form text representing the meaning of the tag
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The value representing the tag
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A collection of servers that have been assigned the tag
     * 
     */
    public List<String> servers() {
        return this.servers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagsTag defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String name;
        private List<String> servers;
        public Builder() {}
        public Builder(GetTagsTag defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.servers = defaults.servers;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetTagsTag", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTagsTag", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<String> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("GetTagsTag", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }
        public GetTagsTag build() {
            final var _resultValue = new GetTagsTag();
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.servers = servers;
            return _resultValue;
        }
    }
}
