// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedObjectStorageCustomDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedObjectStorageCustomDomainArgs Empty = new ManagedObjectStorageCustomDomainArgs();

    /**
     * Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g. example.com.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g. example.com.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * Managed Object Storage service UUID.
     * 
     */
    @Import(name="serviceUuid", required=true)
    private Output<String> serviceUuid;

    /**
     * @return Managed Object Storage service UUID.
     * 
     */
    public Output<String> serviceUuid() {
        return this.serviceUuid;
    }

    /**
     * At the moment only `public` is accepted.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return At the moment only `public` is accepted.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ManagedObjectStorageCustomDomainArgs() {}

    private ManagedObjectStorageCustomDomainArgs(ManagedObjectStorageCustomDomainArgs $) {
        this.domainName = $.domainName;
        this.serviceUuid = $.serviceUuid;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedObjectStorageCustomDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedObjectStorageCustomDomainArgs $;

        public Builder() {
            $ = new ManagedObjectStorageCustomDomainArgs();
        }

        public Builder(ManagedObjectStorageCustomDomainArgs defaults) {
            $ = new ManagedObjectStorageCustomDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g. example.com.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g. example.com.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param serviceUuid Managed Object Storage service UUID.
         * 
         * @return builder
         * 
         */
        public Builder serviceUuid(Output<String> serviceUuid) {
            $.serviceUuid = serviceUuid;
            return this;
        }

        /**
         * @param serviceUuid Managed Object Storage service UUID.
         * 
         * @return builder
         * 
         */
        public Builder serviceUuid(String serviceUuid) {
            return serviceUuid(Output.of(serviceUuid));
        }

        /**
         * @param type At the moment only `public` is accepted.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type At the moment only `public` is accepted.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ManagedObjectStorageCustomDomainArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("ManagedObjectStorageCustomDomainArgs", "domainName");
            }
            if ($.serviceUuid == null) {
                throw new MissingRequiredPropertyException("ManagedObjectStorageCustomDomainArgs", "serviceUuid");
            }
            return $;
        }
    }

}
