// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadbalancerNodeNetworkIpAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerNodeNetworkIpAddressArgs Empty = new LoadbalancerNodeNetworkIpAddressArgs();

    /**
     * Node&#39;s IP address
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return Node&#39;s IP address
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * Whether the node listens to the traffic
     * 
     */
    @Import(name="listen")
    private @Nullable Output<Boolean> listen;

    /**
     * @return Whether the node listens to the traffic
     * 
     */
    public Optional<Output<Boolean>> listen() {
        return Optional.ofNullable(this.listen);
    }

    private LoadbalancerNodeNetworkIpAddressArgs() {}

    private LoadbalancerNodeNetworkIpAddressArgs(LoadbalancerNodeNetworkIpAddressArgs $) {
        this.address = $.address;
        this.listen = $.listen;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerNodeNetworkIpAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerNodeNetworkIpAddressArgs $;

        public Builder() {
            $ = new LoadbalancerNodeNetworkIpAddressArgs();
        }

        public Builder(LoadbalancerNodeNetworkIpAddressArgs defaults) {
            $ = new LoadbalancerNodeNetworkIpAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address Node&#39;s IP address
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Node&#39;s IP address
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param listen Whether the node listens to the traffic
         * 
         * @return builder
         * 
         */
        public Builder listen(@Nullable Output<Boolean> listen) {
            $.listen = listen;
            return this;
        }

        /**
         * @param listen Whether the node listens to the traffic
         * 
         * @return builder
         * 
         */
        public Builder listen(Boolean listen) {
            return listen(Output.of(listen));
        }

        public LoadbalancerNodeNetworkIpAddressArgs build() {
            return $;
        }
    }

}
