// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FileStorageNetwork {
    /**
     * @return IP family, e.g. IPv4.
     * 
     */
    private String family;
    /**
     * @return IP address to assign (optional, auto-assign otherwise).
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return Attachment name (unique per this service).
     * 
     */
    private String name;
    /**
     * @return UUID of an existing private network to attach.
     * 
     */
    private String uuid;

    private FileStorageNetwork() {}
    /**
     * @return IP family, e.g. IPv4.
     * 
     */
    public String family() {
        return this.family;
    }
    /**
     * @return IP address to assign (optional, auto-assign otherwise).
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return Attachment name (unique per this service).
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return UUID of an existing private network to attach.
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileStorageNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String family;
        private @Nullable String ipAddress;
        private String name;
        private String uuid;
        public Builder() {}
        public Builder(FileStorageNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.family = defaults.family;
    	      this.ipAddress = defaults.ipAddress;
    	      this.name = defaults.name;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder family(String family) {
            if (family == null) {
              throw new MissingRequiredPropertyException("FileStorageNetwork", "family");
            }
            this.family = family;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {

            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("FileStorageNetwork", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("FileStorageNetwork", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public FileStorageNetwork build() {
            final var _resultValue = new FileStorageNetwork();
            _resultValue.family = family;
            _resultValue.ipAddress = ipAddress;
            _resultValue.name = name;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
