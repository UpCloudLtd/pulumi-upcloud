// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetManagedObjectStorageRegionsRegionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetManagedObjectStorageRegionsRegionArgs Empty = new GetManagedObjectStorageRegionsRegionArgs();

    /**
     * Name of the region.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the region.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Primary zone of the region.
     * 
     */
    @Import(name="primaryZone", required=true)
    private Output<String> primaryZone;

    /**
     * @return Primary zone of the region.
     * 
     */
    public Output<String> primaryZone() {
        return this.primaryZone;
    }

    /**
     * List of zones in the region.
     * 
     */
    @Import(name="zones", required=true)
    private Output<List<String>> zones;

    /**
     * @return List of zones in the region.
     * 
     */
    public Output<List<String>> zones() {
        return this.zones;
    }

    private GetManagedObjectStorageRegionsRegionArgs() {}

    private GetManagedObjectStorageRegionsRegionArgs(GetManagedObjectStorageRegionsRegionArgs $) {
        this.name = $.name;
        this.primaryZone = $.primaryZone;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedObjectStorageRegionsRegionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedObjectStorageRegionsRegionArgs $;

        public Builder() {
            $ = new GetManagedObjectStorageRegionsRegionArgs();
        }

        public Builder(GetManagedObjectStorageRegionsRegionArgs defaults) {
            $ = new GetManagedObjectStorageRegionsRegionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the region.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the region.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param primaryZone Primary zone of the region.
         * 
         * @return builder
         * 
         */
        public Builder primaryZone(Output<String> primaryZone) {
            $.primaryZone = primaryZone;
            return this;
        }

        /**
         * @param primaryZone Primary zone of the region.
         * 
         * @return builder
         * 
         */
        public Builder primaryZone(String primaryZone) {
            return primaryZone(Output.of(primaryZone));
        }

        /**
         * @param zones List of zones in the region.
         * 
         * @return builder
         * 
         */
        public Builder zones(Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones List of zones in the region.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones List of zones in the region.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public GetManagedObjectStorageRegionsRegionArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetManagedObjectStorageRegionsRegionArgs", "name");
            }
            if ($.primaryZone == null) {
                throw new MissingRequiredPropertyException("GetManagedObjectStorageRegionsRegionArgs", "primaryZone");
            }
            if ($.zones == null) {
                throw new MissingRequiredPropertyException("GetManagedObjectStorageRegionsRegionArgs", "zones");
            }
            return $;
        }
    }

}
