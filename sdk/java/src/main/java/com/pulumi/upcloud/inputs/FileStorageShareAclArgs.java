// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FileStorageShareAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileStorageShareAclArgs Empty = new FileStorageShareAclArgs();

    /**
     * Access level: &#39;ro&#39; or &#39;rw&#39;.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Access level: &#39;ro&#39; or &#39;rw&#39;.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    /**
     * Target IP/CIDR or &#39;*&#39;.
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return Target IP/CIDR or &#39;*&#39;.
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private FileStorageShareAclArgs() {}

    private FileStorageShareAclArgs(FileStorageShareAclArgs $) {
        this.permission = $.permission;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileStorageShareAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileStorageShareAclArgs $;

        public Builder() {
            $ = new FileStorageShareAclArgs();
        }

        public Builder(FileStorageShareAclArgs defaults) {
            $ = new FileStorageShareAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param permission Access level: &#39;ro&#39; or &#39;rw&#39;.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Access level: &#39;ro&#39; or &#39;rw&#39;.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        /**
         * @param target Target IP/CIDR or &#39;*&#39;.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Target IP/CIDR or &#39;*&#39;.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public FileStorageShareAclArgs build() {
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("FileStorageShareAclArgs", "permission");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("FileStorageShareAclArgs", "target");
            }
            return $;
        }
    }

}
