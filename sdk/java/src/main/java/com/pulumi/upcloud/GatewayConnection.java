// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.GatewayConnectionArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.GatewayConnectionState;
import com.pulumi.upcloud.outputs.GatewayConnectionLocalRoute;
import com.pulumi.upcloud.outputs.GatewayConnectionRemoteRoute;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.Router;
 * import com.pulumi.upcloud.RouterArgs;
 * import com.pulumi.upcloud.Network;
 * import com.pulumi.upcloud.NetworkArgs;
 * import com.pulumi.upcloud.inputs.NetworkIpNetworkArgs;
 * import com.pulumi.upcloud.Gateway;
 * import com.pulumi.upcloud.GatewayArgs;
 * import com.pulumi.upcloud.inputs.GatewayRouterArgs;
 * import com.pulumi.upcloud.GatewayConnection;
 * import com.pulumi.upcloud.GatewayConnectionArgs;
 * import com.pulumi.upcloud.inputs.GatewayConnectionLocalRouteArgs;
 * import com.pulumi.upcloud.inputs.GatewayConnectionRemoteRouteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var this_ = new Router("this", RouterArgs.builder()
 *             .name("gateway-example-router")
 *             .build());
 * 
 *         var thisNetwork = new Network("thisNetwork", NetworkArgs.builder()
 *             .name("gateway-example-net")
 *             .zone("pl-waw1")
 *             .ipNetwork(NetworkIpNetworkArgs.builder()
 *                 .address("172.16.2.0/24")
 *                 .dhcp(true)
 *                 .family("IPv4")
 *                 .build())
 *             .router(this_.id())
 *             .build());
 * 
 *         var thisGateway = new Gateway("thisGateway", GatewayArgs.builder()
 *             .name("gateway-example-gw")
 *             .zone("pl-waw1")
 *             .features("vpn")
 *             .plan("advanced")
 *             .router(GatewayRouterArgs.builder()
 *                 .id(this_.id())
 *                 .build())
 *             .build());
 * 
 *         var thisGatewayConnection = new GatewayConnection("thisGatewayConnection", GatewayConnectionArgs.builder()
 *             .gateway(thisGateway.id())
 *             .name("test-connection")
 *             .type("ipsec")
 *             .localRoutes(GatewayConnectionLocalRouteArgs.builder()
 *                 .name("local-route")
 *                 .type("static")
 *                 .staticNetwork("10.123.123.0/24")
 *                 .build())
 *             .remoteRoutes(GatewayConnectionRemoteRouteArgs.builder()
 *                 .name("remote-route")
 *                 .type("static")
 *                 .staticNetwork("100.123.123.0/24")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="upcloud:index/gatewayConnection:GatewayConnection")
public class GatewayConnection extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the upcloud.Gateway resource to which the connection belongs.
     * 
     */
    @Export(name="gateway", refs={String.class}, tree="[0]")
    private Output<String> gateway;

    /**
     * @return The ID of the upcloud.Gateway resource to which the connection belongs.
     * 
     */
    public Output<String> gateway() {
        return this.gateway;
    }
    /**
     * Route for the UpCloud side of the network.
     * 
     */
    @Export(name="localRoutes", refs={List.class,GatewayConnectionLocalRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GatewayConnectionLocalRoute>> localRoutes;

    /**
     * @return Route for the UpCloud side of the network.
     * 
     */
    public Output<Optional<List<GatewayConnectionLocalRoute>>> localRoutes() {
        return Codegen.optional(this.localRoutes);
    }
    /**
     * The name of the connection, should be unique within the gateway.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the connection, should be unique within the gateway.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Route for the remote side of the network.
     * 
     */
    @Export(name="remoteRoutes", refs={List.class,GatewayConnectionRemoteRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GatewayConnectionRemoteRoute>> remoteRoutes;

    /**
     * @return Route for the remote side of the network.
     * 
     */
    public Output<Optional<List<GatewayConnectionRemoteRoute>>> remoteRoutes() {
        return Codegen.optional(this.remoteRoutes);
    }
    /**
     * List of connection&#39;s tunnels names. Note that this field can have outdated information as connections are created by a separate resource. To make sure that you have the most recent data run &#39;terrafrom refresh&#39;.
     * 
     */
    @Export(name="tunnels", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tunnels;

    /**
     * @return List of connection&#39;s tunnels names. Note that this field can have outdated information as connections are created by a separate resource. To make sure that you have the most recent data run &#39;terrafrom refresh&#39;.
     * 
     */
    public Output<List<String>> tunnels() {
        return this.tunnels;
    }
    /**
     * The type of the connection; currently the only supported type is &#39;ipsec&#39;.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return The type of the connection; currently the only supported type is &#39;ipsec&#39;.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * The UUID of the connection
     * 
     */
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    /**
     * @return The UUID of the connection
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GatewayConnection(java.lang.String name) {
        this(name, GatewayConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GatewayConnection(java.lang.String name, GatewayConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GatewayConnection(java.lang.String name, GatewayConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/gatewayConnection:GatewayConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GatewayConnection(java.lang.String name, Output<java.lang.String> id, @Nullable GatewayConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/gatewayConnection:GatewayConnection", name, state, makeResourceOptions(options, id), false);
    }

    private static GatewayConnectionArgs makeArgs(GatewayConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GatewayConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GatewayConnection get(java.lang.String name, Output<java.lang.String> id, @Nullable GatewayConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GatewayConnection(name, id, state, options);
    }
}
