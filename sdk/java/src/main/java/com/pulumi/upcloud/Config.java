// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("upcloud");
/**
 * Password for UpCloud API user. Can also be configured using the `UPCLOUD_PASSWORD` environment variable.
 * 
 */
    public Optional<String> password() {
        return Codegen.stringProp("password").config(config).get();
    }
/**
 * The duration (in seconds) that the provider waits for an HTTP request towards UpCloud API to complete. Defaults to 120 seconds
 * 
 */
    public Optional<Integer> requestTimeoutSec() {
        return Codegen.integerProp("requestTimeoutSec").config(config).get();
    }
/**
 * Maximum number of retries
 * 
 */
    public Optional<Integer> retryMax() {
        return Codegen.integerProp("retryMax").config(config).get();
    }
/**
 * Maximum time to wait between retries
 * 
 */
    public Optional<Integer> retryWaitMaxSec() {
        return Codegen.integerProp("retryWaitMaxSec").config(config).get();
    }
/**
 * Minimum time to wait between retries
 * 
 */
    public Optional<Integer> retryWaitMinSec() {
        return Codegen.integerProp("retryWaitMinSec").config(config).get();
    }
/**
 * Token for authenticating to UpCloud API. Can also be configured using the `UPCLOUD_TOKEN` environment variable or using the system keyring. Use `upctl account login` command to save a token to the system keyring. (EXPERIMENTAL)
 * 
 */
    public Optional<String> token() {
        return Codegen.stringProp("token").config(config).get();
    }
/**
 * UpCloud username with API access. Can also be configured using the `UPCLOUD_USERNAME` environment variable.
 * 
 */
    public Optional<String> username() {
        return Codegen.stringProp("username").config(config).get();
    }
}
