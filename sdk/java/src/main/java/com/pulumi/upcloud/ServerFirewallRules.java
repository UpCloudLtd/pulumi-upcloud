// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.ServerFirewallRulesArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.ServerFirewallRulesState;
import com.pulumi.upcloud.outputs.ServerFirewallRulesFirewallRule;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Firewall rules are used to control network access of UpCloud servers. Each server has its own firewall rules and there should be only one `upcloud.ServerFirewallRules` resource per server.
 * The firewall is enabled on public and utility network interfaces.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.Server;
 * import com.pulumi.upcloud.ServerArgs;
 * import com.pulumi.upcloud.inputs.ServerTemplateArgs;
 * import com.pulumi.upcloud.inputs.ServerNetworkInterfaceArgs;
 * import com.pulumi.upcloud.ServerFirewallRules;
 * import com.pulumi.upcloud.ServerFirewallRulesArgs;
 * import com.pulumi.upcloud.inputs.ServerFirewallRulesFirewallRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // The following example defines a server and then links the server to a single firewall rule. 
 *         // The list of firewall rules applied to the server can be expanded by providing additional server_firewall_rules blocks.
 *         var example = new Server("example", ServerArgs.builder()
 *             .firewall(true)
 *             .hostname("terraform.example.tld")
 *             .zone("de-fra1")
 *             .plan("1xCPU-1GB")
 *             .template(ServerTemplateArgs.builder()
 *                 .storage("Ubuntu Server 20.04 LTS (Focal Fossa)")
 *                 .size(25)
 *                 .build())
 *             .networkInterfaces(ServerNetworkInterfaceArgs.builder()
 *                 .type("utility")
 *                 .build())
 *             .build());
 * 
 *         var exampleServerFirewallRules = new ServerFirewallRules("exampleServerFirewallRules", ServerFirewallRulesArgs.builder()
 *             .serverId(example.id())
 *             .firewallRules(ServerFirewallRulesFirewallRuleArgs.builder()
 *                 .action("accept")
 *                 .comment("Allow SSH from this network")
 *                 .destinationPortEnd("22")
 *                 .destinationPortStart("22")
 *                 .direction("in")
 *                 .family("IPv4")
 *                 .protocol("tcp")
 *                 .sourceAddressEnd("192.168.1.255")
 *                 .sourceAddressStart("192.168.1.1")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import upcloud:index/serverFirewallRules:ServerFirewallRules my_example_rules 049d7ca2-757e-4fb1-a833-f87ee056547a
 * ```
 * 
 */
@ResourceType(type="upcloud:index/serverFirewallRules:ServerFirewallRules")
public class ServerFirewallRules extends com.pulumi.resources.CustomResource {
    /**
     * A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
     * Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one
     * destination/source-address/port range. A default rule can be created by providing only `action` and `direction`
     * attributes. Default rule should be defined last. If used, IP address and port ranges must have both start and end values
     * specified. These can be the same value if only one IP address or port number is specified. Source and destination port
     * numbers can only be set if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP.
     * 
     */
    @Export(name="firewallRules", refs={List.class,ServerFirewallRulesFirewallRule.class}, tree="[0,1]")
    private Output<List<ServerFirewallRulesFirewallRule>> firewallRules;

    /**
     * @return A single firewall rule. The rules are evaluated in order. The maximum number of firewall rules per server is 1000.
     * Typical firewall rule should have `action`, `direction`, `protocol`, `family` and at least one
     * destination/source-address/port range. A default rule can be created by providing only `action` and `direction`
     * attributes. Default rule should be defined last. If used, IP address and port ranges must have both start and end values
     * specified. These can be the same value if only one IP address or port number is specified. Source and destination port
     * numbers can only be set if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP.
     * 
     */
    public Output<List<ServerFirewallRulesFirewallRule>> firewallRules() {
        return this.firewallRules;
    }
    /**
     * The unique id of the server to be protected the firewall rules
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The unique id of the server to be protected the firewall rules
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerFirewallRules(java.lang.String name) {
        this(name, ServerFirewallRulesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerFirewallRules(java.lang.String name, ServerFirewallRulesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerFirewallRules(java.lang.String name, ServerFirewallRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/serverFirewallRules:ServerFirewallRules", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServerFirewallRules(java.lang.String name, Output<java.lang.String> id, @Nullable ServerFirewallRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/serverFirewallRules:ServerFirewallRules", name, state, makeResourceOptions(options, id), false);
    }

    private static ServerFirewallRulesArgs makeArgs(ServerFirewallRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServerFirewallRulesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerFirewallRules get(java.lang.String name, Output<java.lang.String> id, @Nullable ServerFirewallRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerFirewallRules(name, id, state, options);
    }
}
