// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadbalancerFrontendRuleActionsSetRequestHeaderArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerFrontendRuleActionsSetRequestHeaderArgs Empty = new LoadbalancerFrontendRuleActionsSetRequestHeaderArgs();

    /**
     * Header name.
     * 
     */
    @Import(name="header", required=true)
    private Output<String> header;

    /**
     * @return Header name.
     * 
     */
    public Output<String> header() {
        return this.header;
    }

    /**
     * Header value.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Header value.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private LoadbalancerFrontendRuleActionsSetRequestHeaderArgs() {}

    private LoadbalancerFrontendRuleActionsSetRequestHeaderArgs(LoadbalancerFrontendRuleActionsSetRequestHeaderArgs $) {
        this.header = $.header;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerFrontendRuleActionsSetRequestHeaderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerFrontendRuleActionsSetRequestHeaderArgs $;

        public Builder() {
            $ = new LoadbalancerFrontendRuleActionsSetRequestHeaderArgs();
        }

        public Builder(LoadbalancerFrontendRuleActionsSetRequestHeaderArgs defaults) {
            $ = new LoadbalancerFrontendRuleActionsSetRequestHeaderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param header Header name.
         * 
         * @return builder
         * 
         */
        public Builder header(Output<String> header) {
            $.header = header;
            return this;
        }

        /**
         * @param header Header name.
         * 
         * @return builder
         * 
         */
        public Builder header(String header) {
            return header(Output.of(header));
        }

        /**
         * @param value Header value.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Header value.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public LoadbalancerFrontendRuleActionsSetRequestHeaderArgs build() {
            if ($.header == null) {
                throw new MissingRequiredPropertyException("LoadbalancerFrontendRuleActionsSetRequestHeaderArgs", "header");
            }
            return $;
        }
    }

}
