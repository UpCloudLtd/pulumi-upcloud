// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStorageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStorageArgs Empty = new GetStorageArgs();

    @Import(name="accessType")
    private @Nullable Output<String> accessType;

    public Optional<Output<String>> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * @deprecated
     * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
     * 
     */
    @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
    @Import(name="mostRecent")
    private @Nullable Output<Boolean> mostRecent;

    /**
     * @deprecated
     * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
     * 
     */
    @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
    public Optional<Output<Boolean>> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }

    /**
     * @deprecated
     * Contains the same value as `title`. Use `title` instead.
     * 
     */
    @Deprecated /* Contains the same value as `title`. Use `title` instead. */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @deprecated
     * Contains the same value as `title`. Use `title` instead.
     * 
     */
    @Deprecated /* Contains the same value as `title`. Use `title` instead. */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * @deprecated
     * Use exact title or UUID instead.
     * 
     */
    @Deprecated /* Use exact title or UUID instead. */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @deprecated
     * Use exact title or UUID instead.
     * 
     */
    @Deprecated /* Use exact title or UUID instead. */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="zone")
    private @Nullable Output<String> zone;

    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetStorageArgs() {}

    private GetStorageArgs(GetStorageArgs $) {
        this.accessType = $.accessType;
        this.id = $.id;
        this.mostRecent = $.mostRecent;
        this.name = $.name;
        this.nameRegex = $.nameRegex;
        this.title = $.title;
        this.type = $.type;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStorageArgs $;

        public Builder() {
            $ = new GetStorageArgs();
        }

        public Builder(GetStorageArgs defaults) {
            $ = new GetStorageArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessType(@Nullable Output<String> accessType) {
            $.accessType = accessType;
            return this;
        }

        public Builder accessType(String accessType) {
            return accessType(Output.of(accessType));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
         * 
         */
        @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
        public Builder mostRecent(@Nullable Output<Boolean> mostRecent) {
            $.mostRecent = mostRecent;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
         * 
         */
        @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
        public Builder mostRecent(Boolean mostRecent) {
            return mostRecent(Output.of(mostRecent));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Contains the same value as `title`. Use `title` instead.
         * 
         */
        @Deprecated /* Contains the same value as `title`. Use `title` instead. */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Contains the same value as `title`. Use `title` instead.
         * 
         */
        @Deprecated /* Contains the same value as `title`. Use `title` instead. */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use exact title or UUID instead.
         * 
         */
        @Deprecated /* Use exact title or UUID instead. */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use exact title or UUID instead.
         * 
         */
        @Deprecated /* Use exact title or UUID instead. */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public GetStorageArgs build() {
            return $;
        }
    }

}
