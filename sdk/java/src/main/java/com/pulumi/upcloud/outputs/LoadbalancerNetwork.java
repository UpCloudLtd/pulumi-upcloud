// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadbalancerNetwork {
    /**
     * @return DNS name of the load balancer network
     * 
     */
    private @Nullable String dnsName;
    /**
     * @return Network family. Currently only `IPv4` is supported.
     * 
     */
    private String family;
    /**
     * @return The unique identifier of the network.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the network. Must be unique within the service.
     * 
     */
    private String name;
    /**
     * @return Private network UUID. Required for private networks and must reside in loadbalancer zone. For public network the field should be omitted.
     * 
     */
    private @Nullable String network;
    /**
     * @return The type of the network. Only one public network can be attached and at least one private network must be attached.
     * 
     */
    private String type;

    private LoadbalancerNetwork() {}
    /**
     * @return DNS name of the load balancer network
     * 
     */
    public Optional<String> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }
    /**
     * @return Network family. Currently only `IPv4` is supported.
     * 
     */
    public String family() {
        return this.family;
    }
    /**
     * @return The unique identifier of the network.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the network. Must be unique within the service.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Private network UUID. Required for private networks and must reside in loadbalancer zone. For public network the field should be omitted.
     * 
     */
    public Optional<String> network() {
        return Optional.ofNullable(this.network);
    }
    /**
     * @return The type of the network. Only one public network can be attached and at least one private network must be attached.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadbalancerNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dnsName;
        private String family;
        private @Nullable String id;
        private String name;
        private @Nullable String network;
        private String type;
        public Builder() {}
        public Builder(LoadbalancerNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsName = defaults.dnsName;
    	      this.family = defaults.family;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dnsName(@Nullable String dnsName) {

            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder family(String family) {
            if (family == null) {
              throw new MissingRequiredPropertyException("LoadbalancerNetwork", "family");
            }
            this.family = family;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("LoadbalancerNetwork", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable String network) {

            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("LoadbalancerNetwork", "type");
            }
            this.type = type;
            return this;
        }
        public LoadbalancerNetwork build() {
            final var _resultValue = new LoadbalancerNetwork();
            _resultValue.dnsName = dnsName;
            _resultValue.family = family;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
