// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NetworkPeeringPeerNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPeeringPeerNetworkArgs Empty = new NetworkPeeringPeerNetworkArgs();

    /**
     * The UUID of the network.
     * 
     */
    @Import(name="uuid", required=true)
    private Output<String> uuid;

    /**
     * @return The UUID of the network.
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    private NetworkPeeringPeerNetworkArgs() {}

    private NetworkPeeringPeerNetworkArgs(NetworkPeeringPeerNetworkArgs $) {
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPeeringPeerNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPeeringPeerNetworkArgs $;

        public Builder() {
            $ = new NetworkPeeringPeerNetworkArgs();
        }

        public Builder(NetworkPeeringPeerNetworkArgs defaults) {
            $ = new NetworkPeeringPeerNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param uuid The UUID of the network.
         * 
         * @return builder
         * 
         */
        public Builder uuid(Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid The UUID of the network.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public NetworkPeeringPeerNetworkArgs build() {
            if ($.uuid == null) {
                throw new MissingRequiredPropertyException("NetworkPeeringPeerNetworkArgs", "uuid");
            }
            return $;
        }
    }

}
