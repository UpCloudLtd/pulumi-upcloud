// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoadbalancerFrontendRuleActionsUseBackendArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerFrontendRuleActionsUseBackendArgs Empty = new LoadbalancerFrontendRuleActionsUseBackendArgs();

    /**
     * The name of the backend where traffic will be routed.
     * 
     */
    @Import(name="backendName", required=true)
    private Output<String> backendName;

    /**
     * @return The name of the backend where traffic will be routed.
     * 
     */
    public Output<String> backendName() {
        return this.backendName;
    }

    private LoadbalancerFrontendRuleActionsUseBackendArgs() {}

    private LoadbalancerFrontendRuleActionsUseBackendArgs(LoadbalancerFrontendRuleActionsUseBackendArgs $) {
        this.backendName = $.backendName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerFrontendRuleActionsUseBackendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerFrontendRuleActionsUseBackendArgs $;

        public Builder() {
            $ = new LoadbalancerFrontendRuleActionsUseBackendArgs();
        }

        public Builder(LoadbalancerFrontendRuleActionsUseBackendArgs defaults) {
            $ = new LoadbalancerFrontendRuleActionsUseBackendArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendName The name of the backend where traffic will be routed.
         * 
         * @return builder
         * 
         */
        public Builder backendName(Output<String> backendName) {
            $.backendName = backendName;
            return this;
        }

        /**
         * @param backendName The name of the backend where traffic will be routed.
         * 
         * @return builder
         * 
         */
        public Builder backendName(String backendName) {
            return backendName(Output.of(backendName));
        }

        public LoadbalancerFrontendRuleActionsUseBackendArgs build() {
            if ($.backendName == null) {
                throw new MissingRequiredPropertyException("LoadbalancerFrontendRuleActionsUseBackendArgs", "backendName");
            }
            return $;
        }
    }

}
