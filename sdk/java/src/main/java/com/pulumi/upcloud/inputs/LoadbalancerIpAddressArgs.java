// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoadbalancerIpAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerIpAddressArgs Empty = new LoadbalancerIpAddressArgs();

    /**
     * Floating IP address to attach to the load balancer.
     * 
     */
    @Import(name="address", required=true)
    private Output<String> address;

    /**
     * @return Floating IP address to attach to the load balancer.
     * 
     */
    public Output<String> address() {
        return this.address;
    }

    /**
     * Name of the network where to attach the IP address.
     * 
     */
    @Import(name="networkName", required=true)
    private Output<String> networkName;

    /**
     * @return Name of the network where to attach the IP address.
     * 
     */
    public Output<String> networkName() {
        return this.networkName;
    }

    private LoadbalancerIpAddressArgs() {}

    private LoadbalancerIpAddressArgs(LoadbalancerIpAddressArgs $) {
        this.address = $.address;
        this.networkName = $.networkName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerIpAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerIpAddressArgs $;

        public Builder() {
            $ = new LoadbalancerIpAddressArgs();
        }

        public Builder(LoadbalancerIpAddressArgs defaults) {
            $ = new LoadbalancerIpAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address Floating IP address to attach to the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder address(Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Floating IP address to attach to the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param networkName Name of the network where to attach the IP address.
         * 
         * @return builder
         * 
         */
        public Builder networkName(Output<String> networkName) {
            $.networkName = networkName;
            return this;
        }

        /**
         * @param networkName Name of the network where to attach the IP address.
         * 
         * @return builder
         * 
         */
        public Builder networkName(String networkName) {
            return networkName(Output.of(networkName));
        }

        public LoadbalancerIpAddressArgs build() {
            if ($.address == null) {
                throw new MissingRequiredPropertyException("LoadbalancerIpAddressArgs", "address");
            }
            if ($.networkName == null) {
                throw new MissingRequiredPropertyException("LoadbalancerIpAddressArgs", "networkName");
            }
            return $;
        }
    }

}
