// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedObjectStoragePolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedObjectStoragePolicyState Empty = new ManagedObjectStoragePolicyState();

    /**
     * Policy ARN.
     * 
     */
    @Import(name="arn")
    private @Nullable Output<String> arn;

    /**
     * @return Policy ARN.
     * 
     */
    public Optional<Output<String>> arn() {
        return Optional.ofNullable(this.arn);
    }

    /**
     * Attachment count.
     * 
     */
    @Import(name="attachmentCount")
    private @Nullable Output<Integer> attachmentCount;

    /**
     * @return Attachment count.
     * 
     */
    public Optional<Output<Integer>> attachmentCount() {
        return Optional.ofNullable(this.attachmentCount);
    }

    /**
     * Creation time.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Creation time.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Default version id.
     * 
     */
    @Import(name="defaultVersionId")
    private @Nullable Output<String> defaultVersionId;

    /**
     * @return Default version id.
     * 
     */
    public Optional<Output<String>> defaultVersionId() {
        return Optional.ofNullable(this.defaultVersionId);
    }

    /**
     * Description of the policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Policy document, URL-encoded compliant with RFC 3986. Extra whitespace and escapes are ignored when determining if the
     * document has changed.
     * 
     */
    @Import(name="document")
    private @Nullable Output<String> document;

    /**
     * @return Policy document, URL-encoded compliant with RFC 3986. Extra whitespace and escapes are ignored when determining if the
     * document has changed.
     * 
     */
    public Optional<Output<String>> document() {
        return Optional.ofNullable(this.document);
    }

    /**
     * Policy name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Policy name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Managed Object Storage service UUID.
     * 
     */
    @Import(name="serviceUuid")
    private @Nullable Output<String> serviceUuid;

    /**
     * @return Managed Object Storage service UUID.
     * 
     */
    public Optional<Output<String>> serviceUuid() {
        return Optional.ofNullable(this.serviceUuid);
    }

    /**
     * Defines whether the policy was set up by the system.
     * 
     */
    @Import(name="system")
    private @Nullable Output<Boolean> system;

    /**
     * @return Defines whether the policy was set up by the system.
     * 
     */
    public Optional<Output<Boolean>> system() {
        return Optional.ofNullable(this.system);
    }

    /**
     * Update time.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Update time.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private ManagedObjectStoragePolicyState() {}

    private ManagedObjectStoragePolicyState(ManagedObjectStoragePolicyState $) {
        this.arn = $.arn;
        this.attachmentCount = $.attachmentCount;
        this.createdAt = $.createdAt;
        this.defaultVersionId = $.defaultVersionId;
        this.description = $.description;
        this.document = $.document;
        this.name = $.name;
        this.serviceUuid = $.serviceUuid;
        this.system = $.system;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedObjectStoragePolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedObjectStoragePolicyState $;

        public Builder() {
            $ = new ManagedObjectStoragePolicyState();
        }

        public Builder(ManagedObjectStoragePolicyState defaults) {
            $ = new ManagedObjectStoragePolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn Policy ARN.
         * 
         * @return builder
         * 
         */
        public Builder arn(@Nullable Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn Policy ARN.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param attachmentCount Attachment count.
         * 
         * @return builder
         * 
         */
        public Builder attachmentCount(@Nullable Output<Integer> attachmentCount) {
            $.attachmentCount = attachmentCount;
            return this;
        }

        /**
         * @param attachmentCount Attachment count.
         * 
         * @return builder
         * 
         */
        public Builder attachmentCount(Integer attachmentCount) {
            return attachmentCount(Output.of(attachmentCount));
        }

        /**
         * @param createdAt Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param defaultVersionId Default version id.
         * 
         * @return builder
         * 
         */
        public Builder defaultVersionId(@Nullable Output<String> defaultVersionId) {
            $.defaultVersionId = defaultVersionId;
            return this;
        }

        /**
         * @param defaultVersionId Default version id.
         * 
         * @return builder
         * 
         */
        public Builder defaultVersionId(String defaultVersionId) {
            return defaultVersionId(Output.of(defaultVersionId));
        }

        /**
         * @param description Description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param document Policy document, URL-encoded compliant with RFC 3986. Extra whitespace and escapes are ignored when determining if the
         * document has changed.
         * 
         * @return builder
         * 
         */
        public Builder document(@Nullable Output<String> document) {
            $.document = document;
            return this;
        }

        /**
         * @param document Policy document, URL-encoded compliant with RFC 3986. Extra whitespace and escapes are ignored when determining if the
         * document has changed.
         * 
         * @return builder
         * 
         */
        public Builder document(String document) {
            return document(Output.of(document));
        }

        /**
         * @param name Policy name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Policy name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceUuid Managed Object Storage service UUID.
         * 
         * @return builder
         * 
         */
        public Builder serviceUuid(@Nullable Output<String> serviceUuid) {
            $.serviceUuid = serviceUuid;
            return this;
        }

        /**
         * @param serviceUuid Managed Object Storage service UUID.
         * 
         * @return builder
         * 
         */
        public Builder serviceUuid(String serviceUuid) {
            return serviceUuid(Output.of(serviceUuid));
        }

        /**
         * @param system Defines whether the policy was set up by the system.
         * 
         * @return builder
         * 
         */
        public Builder system(@Nullable Output<Boolean> system) {
            $.system = system;
            return this;
        }

        /**
         * @param system Defines whether the policy was set up by the system.
         * 
         * @return builder
         * 
         */
        public Builder system(Boolean system) {
            return system(Output.of(system));
        }

        /**
         * @param updatedAt Update time.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Update time.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public ManagedObjectStoragePolicyState build() {
            return $;
        }
    }

}
