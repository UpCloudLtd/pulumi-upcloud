// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs Empty = new ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs();

    /**
     * Enable or disable top N query monitoring by the metric. Enable or disable top N query monitoring by the metric.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable or disable top N query monitoring by the metric. Enable or disable top N query monitoring by the metric.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Specify the value of N for the top N queries by the metric.
     * 
     */
    @Import(name="topNSize")
    private @Nullable Output<Integer> topNSize;

    /**
     * @return Specify the value of N for the top N queries by the metric.
     * 
     */
    public Optional<Output<Integer>> topNSize() {
        return Optional.ofNullable(this.topNSize);
    }

    /**
     * The window size of the top N queries by the metric. Configure the window size of the top N queries.
     * 
     */
    @Import(name="windowSize")
    private @Nullable Output<String> windowSize;

    /**
     * @return The window size of the top N queries by the metric. Configure the window size of the top N queries.
     * 
     */
    public Optional<Output<String>> windowSize() {
        return Optional.ofNullable(this.windowSize);
    }

    private ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs() {}

    private ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs(ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs $) {
        this.enabled = $.enabled;
        this.topNSize = $.topNSize;
        this.windowSize = $.windowSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs $;

        public Builder() {
            $ = new ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs();
        }

        public Builder(ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs defaults) {
            $ = new ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable or disable top N query monitoring by the metric. Enable or disable top N query monitoring by the metric.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable or disable top N query monitoring by the metric. Enable or disable top N query monitoring by the metric.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param topNSize Specify the value of N for the top N queries by the metric.
         * 
         * @return builder
         * 
         */
        public Builder topNSize(@Nullable Output<Integer> topNSize) {
            $.topNSize = topNSize;
            return this;
        }

        /**
         * @param topNSize Specify the value of N for the top N queries by the metric.
         * 
         * @return builder
         * 
         */
        public Builder topNSize(Integer topNSize) {
            return topNSize(Output.of(topNSize));
        }

        /**
         * @param windowSize The window size of the top N queries by the metric. Configure the window size of the top N queries.
         * 
         * @return builder
         * 
         */
        public Builder windowSize(@Nullable Output<String> windowSize) {
            $.windowSize = windowSize;
            return this;
        }

        /**
         * @param windowSize The window size of the top N queries by the metric. Configure the window size of the top N queries.
         * 
         * @return builder
         * 
         */
        public Builder windowSize(String windowSize) {
            return windowSize(Output.of(windowSize));
        }

        public ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueriesLatencyArgs build() {
            return $;
        }
    }

}
