// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.StorageTemplateArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.StorageTemplateState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages UpCloud storage templates. The storage templates are stored in the system as storages with `template` type.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.StorageTemplate;
 * import com.pulumi.upcloud.StorageTemplateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var template = new StorageTemplate("template", StorageTemplateArgs.builder()
 *             .labels(Map.ofEntries(
 *                 Map.entry("os", "linux"),
 *                 Map.entry("usage", "example")
 *             ))
 *             .sourceStorage("e0328f8a-9944-406b-99c3-656dcc03e671")
 *             .title("custom-storage-template")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="upcloud:index/storageTemplate:StorageTemplate")
public class StorageTemplate extends com.pulumi.resources.CustomResource {
    /**
     * Sets if the storage is encrypted at rest.
     * 
     */
    @Export(name="encrypt", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> encrypt;

    /**
     * @return Sets if the storage is encrypted at rest.
     * 
     */
    public Output<Boolean> encrypt() {
        return this.encrypt;
    }
    /**
     * User defined key-value pairs to classify the storage.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> labels;

    /**
     * @return User defined key-value pairs to classify the storage.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    /**
     * The size of the storage in gigabytes.
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return The size of the storage in gigabytes.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    /**
     * The source storage that is used as a base for this storage template.
     * 
     */
    @Export(name="sourceStorage", refs={String.class}, tree="[0]")
    private Output<String> sourceStorage;

    /**
     * @return The source storage that is used as a base for this storage template.
     * 
     */
    public Output<String> sourceStorage() {
        return this.sourceStorage;
    }
    /**
     * System defined key-value pairs to classify the storage. The keys of system defined labels are prefixed with underscore
     * and can not be modified by the user.
     * 
     */
    @Export(name="systemLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemLabels;

    /**
     * @return System defined key-value pairs to classify the storage. The keys of system defined labels are prefixed with underscore
     * and can not be modified by the user.
     * 
     */
    public Output<Map<String,String>> systemLabels() {
        return this.systemLabels;
    }
    /**
     * The tier of the storage.
     * 
     */
    @Export(name="tier", refs={String.class}, tree="[0]")
    private Output<String> tier;

    /**
     * @return The tier of the storage.
     * 
     */
    public Output<String> tier() {
        return this.tier;
    }
    /**
     * The title of the storage.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return The title of the storage.
     * 
     */
    public Output<String> title() {
        return this.title;
    }
    /**
     * The type of the storage.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the storage.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The zone the storage is in, e.g. `de-fra1`.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return The zone the storage is in, e.g. `de-fra1`.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StorageTemplate(java.lang.String name) {
        this(name, StorageTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StorageTemplate(java.lang.String name, StorageTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StorageTemplate(java.lang.String name, StorageTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/storageTemplate:StorageTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StorageTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable StorageTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/storageTemplate:StorageTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static StorageTemplateArgs makeArgs(StorageTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StorageTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StorageTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable StorageTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StorageTemplate(name, id, state, options);
    }
}
