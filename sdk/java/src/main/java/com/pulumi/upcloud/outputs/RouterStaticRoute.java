// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RouterStaticRoute {
    private String name;
    private String nexthop;
    private String route;
    private String type;

    private RouterStaticRoute() {}
    public String name() {
        return this.name;
    }
    public String nexthop() {
        return this.nexthop;
    }
    public String route() {
        return this.route;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterStaticRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String nexthop;
        private String route;
        private String type;
        public Builder() {}
        public Builder(RouterStaticRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.nexthop = defaults.nexthop;
    	      this.route = defaults.route;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("RouterStaticRoute", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nexthop(String nexthop) {
            if (nexthop == null) {
              throw new MissingRequiredPropertyException("RouterStaticRoute", "nexthop");
            }
            this.nexthop = nexthop;
            return this;
        }
        @CustomType.Setter
        public Builder route(String route) {
            if (route == null) {
              throw new MissingRequiredPropertyException("RouterStaticRoute", "route");
            }
            this.route = route;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("RouterStaticRoute", "type");
            }
            this.type = type;
            return this;
        }
        public RouterStaticRoute build() {
            final var _resultValue = new RouterStaticRoute();
            _resultValue.name = name;
            _resultValue.nexthop = nexthop;
            _resultValue.route = route;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
