// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerSimpleBackup {
    /**
     * @return Simple backup plan. Accepted values: daily, dailies, weeklies, monthlies.
     * 
     */
    private @Nullable String plan;
    /**
     * @return Time of the day at which backup will be taken. Should be provided in a hhmm format (e.g. 2230).
     * 
     */
    private @Nullable String time;

    private ServerSimpleBackup() {}
    /**
     * @return Simple backup plan. Accepted values: daily, dailies, weeklies, monthlies.
     * 
     */
    public Optional<String> plan() {
        return Optional.ofNullable(this.plan);
    }
    /**
     * @return Time of the day at which backup will be taken. Should be provided in a hhmm format (e.g. 2230).
     * 
     */
    public Optional<String> time() {
        return Optional.ofNullable(this.time);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerSimpleBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String plan;
        private @Nullable String time;
        public Builder() {}
        public Builder(ServerSimpleBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.plan = defaults.plan;
    	      this.time = defaults.time;
        }

        @CustomType.Setter
        public Builder plan(@Nullable String plan) {

            this.plan = plan;
            return this;
        }
        @CustomType.Setter
        public Builder time(@Nullable String time) {

            this.time = time;
            return this;
        }
        public ServerSimpleBackup build() {
            final var _resultValue = new ServerSimpleBackup();
            _resultValue.plan = plan;
            _resultValue.time = time;
            return _resultValue;
        }
    }
}
