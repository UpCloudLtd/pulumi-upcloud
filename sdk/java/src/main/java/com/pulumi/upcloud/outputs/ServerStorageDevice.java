// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerStorageDevice {
    /**
     * @return The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `address_position` field empty to auto-select next available address from that bus.
     * 
     */
    private @Nullable String address;
    /**
     * @return The device position in the given bus (defined via field `address`). Valid values for address `virtio` are `0-15` (`0`, for example). Valid values for `scsi` or `ide` are `0-1:0-1` (`0:0`, for example). Leave empty to auto-select next available address in the given bus.
     * 
     */
    private @Nullable String addressPosition;
    /**
     * @return The UUID of the storage to attach to the server.
     * 
     */
    private @Nullable String storage;
    /**
     * @return The device type the storage will be attached as
     * 
     */
    private @Nullable String type;

    private ServerStorageDevice() {}
    /**
     * @return The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `address_position` field empty to auto-select next available address from that bus.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return The device position in the given bus (defined via field `address`). Valid values for address `virtio` are `0-15` (`0`, for example). Valid values for `scsi` or `ide` are `0-1:0-1` (`0:0`, for example). Leave empty to auto-select next available address in the given bus.
     * 
     */
    public Optional<String> addressPosition() {
        return Optional.ofNullable(this.addressPosition);
    }
    /**
     * @return The UUID of the storage to attach to the server.
     * 
     */
    public Optional<String> storage() {
        return Optional.ofNullable(this.storage);
    }
    /**
     * @return The device type the storage will be attached as
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerStorageDevice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String addressPosition;
        private @Nullable String storage;
        private @Nullable String type;
        public Builder() {}
        public Builder(ServerStorageDevice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.addressPosition = defaults.addressPosition;
    	      this.storage = defaults.storage;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {

            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addressPosition(@Nullable String addressPosition) {

            this.addressPosition = addressPosition;
            return this;
        }
        @CustomType.Setter
        public Builder storage(@Nullable String storage) {

            this.storage = storage;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public ServerStorageDevice build() {
            final var _resultValue = new ServerStorageDevice();
            _resultValue.address = address;
            _resultValue.addressPosition = addressPosition;
            _resultValue.storage = storage;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
