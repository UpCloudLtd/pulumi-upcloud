// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.upcloud.inputs.ManagedObjectStorageEndpointArgs;
import com.pulumi.upcloud.inputs.ManagedObjectStorageNetworkArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedObjectStorageState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedObjectStorageState Empty = new ManagedObjectStorageState();

    /**
     * Service status managed by the end user.
     * 
     */
    @Import(name="configuredStatus")
    private @Nullable Output<String> configuredStatus;

    /**
     * @return Service status managed by the end user.
     * 
     */
    public Optional<Output<String>> configuredStatus() {
        return Optional.ofNullable(this.configuredStatus);
    }

    /**
     * Creation time.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Creation time.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Endpoints for accessing the Managed Object Storage service.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<ManagedObjectStorageEndpointArgs>> endpoints;

    /**
     * @return Endpoints for accessing the Managed Object Storage service.
     * 
     */
    public Optional<Output<List<ManagedObjectStorageEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * User defined key-value pairs to classify the managed object storage.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User defined key-value pairs to classify the managed object storage.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Name of the Managed Object Storage service. Must be unique within account.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Managed Object Storage service. Must be unique within account.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain access from multiple private networks that might reside in different zones, create the networks and a corresponding router for each network.
     * 
     */
    @Import(name="networks")
    private @Nullable Output<List<ManagedObjectStorageNetworkArgs>> networks;

    /**
     * @return Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain access from multiple private networks that might reside in different zones, create the networks and a corresponding router for each network.
     * 
     */
    public Optional<Output<List<ManagedObjectStorageNetworkArgs>>> networks() {
        return Optional.ofNullable(this.networks);
    }

    /**
     * Operational state of the Managed Object Storage service.
     * 
     */
    @Import(name="operationalState")
    private @Nullable Output<String> operationalState;

    /**
     * @return Operational state of the Managed Object Storage service.
     * 
     */
    public Optional<Output<String>> operationalState() {
        return Optional.ofNullable(this.operationalState);
    }

    /**
     * Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Creation time.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Creation time.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private ManagedObjectStorageState() {}

    private ManagedObjectStorageState(ManagedObjectStorageState $) {
        this.configuredStatus = $.configuredStatus;
        this.createdAt = $.createdAt;
        this.endpoints = $.endpoints;
        this.labels = $.labels;
        this.name = $.name;
        this.networks = $.networks;
        this.operationalState = $.operationalState;
        this.region = $.region;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedObjectStorageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedObjectStorageState $;

        public Builder() {
            $ = new ManagedObjectStorageState();
        }

        public Builder(ManagedObjectStorageState defaults) {
            $ = new ManagedObjectStorageState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuredStatus Service status managed by the end user.
         * 
         * @return builder
         * 
         */
        public Builder configuredStatus(@Nullable Output<String> configuredStatus) {
            $.configuredStatus = configuredStatus;
            return this;
        }

        /**
         * @param configuredStatus Service status managed by the end user.
         * 
         * @return builder
         * 
         */
        public Builder configuredStatus(String configuredStatus) {
            return configuredStatus(Output.of(configuredStatus));
        }

        /**
         * @param createdAt Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Creation time.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param endpoints Endpoints for accessing the Managed Object Storage service.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<List<ManagedObjectStorageEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints Endpoints for accessing the Managed Object Storage service.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(List<ManagedObjectStorageEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param endpoints Endpoints for accessing the Managed Object Storage service.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(ManagedObjectStorageEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param labels User defined key-value pairs to classify the managed object storage.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User defined key-value pairs to classify the managed object storage.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name Name of the Managed Object Storage service. Must be unique within account.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Managed Object Storage service. Must be unique within account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networks Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain access from multiple private networks that might reside in different zones, create the networks and a corresponding router for each network.
         * 
         * @return builder
         * 
         */
        public Builder networks(@Nullable Output<List<ManagedObjectStorageNetworkArgs>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain access from multiple private networks that might reside in different zones, create the networks and a corresponding router for each network.
         * 
         * @return builder
         * 
         */
        public Builder networks(List<ManagedObjectStorageNetworkArgs> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain access from multiple private networks that might reside in different zones, create the networks and a corresponding router for each network.
         * 
         * @return builder
         * 
         */
        public Builder networks(ManagedObjectStorageNetworkArgs... networks) {
            return networks(List.of(networks));
        }

        /**
         * @param operationalState Operational state of the Managed Object Storage service.
         * 
         * @return builder
         * 
         */
        public Builder operationalState(@Nullable Output<String> operationalState) {
            $.operationalState = operationalState;
            return this;
        }

        /**
         * @param operationalState Operational state of the Managed Object Storage service.
         * 
         * @return builder
         * 
         */
        public Builder operationalState(String operationalState) {
            return operationalState(Output.of(operationalState));
        }

        /**
         * @param region Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param updatedAt Creation time.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Creation time.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public ManagedObjectStorageState build() {
            return $;
        }
    }

}
