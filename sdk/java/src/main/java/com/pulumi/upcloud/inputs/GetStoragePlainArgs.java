// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStoragePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStoragePlainArgs Empty = new GetStoragePlainArgs();

    @Import(name="accessType")
    private @Nullable String accessType;

    public Optional<String> accessType() {
        return Optional.ofNullable(this.accessType);
    }

    @Import(name="id")
    private @Nullable String id;

    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * @deprecated
     * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
     * 
     */
    @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
    @Import(name="mostRecent")
    private @Nullable Boolean mostRecent;

    /**
     * @deprecated
     * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
     * 
     */
    @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }

    /**
     * @deprecated
     * Contains the same value as `title`. Use `title` instead.
     * 
     */
    @Deprecated /* Contains the same value as `title`. Use `title` instead. */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @deprecated
     * Contains the same value as `title`. Use `title` instead.
     * 
     */
    @Deprecated /* Contains the same value as `title`. Use `title` instead. */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * @deprecated
     * Use exact title or UUID instead.
     * 
     */
    @Deprecated /* Use exact title or UUID instead. */
    @Import(name="nameRegex")
    private @Nullable String nameRegex;

    /**
     * @deprecated
     * Use exact title or UUID instead.
     * 
     */
    @Deprecated /* Use exact title or UUID instead. */
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="title")
    private @Nullable String title;

    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="zone")
    private @Nullable String zone;

    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetStoragePlainArgs() {}

    private GetStoragePlainArgs(GetStoragePlainArgs $) {
        this.accessType = $.accessType;
        this.id = $.id;
        this.mostRecent = $.mostRecent;
        this.name = $.name;
        this.nameRegex = $.nameRegex;
        this.title = $.title;
        this.type = $.type;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStoragePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStoragePlainArgs $;

        public Builder() {
            $ = new GetStoragePlainArgs();
        }

        public Builder(GetStoragePlainArgs defaults) {
            $ = new GetStoragePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessType(@Nullable String accessType) {
            $.accessType = accessType;
            return this;
        }

        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage.
         * 
         */
        @Deprecated /* Use exact title or UUID to limit the number of matching storages. Note that if you have multiple storages with the same title, you should use UUID to select the storage. */
        public Builder mostRecent(@Nullable Boolean mostRecent) {
            $.mostRecent = mostRecent;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Contains the same value as `title`. Use `title` instead.
         * 
         */
        @Deprecated /* Contains the same value as `title`. Use `title` instead. */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use exact title or UUID instead.
         * 
         */
        @Deprecated /* Use exact title or UUID instead. */
        public Builder nameRegex(@Nullable String nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder title(@Nullable String title) {
            $.title = title;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder zone(@Nullable String zone) {
            $.zone = zone;
            return this;
        }

        public GetStoragePlainArgs build() {
            return $;
        }
    }

}
