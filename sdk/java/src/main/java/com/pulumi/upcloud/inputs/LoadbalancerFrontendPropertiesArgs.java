// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadbalancerFrontendPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerFrontendPropertiesArgs Empty = new LoadbalancerFrontendPropertiesArgs();

    /**
     * Enable or disable HTTP/2 support.
     * 
     */
    @Import(name="http2Enabled")
    private @Nullable Output<Boolean> http2Enabled;

    /**
     * @return Enable or disable HTTP/2 support.
     * 
     */
    public Optional<Output<Boolean>> http2Enabled() {
        return Optional.ofNullable(this.http2Enabled);
    }

    /**
     * Enable or disable inbound proxy protocol support.
     * 
     */
    @Import(name="inboundProxyProtocol")
    private @Nullable Output<Boolean> inboundProxyProtocol;

    /**
     * @return Enable or disable inbound proxy protocol support.
     * 
     */
    public Optional<Output<Boolean>> inboundProxyProtocol() {
        return Optional.ofNullable(this.inboundProxyProtocol);
    }

    /**
     * Client request timeout in seconds.
     * 
     */
    @Import(name="timeoutClient")
    private @Nullable Output<Integer> timeoutClient;

    /**
     * @return Client request timeout in seconds.
     * 
     */
    public Optional<Output<Integer>> timeoutClient() {
        return Optional.ofNullable(this.timeoutClient);
    }

    private LoadbalancerFrontendPropertiesArgs() {}

    private LoadbalancerFrontendPropertiesArgs(LoadbalancerFrontendPropertiesArgs $) {
        this.http2Enabled = $.http2Enabled;
        this.inboundProxyProtocol = $.inboundProxyProtocol;
        this.timeoutClient = $.timeoutClient;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerFrontendPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerFrontendPropertiesArgs $;

        public Builder() {
            $ = new LoadbalancerFrontendPropertiesArgs();
        }

        public Builder(LoadbalancerFrontendPropertiesArgs defaults) {
            $ = new LoadbalancerFrontendPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param http2Enabled Enable or disable HTTP/2 support.
         * 
         * @return builder
         * 
         */
        public Builder http2Enabled(@Nullable Output<Boolean> http2Enabled) {
            $.http2Enabled = http2Enabled;
            return this;
        }

        /**
         * @param http2Enabled Enable or disable HTTP/2 support.
         * 
         * @return builder
         * 
         */
        public Builder http2Enabled(Boolean http2Enabled) {
            return http2Enabled(Output.of(http2Enabled));
        }

        /**
         * @param inboundProxyProtocol Enable or disable inbound proxy protocol support.
         * 
         * @return builder
         * 
         */
        public Builder inboundProxyProtocol(@Nullable Output<Boolean> inboundProxyProtocol) {
            $.inboundProxyProtocol = inboundProxyProtocol;
            return this;
        }

        /**
         * @param inboundProxyProtocol Enable or disable inbound proxy protocol support.
         * 
         * @return builder
         * 
         */
        public Builder inboundProxyProtocol(Boolean inboundProxyProtocol) {
            return inboundProxyProtocol(Output.of(inboundProxyProtocol));
        }

        /**
         * @param timeoutClient Client request timeout in seconds.
         * 
         * @return builder
         * 
         */
        public Builder timeoutClient(@Nullable Output<Integer> timeoutClient) {
            $.timeoutClient = timeoutClient;
            return this;
        }

        /**
         * @param timeoutClient Client request timeout in seconds.
         * 
         * @return builder
         * 
         */
        public Builder timeoutClient(Integer timeoutClient) {
            return timeoutClient(Output.of(timeoutClient));
        }

        public LoadbalancerFrontendPropertiesArgs build() {
            return $;
        }
    }

}
