// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabasePostgresqlNodeStateArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabasePostgresqlNodeStateArgs Empty = new ManagedDatabasePostgresqlNodeStateArgs();

    /**
     * Name plus a node iteration
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name plus a node iteration
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Role of the node
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return Role of the node
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * State of the node
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State of the node
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private ManagedDatabasePostgresqlNodeStateArgs() {}

    private ManagedDatabasePostgresqlNodeStateArgs(ManagedDatabasePostgresqlNodeStateArgs $) {
        this.name = $.name;
        this.role = $.role;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabasePostgresqlNodeStateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabasePostgresqlNodeStateArgs $;

        public Builder() {
            $ = new ManagedDatabasePostgresqlNodeStateArgs();
        }

        public Builder(ManagedDatabasePostgresqlNodeStateArgs defaults) {
            $ = new ManagedDatabasePostgresqlNodeStateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name plus a node iteration
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name plus a node iteration
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param role Role of the node
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role of the node
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param state State of the node
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State of the node
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public ManagedDatabasePostgresqlNodeStateArgs build() {
            return $;
        }
    }

}
