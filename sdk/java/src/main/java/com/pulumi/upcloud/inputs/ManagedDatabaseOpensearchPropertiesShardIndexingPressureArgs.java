// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.upcloud.inputs.ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorArgs;
import com.pulumi.upcloud.inputs.ManagedDatabaseOpensearchPropertiesShardIndexingPressurePrimaryParameterArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs Empty = new ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs();

    /**
     * Enable or disable shard indexing backpressure. Enable or disable shard indexing backpressure. Default is false.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable or disable shard indexing backpressure. Enable or disable shard indexing backpressure. Default is false.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Run shard indexing backpressure in shadow mode or enforced mode. Run shard indexing backpressure in shadow mode or enforced mode.
     *             In shadow mode (value set as false), shard indexing backpressure tracks all granular-level metrics,
     *             but it doesn’t actually reject any indexing requests.
     *             In enforced mode (value set as true),
     *             shard indexing backpressure rejects any requests to the cluster that might cause a dip in its performance.
     *             Default is false.
     * 
     */
    @Import(name="enforced")
    private @Nullable Output<Boolean> enforced;

    /**
     * @return Run shard indexing backpressure in shadow mode or enforced mode. Run shard indexing backpressure in shadow mode or enforced mode.
     *             In shadow mode (value set as false), shard indexing backpressure tracks all granular-level metrics,
     *             but it doesn’t actually reject any indexing requests.
     *             In enforced mode (value set as true),
     *             shard indexing backpressure rejects any requests to the cluster that might cause a dip in its performance.
     *             Default is false.
     * 
     */
    public Optional<Output<Boolean>> enforced() {
        return Optional.ofNullable(this.enforced);
    }

    /**
     * Operating factor.
     * 
     */
    @Import(name="operatingFactor")
    private @Nullable Output<ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorArgs> operatingFactor;

    /**
     * @return Operating factor.
     * 
     */
    public Optional<Output<ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorArgs>> operatingFactor() {
        return Optional.ofNullable(this.operatingFactor);
    }

    /**
     * Primary parameter.
     * 
     */
    @Import(name="primaryParameter")
    private @Nullable Output<ManagedDatabaseOpensearchPropertiesShardIndexingPressurePrimaryParameterArgs> primaryParameter;

    /**
     * @return Primary parameter.
     * 
     */
    public Optional<Output<ManagedDatabaseOpensearchPropertiesShardIndexingPressurePrimaryParameterArgs>> primaryParameter() {
        return Optional.ofNullable(this.primaryParameter);
    }

    private ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs() {}

    private ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs(ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs $) {
        this.enabled = $.enabled;
        this.enforced = $.enforced;
        this.operatingFactor = $.operatingFactor;
        this.primaryParameter = $.primaryParameter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs $;

        public Builder() {
            $ = new ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs();
        }

        public Builder(ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs defaults) {
            $ = new ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable or disable shard indexing backpressure. Enable or disable shard indexing backpressure. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable or disable shard indexing backpressure. Enable or disable shard indexing backpressure. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param enforced Run shard indexing backpressure in shadow mode or enforced mode. Run shard indexing backpressure in shadow mode or enforced mode.
         *             In shadow mode (value set as false), shard indexing backpressure tracks all granular-level metrics,
         *             but it doesn’t actually reject any indexing requests.
         *             In enforced mode (value set as true),
         *             shard indexing backpressure rejects any requests to the cluster that might cause a dip in its performance.
         *             Default is false.
         * 
         * @return builder
         * 
         */
        public Builder enforced(@Nullable Output<Boolean> enforced) {
            $.enforced = enforced;
            return this;
        }

        /**
         * @param enforced Run shard indexing backpressure in shadow mode or enforced mode. Run shard indexing backpressure in shadow mode or enforced mode.
         *             In shadow mode (value set as false), shard indexing backpressure tracks all granular-level metrics,
         *             but it doesn’t actually reject any indexing requests.
         *             In enforced mode (value set as true),
         *             shard indexing backpressure rejects any requests to the cluster that might cause a dip in its performance.
         *             Default is false.
         * 
         * @return builder
         * 
         */
        public Builder enforced(Boolean enforced) {
            return enforced(Output.of(enforced));
        }

        /**
         * @param operatingFactor Operating factor.
         * 
         * @return builder
         * 
         */
        public Builder operatingFactor(@Nullable Output<ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorArgs> operatingFactor) {
            $.operatingFactor = operatingFactor;
            return this;
        }

        /**
         * @param operatingFactor Operating factor.
         * 
         * @return builder
         * 
         */
        public Builder operatingFactor(ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorArgs operatingFactor) {
            return operatingFactor(Output.of(operatingFactor));
        }

        /**
         * @param primaryParameter Primary parameter.
         * 
         * @return builder
         * 
         */
        public Builder primaryParameter(@Nullable Output<ManagedDatabaseOpensearchPropertiesShardIndexingPressurePrimaryParameterArgs> primaryParameter) {
            $.primaryParameter = primaryParameter;
            return this;
        }

        /**
         * @param primaryParameter Primary parameter.
         * 
         * @return builder
         * 
         */
        public Builder primaryParameter(ManagedDatabaseOpensearchPropertiesShardIndexingPressurePrimaryParameterArgs primaryParameter) {
            return primaryParameter(Output.of(primaryParameter));
        }

        public ManagedDatabaseOpensearchPropertiesShardIndexingPressureArgs build() {
            return $;
        }
    }

}
