// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesAuthFailureListeners;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesClusterRemoteStore;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesClusterSearchRequestSlowlog;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesDiskWatermarks;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesIndexRollup;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesIndexTemplate;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesOpenid;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesOpensearchDashboards;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesRemoteStore;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesSaml;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesSearchBackpressure;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueries;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesSegrep;
import com.pulumi.upcloud.outputs.ManagedDatabaseOpensearchPropertiesShardIndexingPressure;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedDatabaseOpensearchProperties {
    /**
     * @return action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
     * 
     */
    private @Nullable Boolean actionAutoCreateIndexEnabled;
    /**
     * @return Require explicit index names when deleting.
     * 
     */
    private @Nullable Boolean actionDestructiveRequiresName;
    /**
     * @return Opensearch Security Plugin Settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesAuthFailureListeners authFailureListeners;
    /**
     * @return Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
     * 
     */
    private @Nullable Boolean automaticUtilityNetworkIpFilter;
    /**
     * @return The limit of how much total remote data can be referenced. Defines a limit of how much total remote data can be referenced as a ratio of the size of the disk reserved for the file cache. This is designed to be a safeguard to prevent oversubscribing a cluster. Defaults to 0.
     * 
     */
    private @Nullable Integer clusterFilecacheRemoteDataRatio;
    /**
     * @return Controls the number of shards allowed in the cluster per data node.
     * 
     */
    private @Nullable Integer clusterMaxShardsPerNode;
    private @Nullable ManagedDatabaseOpensearchPropertiesClusterRemoteStore clusterRemoteStore;
    /**
     * @return When set to true, OpenSearch attempts to evenly distribute the primary shards between the cluster nodes. Enabling this setting does not always guarantee an equal number of primary shards on each node, especially in the event of a failover. Changing this setting to false after it was set to true does not invoke redistribution of primary shards. Default is false.
     * 
     */
    private @Nullable Boolean clusterRoutingAllocationBalancePreferPrimary;
    /**
     * @return Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to node cpu count * 2.
     * 
     */
    private @Nullable Integer clusterRoutingAllocationNodeConcurrentRecoveries;
    private @Nullable ManagedDatabaseOpensearchPropertiesClusterSearchRequestSlowlog clusterSearchRequestSlowlog;
    /**
     * @return Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     * 
     */
    private @Nullable String customDomain;
    /**
     * @return OpenSearch custom keystores. Allow to register custom keystores in OpenSearch.
     * 
     */
    private @Nullable List<String> customKeystores;
    /**
     * @return OpenSearch custom repositories. Allow to register object storage repositories in OpenSearch.
     * 
     */
    private @Nullable List<String> customRepos;
    /**
     * @return Watermark settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesDiskWatermarks diskWatermarks;
    /**
     * @return Elasticsearch version.
     * 
     */
    private @Nullable String elasticsearchVersion;
    /**
     * @return Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
     * 
     */
    private @Nullable String emailSenderName;
    /**
     * @return Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
     * 
     */
    private @Nullable String emailSenderPassword;
    /**
     * @return Sender username for Opensearch alerts.
     * 
     */
    private @Nullable String emailSenderUsername;
    /**
     * @return Enable remote-backed storage.
     * 
     */
    private @Nullable Boolean enableRemoteBackedStorage;
    /**
     * @return Enable searchable snapshots.
     * 
     */
    private @Nullable Boolean enableSearchableSnapshots;
    /**
     * @return Enable/Disable security audit.
     * 
     */
    private @Nullable Boolean enableSecurityAudit;
    /**
     * @return Enable/Disable snapshot API. Enable/Disable snapshot API for custom repositories, this requires security management to be enabled.
     * 
     */
    private @Nullable Boolean enableSnapshotApi;
    /**
     * @return Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     * 
     */
    private @Nullable Integer httpMaxContentLength;
    /**
     * @return The max size of allowed headers, in bytes.
     * 
     */
    private @Nullable Integer httpMaxHeaderSize;
    /**
     * @return The max length of an HTTP URL, in bytes.
     * 
     */
    private @Nullable Integer httpMaxInitialLineLength;
    /**
     * @return Index patterns.
     * 
     */
    private @Nullable List<String> indexPatterns;
    /**
     * @return Index rollup settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesIndexRollup indexRollup;
    /**
     * @return Template settings for all new indexes.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesIndexTemplate indexTemplate;
    /**
     * @return Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
     * 
     */
    private @Nullable Integer indicesFielddataCacheSize;
    /**
     * @return Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
     * 
     */
    private @Nullable Integer indicesMemoryIndexBufferSize;
    /**
     * @return Absolute value. Default is unbound. Doesn&#39;t work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
     * 
     */
    private @Nullable Integer indicesMemoryMaxIndexBufferSize;
    /**
     * @return Absolute value. Default is 48mb. Doesn&#39;t work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
     * 
     */
    private @Nullable Integer indicesMemoryMinIndexBufferSize;
    /**
     * @return Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
     * 
     */
    private @Nullable Integer indicesQueriesCacheSize;
    /**
     * @return Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
     * 
     */
    private @Nullable Integer indicesQueryBoolMaxClauseCount;
    /**
     * @return Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
     * 
     */
    private @Nullable Integer indicesRecoveryMaxBytesPerSec;
    /**
     * @return Number of file chunks sent in parallel for each recovery. Defaults to 2.
     * 
     */
    private @Nullable Integer indicesRecoveryMaxConcurrentFileChunks;
    /**
     * @return IP filter. Allow incoming connections from CIDR address block, e.g. &#39;10.20.0.0/16&#39;.
     * 
     */
    private @Nullable List<String> ipFilters;
    /**
     * @return Specifies whether ISM is enabled or not.
     * 
     */
    private @Nullable Boolean ismEnabled;
    /**
     * @return Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
     * 
     */
    private @Nullable Boolean ismHistoryEnabled;
    /**
     * @return The maximum age before rolling over the audit history index in hours.
     * 
     */
    private @Nullable Integer ismHistoryMaxAge;
    /**
     * @return The maximum number of documents before rolling over the audit history index.
     * 
     */
    private @Nullable Integer ismHistoryMaxDocs;
    /**
     * @return The time between rollover checks for the audit history index in hours.
     * 
     */
    private @Nullable Integer ismHistoryRolloverCheckPeriod;
    /**
     * @return How long audit history indices are kept in days.
     * 
     */
    private @Nullable Integer ismHistoryRolloverRetentionPeriod;
    /**
     * @return Don&#39;t reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn&#39;t fit your case, you can disable this by setting up this flag to true.
     * 
     */
    private @Nullable Boolean keepIndexRefreshInterval;
    /**
     * @return Enable or disable KNN memory circuit breaker. Defaults to true.
     * 
     */
    private @Nullable Boolean knnMemoryCircuitBreakerEnabled;
    /**
     * @return Maximum amount of memory in percentage that can be used for the KNN index. Defaults to 50% of the JVM heap size. 0 is used to set it to null which can be used to invalidate caches.
     * 
     */
    private @Nullable Integer knnMemoryCircuitBreakerLimit;
    /**
     * @return The limit of how much total remote data can be referenced. Defines a limit of how much total remote data can be referenced as a ratio of the size of the disk reserved for the file cache. This is designed to be a safeguard to prevent oversubscribing a cluster. Defaults to 5gb. Requires restarting all OpenSearch nodes.
     * 
     */
    private @Nullable String nodeSearchCacheSize;
    /**
     * @return OpenSearch OpenID Connect Configuration.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesOpenid openid;
    /**
     * @return OpenSearch Dashboards settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesOpensearchDashboards opensearchDashboards;
    /**
     * @return Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
     * 
     */
    private @Nullable Boolean overrideMainResponseVersion;
    /**
     * @return Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
     * 
     */
    private @Nullable Boolean pluginsAlertingFilterByBackendRoles;
    /**
     * @return Public Access. Allow access to the service from the public Internet.
     * 
     */
    private @Nullable Boolean publicAccess;
    /**
     * @return Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     * 
     */
    private @Nullable List<String> reindexRemoteWhitelists;
    private @Nullable ManagedDatabaseOpensearchPropertiesRemoteStore remoteStore;
    /**
     * @return OpenSearch SAML configuration.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesSaml saml;
    /**
     * @return Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
     * 
     */
    private @Nullable String scriptMaxCompilationsRate;
    /**
     * @return Search Backpressure Settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesSearchBackpressure searchBackpressure;
    private @Nullable ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueries searchInsightsTopQueries;
    /**
     * @return Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
     * 
     */
    private @Nullable Integer searchMaxBuckets;
    /**
     * @return Segment Replication Backpressure Settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesSegrep segrep;
    /**
     * @return Service logging. Store logs for the service so that they are available in the HTTP API and console.
     * 
     */
    private @Nullable Boolean serviceLog;
    /**
     * @return Shard indexing back pressure settings.
     * 
     */
    private @Nullable ManagedDatabaseOpensearchPropertiesShardIndexingPressure shardIndexingPressure;
    /**
     * @return analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolAnalyzeQueueSize;
    /**
     * @return analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolAnalyzeSize;
    /**
     * @return force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolForceMergeSize;
    /**
     * @return get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolGetQueueSize;
    /**
     * @return get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolGetSize;
    /**
     * @return search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolSearchQueueSize;
    /**
     * @return search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolSearchSize;
    /**
     * @return search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolSearchThrottledQueueSize;
    /**
     * @return search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolSearchThrottledSize;
    /**
     * @return write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    private @Nullable Integer threadPoolWriteQueueSize;
    /**
     * @return write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    private @Nullable Integer threadPoolWriteSize;
    /**
     * @return OpenSearch version.
     * 
     */
    private @Nullable String version;

    private ManagedDatabaseOpensearchProperties() {}
    /**
     * @return action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
     * 
     */
    public Optional<Boolean> actionAutoCreateIndexEnabled() {
        return Optional.ofNullable(this.actionAutoCreateIndexEnabled);
    }
    /**
     * @return Require explicit index names when deleting.
     * 
     */
    public Optional<Boolean> actionDestructiveRequiresName() {
        return Optional.ofNullable(this.actionDestructiveRequiresName);
    }
    /**
     * @return Opensearch Security Plugin Settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesAuthFailureListeners> authFailureListeners() {
        return Optional.ofNullable(this.authFailureListeners);
    }
    /**
     * @return Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
     * 
     */
    public Optional<Boolean> automaticUtilityNetworkIpFilter() {
        return Optional.ofNullable(this.automaticUtilityNetworkIpFilter);
    }
    /**
     * @return The limit of how much total remote data can be referenced. Defines a limit of how much total remote data can be referenced as a ratio of the size of the disk reserved for the file cache. This is designed to be a safeguard to prevent oversubscribing a cluster. Defaults to 0.
     * 
     */
    public Optional<Integer> clusterFilecacheRemoteDataRatio() {
        return Optional.ofNullable(this.clusterFilecacheRemoteDataRatio);
    }
    /**
     * @return Controls the number of shards allowed in the cluster per data node.
     * 
     */
    public Optional<Integer> clusterMaxShardsPerNode() {
        return Optional.ofNullable(this.clusterMaxShardsPerNode);
    }
    public Optional<ManagedDatabaseOpensearchPropertiesClusterRemoteStore> clusterRemoteStore() {
        return Optional.ofNullable(this.clusterRemoteStore);
    }
    /**
     * @return When set to true, OpenSearch attempts to evenly distribute the primary shards between the cluster nodes. Enabling this setting does not always guarantee an equal number of primary shards on each node, especially in the event of a failover. Changing this setting to false after it was set to true does not invoke redistribution of primary shards. Default is false.
     * 
     */
    public Optional<Boolean> clusterRoutingAllocationBalancePreferPrimary() {
        return Optional.ofNullable(this.clusterRoutingAllocationBalancePreferPrimary);
    }
    /**
     * @return Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to node cpu count * 2.
     * 
     */
    public Optional<Integer> clusterRoutingAllocationNodeConcurrentRecoveries() {
        return Optional.ofNullable(this.clusterRoutingAllocationNodeConcurrentRecoveries);
    }
    public Optional<ManagedDatabaseOpensearchPropertiesClusterSearchRequestSlowlog> clusterSearchRequestSlowlog() {
        return Optional.ofNullable(this.clusterSearchRequestSlowlog);
    }
    /**
     * @return Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
     * 
     */
    public Optional<String> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }
    /**
     * @return OpenSearch custom keystores. Allow to register custom keystores in OpenSearch.
     * 
     */
    public List<String> customKeystores() {
        return this.customKeystores == null ? List.of() : this.customKeystores;
    }
    /**
     * @return OpenSearch custom repositories. Allow to register object storage repositories in OpenSearch.
     * 
     */
    public List<String> customRepos() {
        return this.customRepos == null ? List.of() : this.customRepos;
    }
    /**
     * @return Watermark settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesDiskWatermarks> diskWatermarks() {
        return Optional.ofNullable(this.diskWatermarks);
    }
    /**
     * @return Elasticsearch version.
     * 
     */
    public Optional<String> elasticsearchVersion() {
        return Optional.ofNullable(this.elasticsearchVersion);
    }
    /**
     * @return Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
     * 
     */
    public Optional<String> emailSenderName() {
        return Optional.ofNullable(this.emailSenderName);
    }
    /**
     * @return Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
     * 
     */
    public Optional<String> emailSenderPassword() {
        return Optional.ofNullable(this.emailSenderPassword);
    }
    /**
     * @return Sender username for Opensearch alerts.
     * 
     */
    public Optional<String> emailSenderUsername() {
        return Optional.ofNullable(this.emailSenderUsername);
    }
    /**
     * @return Enable remote-backed storage.
     * 
     */
    public Optional<Boolean> enableRemoteBackedStorage() {
        return Optional.ofNullable(this.enableRemoteBackedStorage);
    }
    /**
     * @return Enable searchable snapshots.
     * 
     */
    public Optional<Boolean> enableSearchableSnapshots() {
        return Optional.ofNullable(this.enableSearchableSnapshots);
    }
    /**
     * @return Enable/Disable security audit.
     * 
     */
    public Optional<Boolean> enableSecurityAudit() {
        return Optional.ofNullable(this.enableSecurityAudit);
    }
    /**
     * @return Enable/Disable snapshot API. Enable/Disable snapshot API for custom repositories, this requires security management to be enabled.
     * 
     */
    public Optional<Boolean> enableSnapshotApi() {
        return Optional.ofNullable(this.enableSnapshotApi);
    }
    /**
     * @return Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
     * 
     */
    public Optional<Integer> httpMaxContentLength() {
        return Optional.ofNullable(this.httpMaxContentLength);
    }
    /**
     * @return The max size of allowed headers, in bytes.
     * 
     */
    public Optional<Integer> httpMaxHeaderSize() {
        return Optional.ofNullable(this.httpMaxHeaderSize);
    }
    /**
     * @return The max length of an HTTP URL, in bytes.
     * 
     */
    public Optional<Integer> httpMaxInitialLineLength() {
        return Optional.ofNullable(this.httpMaxInitialLineLength);
    }
    /**
     * @return Index patterns.
     * 
     */
    public List<String> indexPatterns() {
        return this.indexPatterns == null ? List.of() : this.indexPatterns;
    }
    /**
     * @return Index rollup settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesIndexRollup> indexRollup() {
        return Optional.ofNullable(this.indexRollup);
    }
    /**
     * @return Template settings for all new indexes.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesIndexTemplate> indexTemplate() {
        return Optional.ofNullable(this.indexTemplate);
    }
    /**
     * @return Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
     * 
     */
    public Optional<Integer> indicesFielddataCacheSize() {
        return Optional.ofNullable(this.indicesFielddataCacheSize);
    }
    /**
     * @return Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
     * 
     */
    public Optional<Integer> indicesMemoryIndexBufferSize() {
        return Optional.ofNullable(this.indicesMemoryIndexBufferSize);
    }
    /**
     * @return Absolute value. Default is unbound. Doesn&#39;t work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
     * 
     */
    public Optional<Integer> indicesMemoryMaxIndexBufferSize() {
        return Optional.ofNullable(this.indicesMemoryMaxIndexBufferSize);
    }
    /**
     * @return Absolute value. Default is 48mb. Doesn&#39;t work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
     * 
     */
    public Optional<Integer> indicesMemoryMinIndexBufferSize() {
        return Optional.ofNullable(this.indicesMemoryMinIndexBufferSize);
    }
    /**
     * @return Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
     * 
     */
    public Optional<Integer> indicesQueriesCacheSize() {
        return Optional.ofNullable(this.indicesQueriesCacheSize);
    }
    /**
     * @return Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
     * 
     */
    public Optional<Integer> indicesQueryBoolMaxClauseCount() {
        return Optional.ofNullable(this.indicesQueryBoolMaxClauseCount);
    }
    /**
     * @return Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
     * 
     */
    public Optional<Integer> indicesRecoveryMaxBytesPerSec() {
        return Optional.ofNullable(this.indicesRecoveryMaxBytesPerSec);
    }
    /**
     * @return Number of file chunks sent in parallel for each recovery. Defaults to 2.
     * 
     */
    public Optional<Integer> indicesRecoveryMaxConcurrentFileChunks() {
        return Optional.ofNullable(this.indicesRecoveryMaxConcurrentFileChunks);
    }
    /**
     * @return IP filter. Allow incoming connections from CIDR address block, e.g. &#39;10.20.0.0/16&#39;.
     * 
     */
    public List<String> ipFilters() {
        return this.ipFilters == null ? List.of() : this.ipFilters;
    }
    /**
     * @return Specifies whether ISM is enabled or not.
     * 
     */
    public Optional<Boolean> ismEnabled() {
        return Optional.ofNullable(this.ismEnabled);
    }
    /**
     * @return Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
     * 
     */
    public Optional<Boolean> ismHistoryEnabled() {
        return Optional.ofNullable(this.ismHistoryEnabled);
    }
    /**
     * @return The maximum age before rolling over the audit history index in hours.
     * 
     */
    public Optional<Integer> ismHistoryMaxAge() {
        return Optional.ofNullable(this.ismHistoryMaxAge);
    }
    /**
     * @return The maximum number of documents before rolling over the audit history index.
     * 
     */
    public Optional<Integer> ismHistoryMaxDocs() {
        return Optional.ofNullable(this.ismHistoryMaxDocs);
    }
    /**
     * @return The time between rollover checks for the audit history index in hours.
     * 
     */
    public Optional<Integer> ismHistoryRolloverCheckPeriod() {
        return Optional.ofNullable(this.ismHistoryRolloverCheckPeriod);
    }
    /**
     * @return How long audit history indices are kept in days.
     * 
     */
    public Optional<Integer> ismHistoryRolloverRetentionPeriod() {
        return Optional.ofNullable(this.ismHistoryRolloverRetentionPeriod);
    }
    /**
     * @return Don&#39;t reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn&#39;t fit your case, you can disable this by setting up this flag to true.
     * 
     */
    public Optional<Boolean> keepIndexRefreshInterval() {
        return Optional.ofNullable(this.keepIndexRefreshInterval);
    }
    /**
     * @return Enable or disable KNN memory circuit breaker. Defaults to true.
     * 
     */
    public Optional<Boolean> knnMemoryCircuitBreakerEnabled() {
        return Optional.ofNullable(this.knnMemoryCircuitBreakerEnabled);
    }
    /**
     * @return Maximum amount of memory in percentage that can be used for the KNN index. Defaults to 50% of the JVM heap size. 0 is used to set it to null which can be used to invalidate caches.
     * 
     */
    public Optional<Integer> knnMemoryCircuitBreakerLimit() {
        return Optional.ofNullable(this.knnMemoryCircuitBreakerLimit);
    }
    /**
     * @return The limit of how much total remote data can be referenced. Defines a limit of how much total remote data can be referenced as a ratio of the size of the disk reserved for the file cache. This is designed to be a safeguard to prevent oversubscribing a cluster. Defaults to 5gb. Requires restarting all OpenSearch nodes.
     * 
     */
    public Optional<String> nodeSearchCacheSize() {
        return Optional.ofNullable(this.nodeSearchCacheSize);
    }
    /**
     * @return OpenSearch OpenID Connect Configuration.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesOpenid> openid() {
        return Optional.ofNullable(this.openid);
    }
    /**
     * @return OpenSearch Dashboards settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesOpensearchDashboards> opensearchDashboards() {
        return Optional.ofNullable(this.opensearchDashboards);
    }
    /**
     * @return Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
     * 
     */
    public Optional<Boolean> overrideMainResponseVersion() {
        return Optional.ofNullable(this.overrideMainResponseVersion);
    }
    /**
     * @return Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
     * 
     */
    public Optional<Boolean> pluginsAlertingFilterByBackendRoles() {
        return Optional.ofNullable(this.pluginsAlertingFilterByBackendRoles);
    }
    /**
     * @return Public Access. Allow access to the service from the public Internet.
     * 
     */
    public Optional<Boolean> publicAccess() {
        return Optional.ofNullable(this.publicAccess);
    }
    /**
     * @return Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     * 
     */
    public List<String> reindexRemoteWhitelists() {
        return this.reindexRemoteWhitelists == null ? List.of() : this.reindexRemoteWhitelists;
    }
    public Optional<ManagedDatabaseOpensearchPropertiesRemoteStore> remoteStore() {
        return Optional.ofNullable(this.remoteStore);
    }
    /**
     * @return OpenSearch SAML configuration.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesSaml> saml() {
        return Optional.ofNullable(this.saml);
    }
    /**
     * @return Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
     * 
     */
    public Optional<String> scriptMaxCompilationsRate() {
        return Optional.ofNullable(this.scriptMaxCompilationsRate);
    }
    /**
     * @return Search Backpressure Settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesSearchBackpressure> searchBackpressure() {
        return Optional.ofNullable(this.searchBackpressure);
    }
    public Optional<ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueries> searchInsightsTopQueries() {
        return Optional.ofNullable(this.searchInsightsTopQueries);
    }
    /**
     * @return Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
     * 
     */
    public Optional<Integer> searchMaxBuckets() {
        return Optional.ofNullable(this.searchMaxBuckets);
    }
    /**
     * @return Segment Replication Backpressure Settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesSegrep> segrep() {
        return Optional.ofNullable(this.segrep);
    }
    /**
     * @return Service logging. Store logs for the service so that they are available in the HTTP API and console.
     * 
     */
    public Optional<Boolean> serviceLog() {
        return Optional.ofNullable(this.serviceLog);
    }
    /**
     * @return Shard indexing back pressure settings.
     * 
     */
    public Optional<ManagedDatabaseOpensearchPropertiesShardIndexingPressure> shardIndexingPressure() {
        return Optional.ofNullable(this.shardIndexingPressure);
    }
    /**
     * @return analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolAnalyzeQueueSize() {
        return Optional.ofNullable(this.threadPoolAnalyzeQueueSize);
    }
    /**
     * @return analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolAnalyzeSize() {
        return Optional.ofNullable(this.threadPoolAnalyzeSize);
    }
    /**
     * @return force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolForceMergeSize() {
        return Optional.ofNullable(this.threadPoolForceMergeSize);
    }
    /**
     * @return get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolGetQueueSize() {
        return Optional.ofNullable(this.threadPoolGetQueueSize);
    }
    /**
     * @return get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolGetSize() {
        return Optional.ofNullable(this.threadPoolGetSize);
    }
    /**
     * @return search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolSearchQueueSize() {
        return Optional.ofNullable(this.threadPoolSearchQueueSize);
    }
    /**
     * @return search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolSearchSize() {
        return Optional.ofNullable(this.threadPoolSearchSize);
    }
    /**
     * @return search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolSearchThrottledQueueSize() {
        return Optional.ofNullable(this.threadPoolSearchThrottledQueueSize);
    }
    /**
     * @return search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolSearchThrottledSize() {
        return Optional.ofNullable(this.threadPoolSearchThrottledSize);
    }
    /**
     * @return write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
     * 
     */
    public Optional<Integer> threadPoolWriteQueueSize() {
        return Optional.ofNullable(this.threadPoolWriteQueueSize);
    }
    /**
     * @return write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Optional<Integer> threadPoolWriteSize() {
        return Optional.ofNullable(this.threadPoolWriteSize);
    }
    /**
     * @return OpenSearch version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedDatabaseOpensearchProperties defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean actionAutoCreateIndexEnabled;
        private @Nullable Boolean actionDestructiveRequiresName;
        private @Nullable ManagedDatabaseOpensearchPropertiesAuthFailureListeners authFailureListeners;
        private @Nullable Boolean automaticUtilityNetworkIpFilter;
        private @Nullable Integer clusterFilecacheRemoteDataRatio;
        private @Nullable Integer clusterMaxShardsPerNode;
        private @Nullable ManagedDatabaseOpensearchPropertiesClusterRemoteStore clusterRemoteStore;
        private @Nullable Boolean clusterRoutingAllocationBalancePreferPrimary;
        private @Nullable Integer clusterRoutingAllocationNodeConcurrentRecoveries;
        private @Nullable ManagedDatabaseOpensearchPropertiesClusterSearchRequestSlowlog clusterSearchRequestSlowlog;
        private @Nullable String customDomain;
        private @Nullable List<String> customKeystores;
        private @Nullable List<String> customRepos;
        private @Nullable ManagedDatabaseOpensearchPropertiesDiskWatermarks diskWatermarks;
        private @Nullable String elasticsearchVersion;
        private @Nullable String emailSenderName;
        private @Nullable String emailSenderPassword;
        private @Nullable String emailSenderUsername;
        private @Nullable Boolean enableRemoteBackedStorage;
        private @Nullable Boolean enableSearchableSnapshots;
        private @Nullable Boolean enableSecurityAudit;
        private @Nullable Boolean enableSnapshotApi;
        private @Nullable Integer httpMaxContentLength;
        private @Nullable Integer httpMaxHeaderSize;
        private @Nullable Integer httpMaxInitialLineLength;
        private @Nullable List<String> indexPatterns;
        private @Nullable ManagedDatabaseOpensearchPropertiesIndexRollup indexRollup;
        private @Nullable ManagedDatabaseOpensearchPropertiesIndexTemplate indexTemplate;
        private @Nullable Integer indicesFielddataCacheSize;
        private @Nullable Integer indicesMemoryIndexBufferSize;
        private @Nullable Integer indicesMemoryMaxIndexBufferSize;
        private @Nullable Integer indicesMemoryMinIndexBufferSize;
        private @Nullable Integer indicesQueriesCacheSize;
        private @Nullable Integer indicesQueryBoolMaxClauseCount;
        private @Nullable Integer indicesRecoveryMaxBytesPerSec;
        private @Nullable Integer indicesRecoveryMaxConcurrentFileChunks;
        private @Nullable List<String> ipFilters;
        private @Nullable Boolean ismEnabled;
        private @Nullable Boolean ismHistoryEnabled;
        private @Nullable Integer ismHistoryMaxAge;
        private @Nullable Integer ismHistoryMaxDocs;
        private @Nullable Integer ismHistoryRolloverCheckPeriod;
        private @Nullable Integer ismHistoryRolloverRetentionPeriod;
        private @Nullable Boolean keepIndexRefreshInterval;
        private @Nullable Boolean knnMemoryCircuitBreakerEnabled;
        private @Nullable Integer knnMemoryCircuitBreakerLimit;
        private @Nullable String nodeSearchCacheSize;
        private @Nullable ManagedDatabaseOpensearchPropertiesOpenid openid;
        private @Nullable ManagedDatabaseOpensearchPropertiesOpensearchDashboards opensearchDashboards;
        private @Nullable Boolean overrideMainResponseVersion;
        private @Nullable Boolean pluginsAlertingFilterByBackendRoles;
        private @Nullable Boolean publicAccess;
        private @Nullable List<String> reindexRemoteWhitelists;
        private @Nullable ManagedDatabaseOpensearchPropertiesRemoteStore remoteStore;
        private @Nullable ManagedDatabaseOpensearchPropertiesSaml saml;
        private @Nullable String scriptMaxCompilationsRate;
        private @Nullable ManagedDatabaseOpensearchPropertiesSearchBackpressure searchBackpressure;
        private @Nullable ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueries searchInsightsTopQueries;
        private @Nullable Integer searchMaxBuckets;
        private @Nullable ManagedDatabaseOpensearchPropertiesSegrep segrep;
        private @Nullable Boolean serviceLog;
        private @Nullable ManagedDatabaseOpensearchPropertiesShardIndexingPressure shardIndexingPressure;
        private @Nullable Integer threadPoolAnalyzeQueueSize;
        private @Nullable Integer threadPoolAnalyzeSize;
        private @Nullable Integer threadPoolForceMergeSize;
        private @Nullable Integer threadPoolGetQueueSize;
        private @Nullable Integer threadPoolGetSize;
        private @Nullable Integer threadPoolSearchQueueSize;
        private @Nullable Integer threadPoolSearchSize;
        private @Nullable Integer threadPoolSearchThrottledQueueSize;
        private @Nullable Integer threadPoolSearchThrottledSize;
        private @Nullable Integer threadPoolWriteQueueSize;
        private @Nullable Integer threadPoolWriteSize;
        private @Nullable String version;
        public Builder() {}
        public Builder(ManagedDatabaseOpensearchProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionAutoCreateIndexEnabled = defaults.actionAutoCreateIndexEnabled;
    	      this.actionDestructiveRequiresName = defaults.actionDestructiveRequiresName;
    	      this.authFailureListeners = defaults.authFailureListeners;
    	      this.automaticUtilityNetworkIpFilter = defaults.automaticUtilityNetworkIpFilter;
    	      this.clusterFilecacheRemoteDataRatio = defaults.clusterFilecacheRemoteDataRatio;
    	      this.clusterMaxShardsPerNode = defaults.clusterMaxShardsPerNode;
    	      this.clusterRemoteStore = defaults.clusterRemoteStore;
    	      this.clusterRoutingAllocationBalancePreferPrimary = defaults.clusterRoutingAllocationBalancePreferPrimary;
    	      this.clusterRoutingAllocationNodeConcurrentRecoveries = defaults.clusterRoutingAllocationNodeConcurrentRecoveries;
    	      this.clusterSearchRequestSlowlog = defaults.clusterSearchRequestSlowlog;
    	      this.customDomain = defaults.customDomain;
    	      this.customKeystores = defaults.customKeystores;
    	      this.customRepos = defaults.customRepos;
    	      this.diskWatermarks = defaults.diskWatermarks;
    	      this.elasticsearchVersion = defaults.elasticsearchVersion;
    	      this.emailSenderName = defaults.emailSenderName;
    	      this.emailSenderPassword = defaults.emailSenderPassword;
    	      this.emailSenderUsername = defaults.emailSenderUsername;
    	      this.enableRemoteBackedStorage = defaults.enableRemoteBackedStorage;
    	      this.enableSearchableSnapshots = defaults.enableSearchableSnapshots;
    	      this.enableSecurityAudit = defaults.enableSecurityAudit;
    	      this.enableSnapshotApi = defaults.enableSnapshotApi;
    	      this.httpMaxContentLength = defaults.httpMaxContentLength;
    	      this.httpMaxHeaderSize = defaults.httpMaxHeaderSize;
    	      this.httpMaxInitialLineLength = defaults.httpMaxInitialLineLength;
    	      this.indexPatterns = defaults.indexPatterns;
    	      this.indexRollup = defaults.indexRollup;
    	      this.indexTemplate = defaults.indexTemplate;
    	      this.indicesFielddataCacheSize = defaults.indicesFielddataCacheSize;
    	      this.indicesMemoryIndexBufferSize = defaults.indicesMemoryIndexBufferSize;
    	      this.indicesMemoryMaxIndexBufferSize = defaults.indicesMemoryMaxIndexBufferSize;
    	      this.indicesMemoryMinIndexBufferSize = defaults.indicesMemoryMinIndexBufferSize;
    	      this.indicesQueriesCacheSize = defaults.indicesQueriesCacheSize;
    	      this.indicesQueryBoolMaxClauseCount = defaults.indicesQueryBoolMaxClauseCount;
    	      this.indicesRecoveryMaxBytesPerSec = defaults.indicesRecoveryMaxBytesPerSec;
    	      this.indicesRecoveryMaxConcurrentFileChunks = defaults.indicesRecoveryMaxConcurrentFileChunks;
    	      this.ipFilters = defaults.ipFilters;
    	      this.ismEnabled = defaults.ismEnabled;
    	      this.ismHistoryEnabled = defaults.ismHistoryEnabled;
    	      this.ismHistoryMaxAge = defaults.ismHistoryMaxAge;
    	      this.ismHistoryMaxDocs = defaults.ismHistoryMaxDocs;
    	      this.ismHistoryRolloverCheckPeriod = defaults.ismHistoryRolloverCheckPeriod;
    	      this.ismHistoryRolloverRetentionPeriod = defaults.ismHistoryRolloverRetentionPeriod;
    	      this.keepIndexRefreshInterval = defaults.keepIndexRefreshInterval;
    	      this.knnMemoryCircuitBreakerEnabled = defaults.knnMemoryCircuitBreakerEnabled;
    	      this.knnMemoryCircuitBreakerLimit = defaults.knnMemoryCircuitBreakerLimit;
    	      this.nodeSearchCacheSize = defaults.nodeSearchCacheSize;
    	      this.openid = defaults.openid;
    	      this.opensearchDashboards = defaults.opensearchDashboards;
    	      this.overrideMainResponseVersion = defaults.overrideMainResponseVersion;
    	      this.pluginsAlertingFilterByBackendRoles = defaults.pluginsAlertingFilterByBackendRoles;
    	      this.publicAccess = defaults.publicAccess;
    	      this.reindexRemoteWhitelists = defaults.reindexRemoteWhitelists;
    	      this.remoteStore = defaults.remoteStore;
    	      this.saml = defaults.saml;
    	      this.scriptMaxCompilationsRate = defaults.scriptMaxCompilationsRate;
    	      this.searchBackpressure = defaults.searchBackpressure;
    	      this.searchInsightsTopQueries = defaults.searchInsightsTopQueries;
    	      this.searchMaxBuckets = defaults.searchMaxBuckets;
    	      this.segrep = defaults.segrep;
    	      this.serviceLog = defaults.serviceLog;
    	      this.shardIndexingPressure = defaults.shardIndexingPressure;
    	      this.threadPoolAnalyzeQueueSize = defaults.threadPoolAnalyzeQueueSize;
    	      this.threadPoolAnalyzeSize = defaults.threadPoolAnalyzeSize;
    	      this.threadPoolForceMergeSize = defaults.threadPoolForceMergeSize;
    	      this.threadPoolGetQueueSize = defaults.threadPoolGetQueueSize;
    	      this.threadPoolGetSize = defaults.threadPoolGetSize;
    	      this.threadPoolSearchQueueSize = defaults.threadPoolSearchQueueSize;
    	      this.threadPoolSearchSize = defaults.threadPoolSearchSize;
    	      this.threadPoolSearchThrottledQueueSize = defaults.threadPoolSearchThrottledQueueSize;
    	      this.threadPoolSearchThrottledSize = defaults.threadPoolSearchThrottledSize;
    	      this.threadPoolWriteQueueSize = defaults.threadPoolWriteQueueSize;
    	      this.threadPoolWriteSize = defaults.threadPoolWriteSize;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder actionAutoCreateIndexEnabled(@Nullable Boolean actionAutoCreateIndexEnabled) {

            this.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder actionDestructiveRequiresName(@Nullable Boolean actionDestructiveRequiresName) {

            this.actionDestructiveRequiresName = actionDestructiveRequiresName;
            return this;
        }
        @CustomType.Setter
        public Builder authFailureListeners(@Nullable ManagedDatabaseOpensearchPropertiesAuthFailureListeners authFailureListeners) {

            this.authFailureListeners = authFailureListeners;
            return this;
        }
        @CustomType.Setter
        public Builder automaticUtilityNetworkIpFilter(@Nullable Boolean automaticUtilityNetworkIpFilter) {

            this.automaticUtilityNetworkIpFilter = automaticUtilityNetworkIpFilter;
            return this;
        }
        @CustomType.Setter
        public Builder clusterFilecacheRemoteDataRatio(@Nullable Integer clusterFilecacheRemoteDataRatio) {

            this.clusterFilecacheRemoteDataRatio = clusterFilecacheRemoteDataRatio;
            return this;
        }
        @CustomType.Setter
        public Builder clusterMaxShardsPerNode(@Nullable Integer clusterMaxShardsPerNode) {

            this.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
            return this;
        }
        @CustomType.Setter
        public Builder clusterRemoteStore(@Nullable ManagedDatabaseOpensearchPropertiesClusterRemoteStore clusterRemoteStore) {

            this.clusterRemoteStore = clusterRemoteStore;
            return this;
        }
        @CustomType.Setter
        public Builder clusterRoutingAllocationBalancePreferPrimary(@Nullable Boolean clusterRoutingAllocationBalancePreferPrimary) {

            this.clusterRoutingAllocationBalancePreferPrimary = clusterRoutingAllocationBalancePreferPrimary;
            return this;
        }
        @CustomType.Setter
        public Builder clusterRoutingAllocationNodeConcurrentRecoveries(@Nullable Integer clusterRoutingAllocationNodeConcurrentRecoveries) {

            this.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
            return this;
        }
        @CustomType.Setter
        public Builder clusterSearchRequestSlowlog(@Nullable ManagedDatabaseOpensearchPropertiesClusterSearchRequestSlowlog clusterSearchRequestSlowlog) {

            this.clusterSearchRequestSlowlog = clusterSearchRequestSlowlog;
            return this;
        }
        @CustomType.Setter
        public Builder customDomain(@Nullable String customDomain) {

            this.customDomain = customDomain;
            return this;
        }
        @CustomType.Setter
        public Builder customKeystores(@Nullable List<String> customKeystores) {

            this.customKeystores = customKeystores;
            return this;
        }
        public Builder customKeystores(String... customKeystores) {
            return customKeystores(List.of(customKeystores));
        }
        @CustomType.Setter
        public Builder customRepos(@Nullable List<String> customRepos) {

            this.customRepos = customRepos;
            return this;
        }
        public Builder customRepos(String... customRepos) {
            return customRepos(List.of(customRepos));
        }
        @CustomType.Setter
        public Builder diskWatermarks(@Nullable ManagedDatabaseOpensearchPropertiesDiskWatermarks diskWatermarks) {

            this.diskWatermarks = diskWatermarks;
            return this;
        }
        @CustomType.Setter
        public Builder elasticsearchVersion(@Nullable String elasticsearchVersion) {

            this.elasticsearchVersion = elasticsearchVersion;
            return this;
        }
        @CustomType.Setter
        public Builder emailSenderName(@Nullable String emailSenderName) {

            this.emailSenderName = emailSenderName;
            return this;
        }
        @CustomType.Setter
        public Builder emailSenderPassword(@Nullable String emailSenderPassword) {

            this.emailSenderPassword = emailSenderPassword;
            return this;
        }
        @CustomType.Setter
        public Builder emailSenderUsername(@Nullable String emailSenderUsername) {

            this.emailSenderUsername = emailSenderUsername;
            return this;
        }
        @CustomType.Setter
        public Builder enableRemoteBackedStorage(@Nullable Boolean enableRemoteBackedStorage) {

            this.enableRemoteBackedStorage = enableRemoteBackedStorage;
            return this;
        }
        @CustomType.Setter
        public Builder enableSearchableSnapshots(@Nullable Boolean enableSearchableSnapshots) {

            this.enableSearchableSnapshots = enableSearchableSnapshots;
            return this;
        }
        @CustomType.Setter
        public Builder enableSecurityAudit(@Nullable Boolean enableSecurityAudit) {

            this.enableSecurityAudit = enableSecurityAudit;
            return this;
        }
        @CustomType.Setter
        public Builder enableSnapshotApi(@Nullable Boolean enableSnapshotApi) {

            this.enableSnapshotApi = enableSnapshotApi;
            return this;
        }
        @CustomType.Setter
        public Builder httpMaxContentLength(@Nullable Integer httpMaxContentLength) {

            this.httpMaxContentLength = httpMaxContentLength;
            return this;
        }
        @CustomType.Setter
        public Builder httpMaxHeaderSize(@Nullable Integer httpMaxHeaderSize) {

            this.httpMaxHeaderSize = httpMaxHeaderSize;
            return this;
        }
        @CustomType.Setter
        public Builder httpMaxInitialLineLength(@Nullable Integer httpMaxInitialLineLength) {

            this.httpMaxInitialLineLength = httpMaxInitialLineLength;
            return this;
        }
        @CustomType.Setter
        public Builder indexPatterns(@Nullable List<String> indexPatterns) {

            this.indexPatterns = indexPatterns;
            return this;
        }
        public Builder indexPatterns(String... indexPatterns) {
            return indexPatterns(List.of(indexPatterns));
        }
        @CustomType.Setter
        public Builder indexRollup(@Nullable ManagedDatabaseOpensearchPropertiesIndexRollup indexRollup) {

            this.indexRollup = indexRollup;
            return this;
        }
        @CustomType.Setter
        public Builder indexTemplate(@Nullable ManagedDatabaseOpensearchPropertiesIndexTemplate indexTemplate) {

            this.indexTemplate = indexTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder indicesFielddataCacheSize(@Nullable Integer indicesFielddataCacheSize) {

            this.indicesFielddataCacheSize = indicesFielddataCacheSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesMemoryIndexBufferSize(@Nullable Integer indicesMemoryIndexBufferSize) {

            this.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesMemoryMaxIndexBufferSize(@Nullable Integer indicesMemoryMaxIndexBufferSize) {

            this.indicesMemoryMaxIndexBufferSize = indicesMemoryMaxIndexBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesMemoryMinIndexBufferSize(@Nullable Integer indicesMemoryMinIndexBufferSize) {

            this.indicesMemoryMinIndexBufferSize = indicesMemoryMinIndexBufferSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesQueriesCacheSize(@Nullable Integer indicesQueriesCacheSize) {

            this.indicesQueriesCacheSize = indicesQueriesCacheSize;
            return this;
        }
        @CustomType.Setter
        public Builder indicesQueryBoolMaxClauseCount(@Nullable Integer indicesQueryBoolMaxClauseCount) {

            this.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
            return this;
        }
        @CustomType.Setter
        public Builder indicesRecoveryMaxBytesPerSec(@Nullable Integer indicesRecoveryMaxBytesPerSec) {

            this.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
            return this;
        }
        @CustomType.Setter
        public Builder indicesRecoveryMaxConcurrentFileChunks(@Nullable Integer indicesRecoveryMaxConcurrentFileChunks) {

            this.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
            return this;
        }
        @CustomType.Setter
        public Builder ipFilters(@Nullable List<String> ipFilters) {

            this.ipFilters = ipFilters;
            return this;
        }
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }
        @CustomType.Setter
        public Builder ismEnabled(@Nullable Boolean ismEnabled) {

            this.ismEnabled = ismEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryEnabled(@Nullable Boolean ismHistoryEnabled) {

            this.ismHistoryEnabled = ismHistoryEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryMaxAge(@Nullable Integer ismHistoryMaxAge) {

            this.ismHistoryMaxAge = ismHistoryMaxAge;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryMaxDocs(@Nullable Integer ismHistoryMaxDocs) {

            this.ismHistoryMaxDocs = ismHistoryMaxDocs;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryRolloverCheckPeriod(@Nullable Integer ismHistoryRolloverCheckPeriod) {

            this.ismHistoryRolloverCheckPeriod = ismHistoryRolloverCheckPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder ismHistoryRolloverRetentionPeriod(@Nullable Integer ismHistoryRolloverRetentionPeriod) {

            this.ismHistoryRolloverRetentionPeriod = ismHistoryRolloverRetentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder keepIndexRefreshInterval(@Nullable Boolean keepIndexRefreshInterval) {

            this.keepIndexRefreshInterval = keepIndexRefreshInterval;
            return this;
        }
        @CustomType.Setter
        public Builder knnMemoryCircuitBreakerEnabled(@Nullable Boolean knnMemoryCircuitBreakerEnabled) {

            this.knnMemoryCircuitBreakerEnabled = knnMemoryCircuitBreakerEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder knnMemoryCircuitBreakerLimit(@Nullable Integer knnMemoryCircuitBreakerLimit) {

            this.knnMemoryCircuitBreakerLimit = knnMemoryCircuitBreakerLimit;
            return this;
        }
        @CustomType.Setter
        public Builder nodeSearchCacheSize(@Nullable String nodeSearchCacheSize) {

            this.nodeSearchCacheSize = nodeSearchCacheSize;
            return this;
        }
        @CustomType.Setter
        public Builder openid(@Nullable ManagedDatabaseOpensearchPropertiesOpenid openid) {

            this.openid = openid;
            return this;
        }
        @CustomType.Setter
        public Builder opensearchDashboards(@Nullable ManagedDatabaseOpensearchPropertiesOpensearchDashboards opensearchDashboards) {

            this.opensearchDashboards = opensearchDashboards;
            return this;
        }
        @CustomType.Setter
        public Builder overrideMainResponseVersion(@Nullable Boolean overrideMainResponseVersion) {

            this.overrideMainResponseVersion = overrideMainResponseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder pluginsAlertingFilterByBackendRoles(@Nullable Boolean pluginsAlertingFilterByBackendRoles) {

            this.pluginsAlertingFilterByBackendRoles = pluginsAlertingFilterByBackendRoles;
            return this;
        }
        @CustomType.Setter
        public Builder publicAccess(@Nullable Boolean publicAccess) {

            this.publicAccess = publicAccess;
            return this;
        }
        @CustomType.Setter
        public Builder reindexRemoteWhitelists(@Nullable List<String> reindexRemoteWhitelists) {

            this.reindexRemoteWhitelists = reindexRemoteWhitelists;
            return this;
        }
        public Builder reindexRemoteWhitelists(String... reindexRemoteWhitelists) {
            return reindexRemoteWhitelists(List.of(reindexRemoteWhitelists));
        }
        @CustomType.Setter
        public Builder remoteStore(@Nullable ManagedDatabaseOpensearchPropertiesRemoteStore remoteStore) {

            this.remoteStore = remoteStore;
            return this;
        }
        @CustomType.Setter
        public Builder saml(@Nullable ManagedDatabaseOpensearchPropertiesSaml saml) {

            this.saml = saml;
            return this;
        }
        @CustomType.Setter
        public Builder scriptMaxCompilationsRate(@Nullable String scriptMaxCompilationsRate) {

            this.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
            return this;
        }
        @CustomType.Setter
        public Builder searchBackpressure(@Nullable ManagedDatabaseOpensearchPropertiesSearchBackpressure searchBackpressure) {

            this.searchBackpressure = searchBackpressure;
            return this;
        }
        @CustomType.Setter
        public Builder searchInsightsTopQueries(@Nullable ManagedDatabaseOpensearchPropertiesSearchInsightsTopQueries searchInsightsTopQueries) {

            this.searchInsightsTopQueries = searchInsightsTopQueries;
            return this;
        }
        @CustomType.Setter
        public Builder searchMaxBuckets(@Nullable Integer searchMaxBuckets) {

            this.searchMaxBuckets = searchMaxBuckets;
            return this;
        }
        @CustomType.Setter
        public Builder segrep(@Nullable ManagedDatabaseOpensearchPropertiesSegrep segrep) {

            this.segrep = segrep;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLog(@Nullable Boolean serviceLog) {

            this.serviceLog = serviceLog;
            return this;
        }
        @CustomType.Setter
        public Builder shardIndexingPressure(@Nullable ManagedDatabaseOpensearchPropertiesShardIndexingPressure shardIndexingPressure) {

            this.shardIndexingPressure = shardIndexingPressure;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolAnalyzeQueueSize(@Nullable Integer threadPoolAnalyzeQueueSize) {

            this.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolAnalyzeSize(@Nullable Integer threadPoolAnalyzeSize) {

            this.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolForceMergeSize(@Nullable Integer threadPoolForceMergeSize) {

            this.threadPoolForceMergeSize = threadPoolForceMergeSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolGetQueueSize(@Nullable Integer threadPoolGetQueueSize) {

            this.threadPoolGetQueueSize = threadPoolGetQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolGetSize(@Nullable Integer threadPoolGetSize) {

            this.threadPoolGetSize = threadPoolGetSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchQueueSize(@Nullable Integer threadPoolSearchQueueSize) {

            this.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchSize(@Nullable Integer threadPoolSearchSize) {

            this.threadPoolSearchSize = threadPoolSearchSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchThrottledQueueSize(@Nullable Integer threadPoolSearchThrottledQueueSize) {

            this.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolSearchThrottledSize(@Nullable Integer threadPoolSearchThrottledSize) {

            this.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolWriteQueueSize(@Nullable Integer threadPoolWriteQueueSize) {

            this.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
            return this;
        }
        @CustomType.Setter
        public Builder threadPoolWriteSize(@Nullable Integer threadPoolWriteSize) {

            this.threadPoolWriteSize = threadPoolWriteSize;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public ManagedDatabaseOpensearchProperties build() {
            final var _resultValue = new ManagedDatabaseOpensearchProperties();
            _resultValue.actionAutoCreateIndexEnabled = actionAutoCreateIndexEnabled;
            _resultValue.actionDestructiveRequiresName = actionDestructiveRequiresName;
            _resultValue.authFailureListeners = authFailureListeners;
            _resultValue.automaticUtilityNetworkIpFilter = automaticUtilityNetworkIpFilter;
            _resultValue.clusterFilecacheRemoteDataRatio = clusterFilecacheRemoteDataRatio;
            _resultValue.clusterMaxShardsPerNode = clusterMaxShardsPerNode;
            _resultValue.clusterRemoteStore = clusterRemoteStore;
            _resultValue.clusterRoutingAllocationBalancePreferPrimary = clusterRoutingAllocationBalancePreferPrimary;
            _resultValue.clusterRoutingAllocationNodeConcurrentRecoveries = clusterRoutingAllocationNodeConcurrentRecoveries;
            _resultValue.clusterSearchRequestSlowlog = clusterSearchRequestSlowlog;
            _resultValue.customDomain = customDomain;
            _resultValue.customKeystores = customKeystores;
            _resultValue.customRepos = customRepos;
            _resultValue.diskWatermarks = diskWatermarks;
            _resultValue.elasticsearchVersion = elasticsearchVersion;
            _resultValue.emailSenderName = emailSenderName;
            _resultValue.emailSenderPassword = emailSenderPassword;
            _resultValue.emailSenderUsername = emailSenderUsername;
            _resultValue.enableRemoteBackedStorage = enableRemoteBackedStorage;
            _resultValue.enableSearchableSnapshots = enableSearchableSnapshots;
            _resultValue.enableSecurityAudit = enableSecurityAudit;
            _resultValue.enableSnapshotApi = enableSnapshotApi;
            _resultValue.httpMaxContentLength = httpMaxContentLength;
            _resultValue.httpMaxHeaderSize = httpMaxHeaderSize;
            _resultValue.httpMaxInitialLineLength = httpMaxInitialLineLength;
            _resultValue.indexPatterns = indexPatterns;
            _resultValue.indexRollup = indexRollup;
            _resultValue.indexTemplate = indexTemplate;
            _resultValue.indicesFielddataCacheSize = indicesFielddataCacheSize;
            _resultValue.indicesMemoryIndexBufferSize = indicesMemoryIndexBufferSize;
            _resultValue.indicesMemoryMaxIndexBufferSize = indicesMemoryMaxIndexBufferSize;
            _resultValue.indicesMemoryMinIndexBufferSize = indicesMemoryMinIndexBufferSize;
            _resultValue.indicesQueriesCacheSize = indicesQueriesCacheSize;
            _resultValue.indicesQueryBoolMaxClauseCount = indicesQueryBoolMaxClauseCount;
            _resultValue.indicesRecoveryMaxBytesPerSec = indicesRecoveryMaxBytesPerSec;
            _resultValue.indicesRecoveryMaxConcurrentFileChunks = indicesRecoveryMaxConcurrentFileChunks;
            _resultValue.ipFilters = ipFilters;
            _resultValue.ismEnabled = ismEnabled;
            _resultValue.ismHistoryEnabled = ismHistoryEnabled;
            _resultValue.ismHistoryMaxAge = ismHistoryMaxAge;
            _resultValue.ismHistoryMaxDocs = ismHistoryMaxDocs;
            _resultValue.ismHistoryRolloverCheckPeriod = ismHistoryRolloverCheckPeriod;
            _resultValue.ismHistoryRolloverRetentionPeriod = ismHistoryRolloverRetentionPeriod;
            _resultValue.keepIndexRefreshInterval = keepIndexRefreshInterval;
            _resultValue.knnMemoryCircuitBreakerEnabled = knnMemoryCircuitBreakerEnabled;
            _resultValue.knnMemoryCircuitBreakerLimit = knnMemoryCircuitBreakerLimit;
            _resultValue.nodeSearchCacheSize = nodeSearchCacheSize;
            _resultValue.openid = openid;
            _resultValue.opensearchDashboards = opensearchDashboards;
            _resultValue.overrideMainResponseVersion = overrideMainResponseVersion;
            _resultValue.pluginsAlertingFilterByBackendRoles = pluginsAlertingFilterByBackendRoles;
            _resultValue.publicAccess = publicAccess;
            _resultValue.reindexRemoteWhitelists = reindexRemoteWhitelists;
            _resultValue.remoteStore = remoteStore;
            _resultValue.saml = saml;
            _resultValue.scriptMaxCompilationsRate = scriptMaxCompilationsRate;
            _resultValue.searchBackpressure = searchBackpressure;
            _resultValue.searchInsightsTopQueries = searchInsightsTopQueries;
            _resultValue.searchMaxBuckets = searchMaxBuckets;
            _resultValue.segrep = segrep;
            _resultValue.serviceLog = serviceLog;
            _resultValue.shardIndexingPressure = shardIndexingPressure;
            _resultValue.threadPoolAnalyzeQueueSize = threadPoolAnalyzeQueueSize;
            _resultValue.threadPoolAnalyzeSize = threadPoolAnalyzeSize;
            _resultValue.threadPoolForceMergeSize = threadPoolForceMergeSize;
            _resultValue.threadPoolGetQueueSize = threadPoolGetQueueSize;
            _resultValue.threadPoolGetSize = threadPoolGetSize;
            _resultValue.threadPoolSearchQueueSize = threadPoolSearchQueueSize;
            _resultValue.threadPoolSearchSize = threadPoolSearchSize;
            _resultValue.threadPoolSearchThrottledQueueSize = threadPoolSearchThrottledQueueSize;
            _resultValue.threadPoolSearchThrottledSize = threadPoolSearchThrottledSize;
            _resultValue.threadPoolWriteQueueSize = threadPoolWriteQueueSize;
            _resultValue.threadPoolWriteSize = threadPoolWriteSize;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
