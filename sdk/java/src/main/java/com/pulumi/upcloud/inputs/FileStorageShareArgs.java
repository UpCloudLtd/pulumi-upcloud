// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.upcloud.inputs.FileStorageShareAclArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileStorageShareArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileStorageShareArgs Empty = new FileStorageShareArgs();

    /**
     * Access control entries (1–50).
     * 
     */
    @Import(name="acls")
    private @Nullable Output<List<FileStorageShareAclArgs>> acls;

    /**
     * @return Access control entries (1–50).
     * 
     */
    public Optional<Output<List<FileStorageShareAclArgs>>> acls() {
        return Optional.ofNullable(this.acls);
    }

    /**
     * Unique name of the share (1–64 chars).
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Unique name of the share (1–64 chars).
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Absolute path exported by the share (e.g. `/public`).
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Absolute path exported by the share (e.g. `/public`).
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    private FileStorageShareArgs() {}

    private FileStorageShareArgs(FileStorageShareArgs $) {
        this.acls = $.acls;
        this.name = $.name;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileStorageShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileStorageShareArgs $;

        public Builder() {
            $ = new FileStorageShareArgs();
        }

        public Builder(FileStorageShareArgs defaults) {
            $ = new FileStorageShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acls Access control entries (1–50).
         * 
         * @return builder
         * 
         */
        public Builder acls(@Nullable Output<List<FileStorageShareAclArgs>> acls) {
            $.acls = acls;
            return this;
        }

        /**
         * @param acls Access control entries (1–50).
         * 
         * @return builder
         * 
         */
        public Builder acls(List<FileStorageShareAclArgs> acls) {
            return acls(Output.of(acls));
        }

        /**
         * @param acls Access control entries (1–50).
         * 
         * @return builder
         * 
         */
        public Builder acls(FileStorageShareAclArgs... acls) {
            return acls(List.of(acls));
        }

        /**
         * @param name Unique name of the share (1–64 chars).
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name of the share (1–64 chars).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param path Absolute path exported by the share (e.g. `/public`).
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Absolute path exported by the share (e.g. `/public`).
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public FileStorageShareArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("FileStorageShareArgs", "name");
            }
            if ($.path == null) {
                throw new MissingRequiredPropertyException("FileStorageShareArgs", "path");
            }
            return $;
        }
    }

}
