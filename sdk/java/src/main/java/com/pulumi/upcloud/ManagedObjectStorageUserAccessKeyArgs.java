// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ManagedObjectStorageUserAccessKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedObjectStorageUserAccessKeyArgs Empty = new ManagedObjectStorageUserAccessKeyArgs();

    /**
     * Managed Object Storage service UUID.
     * 
     */
    @Import(name="serviceUuid", required=true)
    private Output<String> serviceUuid;

    /**
     * @return Managed Object Storage service UUID.
     * 
     */
    public Output<String> serviceUuid() {
        return this.serviceUuid;
    }

    /**
     * Status of the key. Valid values: `Active`|`Inactive`
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return Status of the key. Valid values: `Active`|`Inactive`
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     * Username.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return Username.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private ManagedObjectStorageUserAccessKeyArgs() {}

    private ManagedObjectStorageUserAccessKeyArgs(ManagedObjectStorageUserAccessKeyArgs $) {
        this.serviceUuid = $.serviceUuid;
        this.status = $.status;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedObjectStorageUserAccessKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedObjectStorageUserAccessKeyArgs $;

        public Builder() {
            $ = new ManagedObjectStorageUserAccessKeyArgs();
        }

        public Builder(ManagedObjectStorageUserAccessKeyArgs defaults) {
            $ = new ManagedObjectStorageUserAccessKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceUuid Managed Object Storage service UUID.
         * 
         * @return builder
         * 
         */
        public Builder serviceUuid(Output<String> serviceUuid) {
            $.serviceUuid = serviceUuid;
            return this;
        }

        /**
         * @param serviceUuid Managed Object Storage service UUID.
         * 
         * @return builder
         * 
         */
        public Builder serviceUuid(String serviceUuid) {
            return serviceUuid(Output.of(serviceUuid));
        }

        /**
         * @param status Status of the key. Valid values: `Active`|`Inactive`
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the key. Valid values: `Active`|`Inactive`
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param username Username.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ManagedObjectStorageUserAccessKeyArgs build() {
            if ($.serviceUuid == null) {
                throw new MissingRequiredPropertyException("ManagedObjectStorageUserAccessKeyArgs", "serviceUuid");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("ManagedObjectStorageUserAccessKeyArgs", "status");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("ManagedObjectStorageUserAccessKeyArgs", "username");
            }
            return $;
        }
    }

}
