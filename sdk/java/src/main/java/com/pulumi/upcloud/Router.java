// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.RouterArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.RouterState;
import com.pulumi.upcloud.outputs.RouterStaticRoute;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Routers can be used to connect multiple Private Networks. UpCloud Servers on any attached network can communicate directly with each other.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.Router;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myExampleRouter = new Router("myExampleRouter");
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import upcloud:index/router:Router my_example_router 049d7ca2-757e-4fb1-a833-f87ee056547a
 * ```
 * 
 */
@ResourceType(type="upcloud:index/router:Router")
public class Router extends com.pulumi.resources.CustomResource {
    /**
     * List of UUIDs representing networks attached to this router.
     * 
     */
    @Export(name="attachedNetworks", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> attachedNetworks;

    /**
     * @return List of UUIDs representing networks attached to this router.
     * 
     */
    public Output<List<String>> attachedNetworks() {
        return this.attachedNetworks;
    }
    /**
     * User defined key-value pairs to classify the router.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> labels;

    /**
     * @return User defined key-value pairs to classify the router.
     * 
     */
    public Output<Map<String,String>> labels() {
        return this.labels;
    }
    /**
     * Name of the router.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the router.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A collection of user managed static routes for this router.
     * 
     */
    @Export(name="staticRoute", refs={List.class,RouterStaticRoute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RouterStaticRoute>> staticRoute;

    /**
     * @return A collection of user managed static routes for this router.
     * 
     */
    public Output<Optional<List<RouterStaticRoute>>> staticRoute() {
        return Codegen.optional(this.staticRoute);
    }
    /**
     * A collection of static routes for this router. This set includes both user and service defined static routes. The
     * objects in this set use the same schema as `static_route` blocks.
     * 
     */
    @Export(name="staticRoutes", refs={List.class,RouterStaticRoute.class}, tree="[0,1]")
    private Output<List<RouterStaticRoute>> staticRoutes;

    /**
     * @return A collection of static routes for this router. This set includes both user and service defined static routes. The
     * objects in this set use the same schema as `static_route` blocks.
     * 
     */
    public Output<List<RouterStaticRoute>> staticRoutes() {
        return this.staticRoutes;
    }
    /**
     * Type of the router
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Type of the router
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Router(java.lang.String name) {
        this(name, RouterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Router(java.lang.String name, @Nullable RouterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Router(java.lang.String name, @Nullable RouterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/router:Router", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Router(java.lang.String name, Output<java.lang.String> id, @Nullable RouterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/router:Router", name, state, makeResourceOptions(options, id), false);
    }

    private static RouterArgs makeArgs(@Nullable RouterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RouterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Router get(java.lang.String name, Output<java.lang.String> id, @Nullable RouterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Router(name, id, state, options);
    }
}
