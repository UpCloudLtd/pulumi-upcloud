// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServerTemplateBackupRule {
    /**
     * @return The weekday when the backup is created
     * 
     */
    private String interval;
    /**
     * @return The number of days before a backup is automatically deleted
     * 
     */
    private Integer retention;
    /**
     * @return The time of day (UTC) when the backup is created
     * 
     */
    private String time;

    private ServerTemplateBackupRule() {}
    /**
     * @return The weekday when the backup is created
     * 
     */
    public String interval() {
        return this.interval;
    }
    /**
     * @return The number of days before a backup is automatically deleted
     * 
     */
    public Integer retention() {
        return this.retention;
    }
    /**
     * @return The time of day (UTC) when the backup is created
     * 
     */
    public String time() {
        return this.time;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerTemplateBackupRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String interval;
        private Integer retention;
        private String time;
        public Builder() {}
        public Builder(ServerTemplateBackupRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.retention = defaults.retention;
    	      this.time = defaults.time;
        }

        @CustomType.Setter
        public Builder interval(String interval) {
            if (interval == null) {
              throw new MissingRequiredPropertyException("ServerTemplateBackupRule", "interval");
            }
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder retention(Integer retention) {
            if (retention == null) {
              throw new MissingRequiredPropertyException("ServerTemplateBackupRule", "retention");
            }
            this.retention = retention;
            return this;
        }
        @CustomType.Setter
        public Builder time(String time) {
            if (time == null) {
              throw new MissingRequiredPropertyException("ServerTemplateBackupRule", "time");
            }
            this.time = time;
            return this;
        }
        public ServerTemplateBackupRule build() {
            final var _resultValue = new ServerTemplateBackupRule();
            _resultValue.interval = interval;
            _resultValue.retention = retention;
            _resultValue.time = time;
            return _resultValue;
        }
    }
}
