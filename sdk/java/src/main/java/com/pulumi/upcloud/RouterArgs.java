// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.upcloud.inputs.RouterStaticRouteArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterArgs Empty = new RouterArgs();

    /**
     * User defined key-value pairs to classify the router.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User defined key-value pairs to classify the router.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Name of the router.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the router.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A collection of user managed static routes for this router.
     * 
     */
    @Import(name="staticRoute")
    private @Nullable Output<List<RouterStaticRouteArgs>> staticRoute;

    /**
     * @return A collection of user managed static routes for this router.
     * 
     */
    public Optional<Output<List<RouterStaticRouteArgs>>> staticRoute() {
        return Optional.ofNullable(this.staticRoute);
    }

    private RouterArgs() {}

    private RouterArgs(RouterArgs $) {
        this.labels = $.labels;
        this.name = $.name;
        this.staticRoute = $.staticRoute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterArgs $;

        public Builder() {
            $ = new RouterArgs();
        }

        public Builder(RouterArgs defaults) {
            $ = new RouterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels User defined key-value pairs to classify the router.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User defined key-value pairs to classify the router.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name Name of the router.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the router.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param staticRoute A collection of user managed static routes for this router.
         * 
         * @return builder
         * 
         */
        public Builder staticRoute(@Nullable Output<List<RouterStaticRouteArgs>> staticRoute) {
            $.staticRoute = staticRoute;
            return this;
        }

        /**
         * @param staticRoute A collection of user managed static routes for this router.
         * 
         * @return builder
         * 
         */
        public Builder staticRoute(List<RouterStaticRouteArgs> staticRoute) {
            return staticRoute(Output.of(staticRoute));
        }

        /**
         * @param staticRoute A collection of user managed static routes for this router.
         * 
         * @return builder
         * 
         */
        public Builder staticRoute(RouterStaticRouteArgs... staticRoute) {
            return staticRoute(List.of(staticRoute));
        }

        public RouterArgs build() {
            return $;
        }
    }

}
