// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesClusterResult {
    private String clientCertificate;
    private String clientKey;
    private String clusterCaCertificate;
    private String host;
    private String id;
    private String kubeconfig;
    private String name;

    private GetKubernetesClusterResult() {}
    public String clientCertificate() {
        return this.clientCertificate;
    }
    public String clientKey() {
        return this.clientKey;
    }
    public String clusterCaCertificate() {
        return this.clusterCaCertificate;
    }
    public String host() {
        return this.host;
    }
    public String id() {
        return this.id;
    }
    public String kubeconfig() {
        return this.kubeconfig;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientCertificate;
        private String clientKey;
        private String clusterCaCertificate;
        private String host;
        private String id;
        private String kubeconfig;
        private String name;
        public Builder() {}
        public Builder(GetKubernetesClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.kubeconfig = defaults.kubeconfig;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder clientCertificate(String clientCertificate) {
            if (clientCertificate == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "clientCertificate");
            }
            this.clientCertificate = clientCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder clientKey(String clientKey) {
            if (clientKey == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "clientKey");
            }
            this.clientKey = clientKey;
            return this;
        }
        @CustomType.Setter
        public Builder clusterCaCertificate(String clusterCaCertificate) {
            if (clusterCaCertificate == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "clusterCaCertificate");
            }
            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kubeconfig(String kubeconfig) {
            if (kubeconfig == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "kubeconfig");
            }
            this.kubeconfig = kubeconfig;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetKubernetesClusterResult build() {
            final var _resultValue = new GetKubernetesClusterResult();
            _resultValue.clientCertificate = clientCertificate;
            _resultValue.clientKey = clientKey;
            _resultValue.clusterCaCertificate = clusterCaCertificate;
            _resultValue.host = host;
            _resultValue.id = id;
            _resultValue.kubeconfig = kubeconfig;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
