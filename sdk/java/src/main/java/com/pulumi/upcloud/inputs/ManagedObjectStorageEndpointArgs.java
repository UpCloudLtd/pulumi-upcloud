// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedObjectStorageEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedObjectStorageEndpointArgs Empty = new ManagedObjectStorageEndpointArgs();

    /**
     * Domain name of the endpoint.
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return Domain name of the endpoint.
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * URL for IAM.
     * 
     */
    @Import(name="iamUrl")
    private @Nullable Output<String> iamUrl;

    /**
     * @return URL for IAM.
     * 
     */
    public Optional<Output<String>> iamUrl() {
        return Optional.ofNullable(this.iamUrl);
    }

    /**
     * URL for STS.
     * 
     */
    @Import(name="stsUrl")
    private @Nullable Output<String> stsUrl;

    /**
     * @return URL for STS.
     * 
     */
    public Optional<Output<String>> stsUrl() {
        return Optional.ofNullable(this.stsUrl);
    }

    /**
     * Type of the endpoint (`private` / `public`).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the endpoint (`private` / `public`).
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ManagedObjectStorageEndpointArgs() {}

    private ManagedObjectStorageEndpointArgs(ManagedObjectStorageEndpointArgs $) {
        this.domainName = $.domainName;
        this.iamUrl = $.iamUrl;
        this.stsUrl = $.stsUrl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedObjectStorageEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedObjectStorageEndpointArgs $;

        public Builder() {
            $ = new ManagedObjectStorageEndpointArgs();
        }

        public Builder(ManagedObjectStorageEndpointArgs defaults) {
            $ = new ManagedObjectStorageEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Domain name of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Domain name of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param iamUrl URL for IAM.
         * 
         * @return builder
         * 
         */
        public Builder iamUrl(@Nullable Output<String> iamUrl) {
            $.iamUrl = iamUrl;
            return this;
        }

        /**
         * @param iamUrl URL for IAM.
         * 
         * @return builder
         * 
         */
        public Builder iamUrl(String iamUrl) {
            return iamUrl(Output.of(iamUrl));
        }

        /**
         * @param stsUrl URL for STS.
         * 
         * @return builder
         * 
         */
        public Builder stsUrl(@Nullable Output<String> stsUrl) {
            $.stsUrl = stsUrl;
            return this;
        }

        /**
         * @param stsUrl URL for STS.
         * 
         * @return builder
         * 
         */
        public Builder stsUrl(String stsUrl) {
            return stsUrl(Output.of(stsUrl));
        }

        /**
         * @param type Type of the endpoint (`private` / `public`).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the endpoint (`private` / `public`).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ManagedObjectStorageEndpointArgs build() {
            return $;
        }
    }

}
