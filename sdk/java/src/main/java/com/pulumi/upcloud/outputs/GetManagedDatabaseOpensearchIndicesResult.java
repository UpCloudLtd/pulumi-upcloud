// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.upcloud.outputs.GetManagedDatabaseOpensearchIndicesIndex;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseOpensearchIndicesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetManagedDatabaseOpensearchIndicesIndex> indices;
    private String service;

    private GetManagedDatabaseOpensearchIndicesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetManagedDatabaseOpensearchIndicesIndex> indices() {
        return this.indices;
    }
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseOpensearchIndicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetManagedDatabaseOpensearchIndicesIndex> indices;
        private String service;
        public Builder() {}
        public Builder(GetManagedDatabaseOpensearchIndicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.indices = defaults.indices;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseOpensearchIndicesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder indices(List<GetManagedDatabaseOpensearchIndicesIndex> indices) {
            if (indices == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseOpensearchIndicesResult", "indices");
            }
            this.indices = indices;
            return this;
        }
        public Builder indices(GetManagedDatabaseOpensearchIndicesIndex... indices) {
            return indices(List.of(indices));
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseOpensearchIndicesResult", "service");
            }
            this.service = service;
            return this;
        }
        public GetManagedDatabaseOpensearchIndicesResult build() {
            final var _resultValue = new GetManagedDatabaseOpensearchIndicesResult();
            _resultValue.id = id;
            _resultValue.indices = indices;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
