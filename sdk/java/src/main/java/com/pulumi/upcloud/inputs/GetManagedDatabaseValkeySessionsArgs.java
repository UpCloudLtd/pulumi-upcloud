// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.upcloud.inputs.GetManagedDatabaseValkeySessionsSessionArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseValkeySessionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseValkeySessionsArgs Empty = new GetManagedDatabaseValkeySessionsArgs();

    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    @Import(name="offset")
    private @Nullable Output<Integer> offset;

    public Optional<Output<Integer>> offset() {
        return Optional.ofNullable(this.offset);
    }

    @Import(name="order")
    private @Nullable Output<String> order;

    public Optional<Output<String>> order() {
        return Optional.ofNullable(this.order);
    }

    @Import(name="service", required=true)
    private Output<String> service;

    public Output<String> service() {
        return this.service;
    }

    @Import(name="sessions")
    private @Nullable Output<List<GetManagedDatabaseValkeySessionsSessionArgs>> sessions;

    public Optional<Output<List<GetManagedDatabaseValkeySessionsSessionArgs>>> sessions() {
        return Optional.ofNullable(this.sessions);
    }

    private GetManagedDatabaseValkeySessionsArgs() {}

    private GetManagedDatabaseValkeySessionsArgs(GetManagedDatabaseValkeySessionsArgs $) {
        this.limit = $.limit;
        this.offset = $.offset;
        this.order = $.order;
        this.service = $.service;
        this.sessions = $.sessions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseValkeySessionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseValkeySessionsArgs $;

        public Builder() {
            $ = new GetManagedDatabaseValkeySessionsArgs();
        }

        public Builder(GetManagedDatabaseValkeySessionsArgs defaults) {
            $ = new GetManagedDatabaseValkeySessionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        public Builder offset(@Nullable Output<Integer> offset) {
            $.offset = offset;
            return this;
        }

        public Builder offset(Integer offset) {
            return offset(Output.of(offset));
        }

        public Builder order(@Nullable Output<String> order) {
            $.order = order;
            return this;
        }

        public Builder order(String order) {
            return order(Output.of(order));
        }

        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        public Builder service(String service) {
            return service(Output.of(service));
        }

        public Builder sessions(@Nullable Output<List<GetManagedDatabaseValkeySessionsSessionArgs>> sessions) {
            $.sessions = sessions;
            return this;
        }

        public Builder sessions(List<GetManagedDatabaseValkeySessionsSessionArgs> sessions) {
            return sessions(Output.of(sessions));
        }

        public Builder sessions(GetManagedDatabaseValkeySessionsSessionArgs... sessions) {
            return sessions(List.of(sessions));
        }

        public GetManagedDatabaseValkeySessionsArgs build() {
            if ($.service == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseValkeySessionsArgs", "service");
            }
            return $;
        }
    }

}
