// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZonesResult {
    private @Nullable String filterType;
    private String id;
    private List<String> zoneIds;

    private GetZonesResult() {}
    public Optional<String> filterType() {
        return Optional.ofNullable(this.filterType);
    }
    public String id() {
        return this.id;
    }
    public List<String> zoneIds() {
        return this.zoneIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZonesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filterType;
        private String id;
        private List<String> zoneIds;
        public Builder() {}
        public Builder(GetZonesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.id = defaults.id;
    	      this.zoneIds = defaults.zoneIds;
        }

        @CustomType.Setter
        public Builder filterType(@Nullable String filterType) {

            this.filterType = filterType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZonesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder zoneIds(List<String> zoneIds) {
            if (zoneIds == null) {
              throw new MissingRequiredPropertyException("GetZonesResult", "zoneIds");
            }
            this.zoneIds = zoneIds;
            return this;
        }
        public Builder zoneIds(String... zoneIds) {
            return zoneIds(List.of(zoneIds));
        }
        public GetZonesResult build() {
            final var _resultValue = new GetZonesResult();
            _resultValue.filterType = filterType;
            _resultValue.id = id;
            _resultValue.zoneIds = zoneIds;
            return _resultValue;
        }
    }
}
