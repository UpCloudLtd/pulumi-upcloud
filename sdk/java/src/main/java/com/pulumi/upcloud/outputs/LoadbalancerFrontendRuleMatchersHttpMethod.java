// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadbalancerFrontendRuleMatchersHttpMethod {
    /**
     * @return Defines if the condition should be inverted. Works similarly to logical NOT operator.
     * 
     */
    private @Nullable Boolean inverse;
    /**
     * @return String value (`GET`, `HEAD`, `POST`, `PUT`, `PATCH`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`).
     * 
     */
    private String value;

    private LoadbalancerFrontendRuleMatchersHttpMethod() {}
    /**
     * @return Defines if the condition should be inverted. Works similarly to logical NOT operator.
     * 
     */
    public Optional<Boolean> inverse() {
        return Optional.ofNullable(this.inverse);
    }
    /**
     * @return String value (`GET`, `HEAD`, `POST`, `PUT`, `PATCH`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`).
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadbalancerFrontendRuleMatchersHttpMethod defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean inverse;
        private String value;
        public Builder() {}
        public Builder(LoadbalancerFrontendRuleMatchersHttpMethod defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inverse = defaults.inverse;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder inverse(@Nullable Boolean inverse) {

            this.inverse = inverse;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("LoadbalancerFrontendRuleMatchersHttpMethod", "value");
            }
            this.value = value;
            return this;
        }
        public LoadbalancerFrontendRuleMatchersHttpMethod build() {
            final var _resultValue = new LoadbalancerFrontendRuleMatchersHttpMethod();
            _resultValue.inverse = inverse;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
