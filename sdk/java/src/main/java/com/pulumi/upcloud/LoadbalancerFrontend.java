// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.LoadbalancerFrontendArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.LoadbalancerFrontendState;
import com.pulumi.upcloud.outputs.LoadbalancerFrontendNetwork;
import com.pulumi.upcloud.outputs.LoadbalancerFrontendProperties;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource represents load balancer frontend service.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.Network;
 * import com.pulumi.upcloud.NetworkArgs;
 * import com.pulumi.upcloud.inputs.NetworkIpNetworkArgs;
 * import com.pulumi.upcloud.LoadbalancerFrontend;
 * import com.pulumi.upcloud.LoadbalancerFrontendArgs;
 * import com.pulumi.upcloud.inputs.LoadbalancerFrontendNetworkArgs;
 * import com.pulumi.upcloud.Loadbalancer;
 * import com.pulumi.upcloud.LoadbalancerArgs;
 * import com.pulumi.upcloud.inputs.LoadbalancerNetworkArgs;
 * import com.pulumi.upcloud.LoadbalancerBackend;
 * import com.pulumi.upcloud.LoadbalancerBackendArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var lbZone = config.get("lbZone").orElse("fi-hel2");
 *         var lbNetwork = new Network("lbNetwork", NetworkArgs.builder()
 *             .zone(lbZone)
 *             .ipNetwork(NetworkIpNetworkArgs.builder()
 *                 .address("10.0.0.0/24")
 *                 .dhcp(true)
 *                 .family("IPv4")
 *                 .build())
 *             .build());
 * 
 *         var lbFe1 = new LoadbalancerFrontend("lbFe1", LoadbalancerFrontendArgs.builder()
 *             .loadbalancer(resource.upcloud_loadbalancer().lb().id())
 *             .mode("http")
 *             .port(8080)
 *             .defaultBackendName(resource.upcloud_loadbalancer_backend().lb_be_1().name())
 *             .networks(LoadbalancerFrontendNetworkArgs.builder()
 *                 .name(resource.upcloud_loadbalancer().lb().networks()[1].name())
 *                 .build())
 *             .build());
 * 
 *         var lb = new Loadbalancer("lb", LoadbalancerArgs.builder()
 *             .configuredStatus("started")
 *             .plan("development")
 *             .zone(lbZone)
 *             .networks(            
 *                 LoadbalancerNetworkArgs.builder()
 *                     .name("Private-Net")
 *                     .type("private")
 *                     .family("IPv4")
 *                     .network(resource.upcloud_network().lb_network().id())
 *                     .build(),
 *                 LoadbalancerNetworkArgs.builder()
 *                     .name("Public-Net")
 *                     .type("public")
 *                     .family("IPv4")
 *                     .build())
 *             .build());
 * 
 *         var lbBe1 = new LoadbalancerBackend("lbBe1", LoadbalancerBackendArgs.builder()
 *             .loadbalancer(resource.upcloud_loadbalancer().lb().id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="upcloud:index/loadbalancerFrontend:LoadbalancerFrontend")
public class LoadbalancerFrontend extends com.pulumi.resources.CustomResource {
    /**
     * The name of the default backend where traffic will be routed. Note, default backend can be overwritten in frontend
     * rules.
     * 
     */
    @Export(name="defaultBackendName", refs={String.class}, tree="[0]")
    private Output<String> defaultBackendName;

    /**
     * @return The name of the default backend where traffic will be routed. Note, default backend can be overwritten in frontend
     * rules.
     * 
     */
    public Output<String> defaultBackendName() {
        return this.defaultBackendName;
    }
    /**
     * UUID of the load balancer to which the frontend is connected.
     * 
     */
    @Export(name="loadbalancer", refs={String.class}, tree="[0]")
    private Output<String> loadbalancer;

    /**
     * @return UUID of the load balancer to which the frontend is connected.
     * 
     */
    public Output<String> loadbalancer() {
        return this.loadbalancer;
    }
    /**
     * When load balancer operating in `tcp` mode it acts as a layer 4 proxy. In `http` mode it acts as a layer 7 proxy.
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    /**
     * @return When load balancer operating in `tcp` mode it acts as a layer 4 proxy. In `http` mode it acts as a layer 7 proxy.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * The name of the frontend. Must be unique within the load balancer service.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the frontend. Must be unique within the load balancer service.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Networks that frontend will be listening. Networks are required if load balancer has `networks` defined. This field will
     * be required when deprecated field `network` is removed from load balancer resource.
     * 
     */
    @Export(name="networks", refs={List.class,LoadbalancerFrontendNetwork.class}, tree="[0,1]")
    private Output</* @Nullable */ List<LoadbalancerFrontendNetwork>> networks;

    /**
     * @return Networks that frontend will be listening. Networks are required if load balancer has `networks` defined. This field will
     * be required when deprecated field `network` is removed from load balancer resource.
     * 
     */
    public Output<Optional<List<LoadbalancerFrontendNetwork>>> networks() {
        return Codegen.optional(this.networks);
    }
    /**
     * Port to listen for incoming requests.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return Port to listen for incoming requests.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    @Export(name="properties", refs={LoadbalancerFrontendProperties.class}, tree="[0]")
    private Output</* @Nullable */ LoadbalancerFrontendProperties> properties;

    public Output<Optional<LoadbalancerFrontendProperties>> properties() {
        return Codegen.optional(this.properties);
    }
    /**
     * Set of frontend rule names.
     * 
     */
    @Export(name="rules", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> rules;

    /**
     * @return Set of frontend rule names.
     * 
     */
    public Output<List<String>> rules() {
        return this.rules;
    }
    /**
     * Set of TLS config names.
     * 
     */
    @Export(name="tlsConfigs", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tlsConfigs;

    /**
     * @return Set of TLS config names.
     * 
     */
    public Output<List<String>> tlsConfigs() {
        return this.tlsConfigs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadbalancerFrontend(java.lang.String name) {
        this(name, LoadbalancerFrontendArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadbalancerFrontend(java.lang.String name, LoadbalancerFrontendArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadbalancerFrontend(java.lang.String name, LoadbalancerFrontendArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/loadbalancerFrontend:LoadbalancerFrontend", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LoadbalancerFrontend(java.lang.String name, Output<java.lang.String> id, @Nullable LoadbalancerFrontendState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/loadbalancerFrontend:LoadbalancerFrontend", name, state, makeResourceOptions(options, id), false);
    }

    private static LoadbalancerFrontendArgs makeArgs(LoadbalancerFrontendArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LoadbalancerFrontendArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadbalancerFrontend get(java.lang.String name, Output<java.lang.String> id, @Nullable LoadbalancerFrontendState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadbalancerFrontend(name, id, state, options);
    }
}
