// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayConnectionTunnelIpsecPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayConnectionTunnelIpsecPropertiesArgs Empty = new GatewayConnectionTunnelIpsecPropertiesArgs();

    /**
     * IKE child SA rekey time in seconds.
     * 
     */
    @Import(name="childRekeyTime")
    private @Nullable Output<Integer> childRekeyTime;

    /**
     * @return IKE child SA rekey time in seconds.
     * 
     */
    public Optional<Output<Integer>> childRekeyTime() {
        return Optional.ofNullable(this.childRekeyTime);
    }

    /**
     * Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
     * 
     */
    @Import(name="dpdDelay")
    private @Nullable Output<Integer> dpdDelay;

    /**
     * @return Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
     * 
     */
    public Optional<Output<Integer>> dpdDelay() {
        return Optional.ofNullable(this.dpdDelay);
    }

    /**
     * Timeout period for DPD reply before considering the peer to be dead, in seconds.
     * 
     */
    @Import(name="dpdTimeout")
    private @Nullable Output<Integer> dpdTimeout;

    /**
     * @return Timeout period for DPD reply before considering the peer to be dead, in seconds.
     * 
     */
    public Optional<Output<Integer>> dpdTimeout() {
        return Optional.ofNullable(this.dpdTimeout);
    }

    /**
     * Maximum IKE SA lifetime in seconds.
     * 
     */
    @Import(name="ikeLifetime")
    private @Nullable Output<Integer> ikeLifetime;

    /**
     * @return Maximum IKE SA lifetime in seconds.
     * 
     */
    public Optional<Output<Integer>> ikeLifetime() {
        return Optional.ofNullable(this.ikeLifetime);
    }

    /**
     * List of Phase 1: Proposal algorithms.
     * 
     */
    @Import(name="phase1Algorithms")
    private @Nullable Output<List<String>> phase1Algorithms;

    /**
     * @return List of Phase 1: Proposal algorithms.
     * 
     */
    public Optional<Output<List<String>>> phase1Algorithms() {
        return Optional.ofNullable(this.phase1Algorithms);
    }

    /**
     * List of Phase 1 Diffie-Hellman group numbers.
     * 
     */
    @Import(name="phase1DhGroupNumbers")
    private @Nullable Output<List<Integer>> phase1DhGroupNumbers;

    /**
     * @return List of Phase 1 Diffie-Hellman group numbers.
     * 
     */
    public Optional<Output<List<Integer>>> phase1DhGroupNumbers() {
        return Optional.ofNullable(this.phase1DhGroupNumbers);
    }

    /**
     * List of Phase 1 integrity algorithms.
     * 
     */
    @Import(name="phase1IntegrityAlgorithms")
    private @Nullable Output<List<String>> phase1IntegrityAlgorithms;

    /**
     * @return List of Phase 1 integrity algorithms.
     * 
     */
    public Optional<Output<List<String>>> phase1IntegrityAlgorithms() {
        return Optional.ofNullable(this.phase1IntegrityAlgorithms);
    }

    /**
     * List of Phase 2: Security Association algorithms.
     * 
     */
    @Import(name="phase2Algorithms")
    private @Nullable Output<List<String>> phase2Algorithms;

    /**
     * @return List of Phase 2: Security Association algorithms.
     * 
     */
    public Optional<Output<List<String>>> phase2Algorithms() {
        return Optional.ofNullable(this.phase2Algorithms);
    }

    /**
     * List of Phase 2 Diffie-Hellman group numbers.
     * 
     */
    @Import(name="phase2DhGroupNumbers")
    private @Nullable Output<List<Integer>> phase2DhGroupNumbers;

    /**
     * @return List of Phase 2 Diffie-Hellman group numbers.
     * 
     */
    public Optional<Output<List<Integer>>> phase2DhGroupNumbers() {
        return Optional.ofNullable(this.phase2DhGroupNumbers);
    }

    /**
     * List of Phase 2 integrity algorithms.
     * 
     */
    @Import(name="phase2IntegrityAlgorithms")
    private @Nullable Output<List<String>> phase2IntegrityAlgorithms;

    /**
     * @return List of Phase 2 integrity algorithms.
     * 
     */
    public Optional<Output<List<String>>> phase2IntegrityAlgorithms() {
        return Optional.ofNullable(this.phase2IntegrityAlgorithms);
    }

    /**
     * IKE SA rekey time in seconds.
     * 
     */
    @Import(name="rekeyTime")
    private @Nullable Output<Integer> rekeyTime;

    /**
     * @return IKE SA rekey time in seconds.
     * 
     */
    public Optional<Output<Integer>> rekeyTime() {
        return Optional.ofNullable(this.rekeyTime);
    }

    private GatewayConnectionTunnelIpsecPropertiesArgs() {}

    private GatewayConnectionTunnelIpsecPropertiesArgs(GatewayConnectionTunnelIpsecPropertiesArgs $) {
        this.childRekeyTime = $.childRekeyTime;
        this.dpdDelay = $.dpdDelay;
        this.dpdTimeout = $.dpdTimeout;
        this.ikeLifetime = $.ikeLifetime;
        this.phase1Algorithms = $.phase1Algorithms;
        this.phase1DhGroupNumbers = $.phase1DhGroupNumbers;
        this.phase1IntegrityAlgorithms = $.phase1IntegrityAlgorithms;
        this.phase2Algorithms = $.phase2Algorithms;
        this.phase2DhGroupNumbers = $.phase2DhGroupNumbers;
        this.phase2IntegrityAlgorithms = $.phase2IntegrityAlgorithms;
        this.rekeyTime = $.rekeyTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayConnectionTunnelIpsecPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayConnectionTunnelIpsecPropertiesArgs $;

        public Builder() {
            $ = new GatewayConnectionTunnelIpsecPropertiesArgs();
        }

        public Builder(GatewayConnectionTunnelIpsecPropertiesArgs defaults) {
            $ = new GatewayConnectionTunnelIpsecPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param childRekeyTime IKE child SA rekey time in seconds.
         * 
         * @return builder
         * 
         */
        public Builder childRekeyTime(@Nullable Output<Integer> childRekeyTime) {
            $.childRekeyTime = childRekeyTime;
            return this;
        }

        /**
         * @param childRekeyTime IKE child SA rekey time in seconds.
         * 
         * @return builder
         * 
         */
        public Builder childRekeyTime(Integer childRekeyTime) {
            return childRekeyTime(Output.of(childRekeyTime));
        }

        /**
         * @param dpdDelay Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
         * 
         * @return builder
         * 
         */
        public Builder dpdDelay(@Nullable Output<Integer> dpdDelay) {
            $.dpdDelay = dpdDelay;
            return this;
        }

        /**
         * @param dpdDelay Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
         * 
         * @return builder
         * 
         */
        public Builder dpdDelay(Integer dpdDelay) {
            return dpdDelay(Output.of(dpdDelay));
        }

        /**
         * @param dpdTimeout Timeout period for DPD reply before considering the peer to be dead, in seconds.
         * 
         * @return builder
         * 
         */
        public Builder dpdTimeout(@Nullable Output<Integer> dpdTimeout) {
            $.dpdTimeout = dpdTimeout;
            return this;
        }

        /**
         * @param dpdTimeout Timeout period for DPD reply before considering the peer to be dead, in seconds.
         * 
         * @return builder
         * 
         */
        public Builder dpdTimeout(Integer dpdTimeout) {
            return dpdTimeout(Output.of(dpdTimeout));
        }

        /**
         * @param ikeLifetime Maximum IKE SA lifetime in seconds.
         * 
         * @return builder
         * 
         */
        public Builder ikeLifetime(@Nullable Output<Integer> ikeLifetime) {
            $.ikeLifetime = ikeLifetime;
            return this;
        }

        /**
         * @param ikeLifetime Maximum IKE SA lifetime in seconds.
         * 
         * @return builder
         * 
         */
        public Builder ikeLifetime(Integer ikeLifetime) {
            return ikeLifetime(Output.of(ikeLifetime));
        }

        /**
         * @param phase1Algorithms List of Phase 1: Proposal algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase1Algorithms(@Nullable Output<List<String>> phase1Algorithms) {
            $.phase1Algorithms = phase1Algorithms;
            return this;
        }

        /**
         * @param phase1Algorithms List of Phase 1: Proposal algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase1Algorithms(List<String> phase1Algorithms) {
            return phase1Algorithms(Output.of(phase1Algorithms));
        }

        /**
         * @param phase1Algorithms List of Phase 1: Proposal algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase1Algorithms(String... phase1Algorithms) {
            return phase1Algorithms(List.of(phase1Algorithms));
        }

        /**
         * @param phase1DhGroupNumbers List of Phase 1 Diffie-Hellman group numbers.
         * 
         * @return builder
         * 
         */
        public Builder phase1DhGroupNumbers(@Nullable Output<List<Integer>> phase1DhGroupNumbers) {
            $.phase1DhGroupNumbers = phase1DhGroupNumbers;
            return this;
        }

        /**
         * @param phase1DhGroupNumbers List of Phase 1 Diffie-Hellman group numbers.
         * 
         * @return builder
         * 
         */
        public Builder phase1DhGroupNumbers(List<Integer> phase1DhGroupNumbers) {
            return phase1DhGroupNumbers(Output.of(phase1DhGroupNumbers));
        }

        /**
         * @param phase1DhGroupNumbers List of Phase 1 Diffie-Hellman group numbers.
         * 
         * @return builder
         * 
         */
        public Builder phase1DhGroupNumbers(Integer... phase1DhGroupNumbers) {
            return phase1DhGroupNumbers(List.of(phase1DhGroupNumbers));
        }

        /**
         * @param phase1IntegrityAlgorithms List of Phase 1 integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase1IntegrityAlgorithms(@Nullable Output<List<String>> phase1IntegrityAlgorithms) {
            $.phase1IntegrityAlgorithms = phase1IntegrityAlgorithms;
            return this;
        }

        /**
         * @param phase1IntegrityAlgorithms List of Phase 1 integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase1IntegrityAlgorithms(List<String> phase1IntegrityAlgorithms) {
            return phase1IntegrityAlgorithms(Output.of(phase1IntegrityAlgorithms));
        }

        /**
         * @param phase1IntegrityAlgorithms List of Phase 1 integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase1IntegrityAlgorithms(String... phase1IntegrityAlgorithms) {
            return phase1IntegrityAlgorithms(List.of(phase1IntegrityAlgorithms));
        }

        /**
         * @param phase2Algorithms List of Phase 2: Security Association algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase2Algorithms(@Nullable Output<List<String>> phase2Algorithms) {
            $.phase2Algorithms = phase2Algorithms;
            return this;
        }

        /**
         * @param phase2Algorithms List of Phase 2: Security Association algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase2Algorithms(List<String> phase2Algorithms) {
            return phase2Algorithms(Output.of(phase2Algorithms));
        }

        /**
         * @param phase2Algorithms List of Phase 2: Security Association algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase2Algorithms(String... phase2Algorithms) {
            return phase2Algorithms(List.of(phase2Algorithms));
        }

        /**
         * @param phase2DhGroupNumbers List of Phase 2 Diffie-Hellman group numbers.
         * 
         * @return builder
         * 
         */
        public Builder phase2DhGroupNumbers(@Nullable Output<List<Integer>> phase2DhGroupNumbers) {
            $.phase2DhGroupNumbers = phase2DhGroupNumbers;
            return this;
        }

        /**
         * @param phase2DhGroupNumbers List of Phase 2 Diffie-Hellman group numbers.
         * 
         * @return builder
         * 
         */
        public Builder phase2DhGroupNumbers(List<Integer> phase2DhGroupNumbers) {
            return phase2DhGroupNumbers(Output.of(phase2DhGroupNumbers));
        }

        /**
         * @param phase2DhGroupNumbers List of Phase 2 Diffie-Hellman group numbers.
         * 
         * @return builder
         * 
         */
        public Builder phase2DhGroupNumbers(Integer... phase2DhGroupNumbers) {
            return phase2DhGroupNumbers(List.of(phase2DhGroupNumbers));
        }

        /**
         * @param phase2IntegrityAlgorithms List of Phase 2 integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase2IntegrityAlgorithms(@Nullable Output<List<String>> phase2IntegrityAlgorithms) {
            $.phase2IntegrityAlgorithms = phase2IntegrityAlgorithms;
            return this;
        }

        /**
         * @param phase2IntegrityAlgorithms List of Phase 2 integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase2IntegrityAlgorithms(List<String> phase2IntegrityAlgorithms) {
            return phase2IntegrityAlgorithms(Output.of(phase2IntegrityAlgorithms));
        }

        /**
         * @param phase2IntegrityAlgorithms List of Phase 2 integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder phase2IntegrityAlgorithms(String... phase2IntegrityAlgorithms) {
            return phase2IntegrityAlgorithms(List.of(phase2IntegrityAlgorithms));
        }

        /**
         * @param rekeyTime IKE SA rekey time in seconds.
         * 
         * @return builder
         * 
         */
        public Builder rekeyTime(@Nullable Output<Integer> rekeyTime) {
            $.rekeyTime = rekeyTime;
            return this;
        }

        /**
         * @param rekeyTime IKE SA rekey time in seconds.
         * 
         * @return builder
         * 
         */
        public Builder rekeyTime(Integer rekeyTime) {
            return rekeyTime(Output.of(rekeyTime));
        }

        public GatewayConnectionTunnelIpsecPropertiesArgs build() {
            return $;
        }
    }

}
