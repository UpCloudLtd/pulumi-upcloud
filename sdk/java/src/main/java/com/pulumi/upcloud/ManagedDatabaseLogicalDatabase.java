// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.ManagedDatabaseLogicalDatabaseArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.ManagedDatabaseLogicalDatabaseState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource represents a logical database in managed database
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.ManagedDatabasePostgresql;
 * import com.pulumi.upcloud.ManagedDatabasePostgresqlArgs;
 * import com.pulumi.upcloud.ManagedDatabaseLogicalDatabase;
 * import com.pulumi.upcloud.ManagedDatabaseLogicalDatabaseArgs;
 * import com.pulumi.upcloud.ManagedDatabaseMysql;
 * import com.pulumi.upcloud.ManagedDatabaseMysqlArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // PostgreSQL managed database with additional logical database: example_db 
 *         var example = new ManagedDatabasePostgresql("example", ManagedDatabasePostgresqlArgs.builder()
 *             .name("postgres")
 *             .plan("1x1xCPU-2GB-25GB")
 *             .title("postgres")
 *             .zone("fi-hel1")
 *             .build());
 * 
 *         var exampleDb = new ManagedDatabaseLogicalDatabase("exampleDb", ManagedDatabaseLogicalDatabaseArgs.builder()
 *             .service(example.id())
 *             .name("example_db")
 *             .build());
 * 
 *         // MySQL managed database with additional logical database: example2_db 
 *         var exampleManagedDatabaseMysql = new ManagedDatabaseMysql("exampleManagedDatabaseMysql", ManagedDatabaseMysqlArgs.builder()
 *             .name("mysql")
 *             .plan("1x1xCPU-2GB-25GB")
 *             .title("mysql")
 *             .zone("fi-hel1")
 *             .build());
 * 
 *         var example2Db = new ManagedDatabaseLogicalDatabase("example2Db", ManagedDatabaseLogicalDatabaseArgs.builder()
 *             .service(exampleManagedDatabaseMysql.id())
 *             .name("example2_db")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="upcloud:index/managedDatabaseLogicalDatabase:ManagedDatabaseLogicalDatabase")
public class ManagedDatabaseLogicalDatabase extends com.pulumi.resources.CustomResource {
    /**
     * Default character set for the database (LC_CTYPE)
     * 
     */
    @Export(name="characterSet", refs={String.class}, tree="[0]")
    private Output<String> characterSet;

    /**
     * @return Default character set for the database (LC_CTYPE)
     * 
     */
    public Output<String> characterSet() {
        return this.characterSet;
    }
    /**
     * Default collation for the database (LC_COLLATE)
     * 
     */
    @Export(name="collation", refs={String.class}, tree="[0]")
    private Output<String> collation;

    /**
     * @return Default collation for the database (LC_COLLATE)
     * 
     */
    public Output<String> collation() {
        return this.collation;
    }
    /**
     * Name of the logical database
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the logical database
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Service&#39;s UUID for which this user belongs to
     * 
     */
    @Export(name="service", refs={String.class}, tree="[0]")
    private Output<String> service;

    /**
     * @return Service&#39;s UUID for which this user belongs to
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedDatabaseLogicalDatabase(java.lang.String name) {
        this(name, ManagedDatabaseLogicalDatabaseArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedDatabaseLogicalDatabase(java.lang.String name, ManagedDatabaseLogicalDatabaseArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedDatabaseLogicalDatabase(java.lang.String name, ManagedDatabaseLogicalDatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/managedDatabaseLogicalDatabase:ManagedDatabaseLogicalDatabase", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ManagedDatabaseLogicalDatabase(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedDatabaseLogicalDatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/managedDatabaseLogicalDatabase:ManagedDatabaseLogicalDatabase", name, state, makeResourceOptions(options, id), false);
    }

    private static ManagedDatabaseLogicalDatabaseArgs makeArgs(ManagedDatabaseLogicalDatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ManagedDatabaseLogicalDatabaseArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedDatabaseLogicalDatabase get(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedDatabaseLogicalDatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedDatabaseLogicalDatabase(name, id, state, options);
    }
}
