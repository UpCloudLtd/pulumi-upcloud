// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ManagedDatabaseUserOpensearchAccessControlRule {
    /**
     * @return Set index name, pattern or top level API.
     * 
     */
    private String index;
    /**
     * @return Set permission access.
     * 
     */
    private String permission;

    private ManagedDatabaseUserOpensearchAccessControlRule() {}
    /**
     * @return Set index name, pattern or top level API.
     * 
     */
    public String index() {
        return this.index;
    }
    /**
     * @return Set permission access.
     * 
     */
    public String permission() {
        return this.permission;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedDatabaseUserOpensearchAccessControlRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String index;
        private String permission;
        public Builder() {}
        public Builder(ManagedDatabaseUserOpensearchAccessControlRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.index = defaults.index;
    	      this.permission = defaults.permission;
        }

        @CustomType.Setter
        public Builder index(String index) {
            if (index == null) {
              throw new MissingRequiredPropertyException("ManagedDatabaseUserOpensearchAccessControlRule", "index");
            }
            this.index = index;
            return this;
        }
        @CustomType.Setter
        public Builder permission(String permission) {
            if (permission == null) {
              throw new MissingRequiredPropertyException("ManagedDatabaseUserOpensearchAccessControlRule", "permission");
            }
            this.permission = permission;
            return this;
        }
        public ManagedDatabaseUserOpensearchAccessControlRule build() {
            final var _resultValue = new ManagedDatabaseUserOpensearchAccessControlRule();
            _resultValue.index = index;
            _resultValue.permission = permission;
            return _resultValue;
        }
    }
}
