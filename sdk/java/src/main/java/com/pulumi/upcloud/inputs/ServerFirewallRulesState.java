// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.upcloud.inputs.ServerFirewallRulesFirewallRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerFirewallRulesState extends com.pulumi.resources.ResourceArgs {

    public static final ServerFirewallRulesState Empty = new ServerFirewallRulesState();

    /**
     * A single firewall rule. If used, IP address and port ranges must have both start and end values specified. These can be
     * the same value if only one IP address or port number is specified. Source and destination port numbers can only be set
     * if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP. Typical firewall rule should have
     * &#34;action&#34;, &#34;direction&#34;, &#34;protocol&#34;, &#34;family&#34; and at least one destination/source-address/port range. The default rule can
     * be created by providing only &#34;action&#34; and &#34;direction&#34; attributes. Default rule should be defined last.
     * 
     */
    @Import(name="firewallRules")
    private @Nullable Output<List<ServerFirewallRulesFirewallRuleArgs>> firewallRules;

    /**
     * @return A single firewall rule. If used, IP address and port ranges must have both start and end values specified. These can be
     * the same value if only one IP address or port number is specified. Source and destination port numbers can only be set
     * if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP. Typical firewall rule should have
     * &#34;action&#34;, &#34;direction&#34;, &#34;protocol&#34;, &#34;family&#34; and at least one destination/source-address/port range. The default rule can
     * be created by providing only &#34;action&#34; and &#34;direction&#34; attributes. Default rule should be defined last.
     * 
     */
    public Optional<Output<List<ServerFirewallRulesFirewallRuleArgs>>> firewallRules() {
        return Optional.ofNullable(this.firewallRules);
    }

    /**
     * The unique id of the server to be protected the firewall rules
     * 
     */
    @Import(name="serverId")
    private @Nullable Output<String> serverId;

    /**
     * @return The unique id of the server to be protected the firewall rules
     * 
     */
    public Optional<Output<String>> serverId() {
        return Optional.ofNullable(this.serverId);
    }

    private ServerFirewallRulesState() {}

    private ServerFirewallRulesState(ServerFirewallRulesState $) {
        this.firewallRules = $.firewallRules;
        this.serverId = $.serverId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerFirewallRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerFirewallRulesState $;

        public Builder() {
            $ = new ServerFirewallRulesState();
        }

        public Builder(ServerFirewallRulesState defaults) {
            $ = new ServerFirewallRulesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param firewallRules A single firewall rule. If used, IP address and port ranges must have both start and end values specified. These can be
         * the same value if only one IP address or port number is specified. Source and destination port numbers can only be set
         * if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP. Typical firewall rule should have
         * &#34;action&#34;, &#34;direction&#34;, &#34;protocol&#34;, &#34;family&#34; and at least one destination/source-address/port range. The default rule can
         * be created by providing only &#34;action&#34; and &#34;direction&#34; attributes. Default rule should be defined last.
         * 
         * @return builder
         * 
         */
        public Builder firewallRules(@Nullable Output<List<ServerFirewallRulesFirewallRuleArgs>> firewallRules) {
            $.firewallRules = firewallRules;
            return this;
        }

        /**
         * @param firewallRules A single firewall rule. If used, IP address and port ranges must have both start and end values specified. These can be
         * the same value if only one IP address or port number is specified. Source and destination port numbers can only be set
         * if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP. Typical firewall rule should have
         * &#34;action&#34;, &#34;direction&#34;, &#34;protocol&#34;, &#34;family&#34; and at least one destination/source-address/port range. The default rule can
         * be created by providing only &#34;action&#34; and &#34;direction&#34; attributes. Default rule should be defined last.
         * 
         * @return builder
         * 
         */
        public Builder firewallRules(List<ServerFirewallRulesFirewallRuleArgs> firewallRules) {
            return firewallRules(Output.of(firewallRules));
        }

        /**
         * @param firewallRules A single firewall rule. If used, IP address and port ranges must have both start and end values specified. These can be
         * the same value if only one IP address or port number is specified. Source and destination port numbers can only be set
         * if the protocol is TCP or UDP. The ICMP type may only be set if the protocol is ICMP. Typical firewall rule should have
         * &#34;action&#34;, &#34;direction&#34;, &#34;protocol&#34;, &#34;family&#34; and at least one destination/source-address/port range. The default rule can
         * be created by providing only &#34;action&#34; and &#34;direction&#34; attributes. Default rule should be defined last.
         * 
         * @return builder
         * 
         */
        public Builder firewallRules(ServerFirewallRulesFirewallRuleArgs... firewallRules) {
            return firewallRules(List.of(firewallRules));
        }

        /**
         * @param serverId The unique id of the server to be protected the firewall rules
         * 
         * @return builder
         * 
         */
        public Builder serverId(@Nullable Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId The unique id of the server to be protected the firewall rules
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        public ServerFirewallRulesState build() {
            return $;
        }
    }

}
