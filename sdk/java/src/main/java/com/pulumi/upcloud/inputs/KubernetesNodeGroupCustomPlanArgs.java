// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesNodeGroupCustomPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesNodeGroupCustomPlanArgs Empty = new KubernetesNodeGroupCustomPlanArgs();

    /**
     * The number of CPU cores dedicated to individual node group nodes when using custom plan
     * 
     */
    @Import(name="cores", required=true)
    private Output<Integer> cores;

    /**
     * @return The number of CPU cores dedicated to individual node group nodes when using custom plan
     * 
     */
    public Output<Integer> cores() {
        return this.cores;
    }

    /**
     * The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
     * 
     */
    @Import(name="memory", required=true)
    private Output<Integer> memory;

    /**
     * @return The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
     * 
     */
    public Output<Integer> memory() {
        return this.memory;
    }

    /**
     * The size of the storage device in gigabytes.
     * 
     */
    @Import(name="storageSize", required=true)
    private Output<Integer> storageSize;

    /**
     * @return The size of the storage device in gigabytes.
     * 
     */
    public Output<Integer> storageSize() {
        return this.storageSize;
    }

    /**
     * The storage tier to use. Defaults to maxiops
     * 
     */
    @Import(name="storageTier")
    private @Nullable Output<String> storageTier;

    /**
     * @return The storage tier to use. Defaults to maxiops
     * 
     */
    public Optional<Output<String>> storageTier() {
        return Optional.ofNullable(this.storageTier);
    }

    private KubernetesNodeGroupCustomPlanArgs() {}

    private KubernetesNodeGroupCustomPlanArgs(KubernetesNodeGroupCustomPlanArgs $) {
        this.cores = $.cores;
        this.memory = $.memory;
        this.storageSize = $.storageSize;
        this.storageTier = $.storageTier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesNodeGroupCustomPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesNodeGroupCustomPlanArgs $;

        public Builder() {
            $ = new KubernetesNodeGroupCustomPlanArgs();
        }

        public Builder(KubernetesNodeGroupCustomPlanArgs defaults) {
            $ = new KubernetesNodeGroupCustomPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cores The number of CPU cores dedicated to individual node group nodes when using custom plan
         * 
         * @return builder
         * 
         */
        public Builder cores(Output<Integer> cores) {
            $.cores = cores;
            return this;
        }

        /**
         * @param cores The number of CPU cores dedicated to individual node group nodes when using custom plan
         * 
         * @return builder
         * 
         */
        public Builder cores(Integer cores) {
            return cores(Output.of(cores));
        }

        /**
         * @param memory The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
         * 
         * @return builder
         * 
         */
        public Builder memory(Output<Integer> memory) {
            $.memory = memory;
            return this;
        }

        /**
         * @param memory The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
         * 
         * @return builder
         * 
         */
        public Builder memory(Integer memory) {
            return memory(Output.of(memory));
        }

        /**
         * @param storageSize The size of the storage device in gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder storageSize(Output<Integer> storageSize) {
            $.storageSize = storageSize;
            return this;
        }

        /**
         * @param storageSize The size of the storage device in gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder storageSize(Integer storageSize) {
            return storageSize(Output.of(storageSize));
        }

        /**
         * @param storageTier The storage tier to use. Defaults to maxiops
         * 
         * @return builder
         * 
         */
        public Builder storageTier(@Nullable Output<String> storageTier) {
            $.storageTier = storageTier;
            return this;
        }

        /**
         * @param storageTier The storage tier to use. Defaults to maxiops
         * 
         * @return builder
         * 
         */
        public Builder storageTier(String storageTier) {
            return storageTier(Output.of(storageTier));
        }

        public KubernetesNodeGroupCustomPlanArgs build() {
            if ($.cores == null) {
                throw new MissingRequiredPropertyException("KubernetesNodeGroupCustomPlanArgs", "cores");
            }
            if ($.memory == null) {
                throw new MissingRequiredPropertyException("KubernetesNodeGroupCustomPlanArgs", "memory");
            }
            if ($.storageSize == null) {
                throw new MissingRequiredPropertyException("KubernetesNodeGroupCustomPlanArgs", "storageSize");
            }
            return $;
        }
    }

}
