// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.upcloud.inputs.ObjectStorageBucketArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectStorageState extends com.pulumi.resources.ResourceArgs {

    public static final ObjectStorageState Empty = new ObjectStorageState();

    /**
     * The access key used to identify user. Can be set to an empty string, which will tell the provider to get the access key
     * from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_{name}&#34;. {name} is the
     * name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-) should
     * be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable named
     * &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_MY_FILES&#34;.
     * 
     */
    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    /**
     * @return The access key used to identify user. Can be set to an empty string, which will tell the provider to get the access key
     * from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_{name}&#34;. {name} is the
     * name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-) should
     * be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable named
     * &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_MY_FILES&#34;.
     * 
     */
    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    @Import(name="buckets")
    private @Nullable Output<List<ObjectStorageBucketArgs>> buckets;

    public Optional<Output<List<ObjectStorageBucketArgs>>> buckets() {
        return Optional.ofNullable(this.buckets);
    }

    @Import(name="created")
    private @Nullable Output<String> created;

    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The description of the object storage instance to be created
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the object storage instance to be created
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the object storage instance to be created
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the object storage instance to be created
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The secret key used to authenticate user. Can be set to an empty string, which will tell the provider to get the secret
     * key from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_{name}&#34;. {name} is
     * the name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-)
     * should be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable
     * named &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_MY_FILES&#34;.
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return The secret key used to authenticate user. Can be set to an empty string, which will tell the provider to get the secret
     * key from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_{name}&#34;. {name} is
     * the name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-)
     * should be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable
     * named &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_MY_FILES&#34;.
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * The size of the object storage instance in gigabytes
     * 
     */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @return The size of the object storage instance in gigabytes
     * 
     */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="usedSpace")
    private @Nullable Output<Integer> usedSpace;

    public Optional<Output<Integer>> usedSpace() {
        return Optional.ofNullable(this.usedSpace);
    }

    /**
     * The zone in which the object storage instance will be created, e.g. `de-fra1`. You can list available zones with `upctl
     * zone list`.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The zone in which the object storage instance will be created, e.g. `de-fra1`. You can list available zones with `upctl
     * zone list`.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private ObjectStorageState() {}

    private ObjectStorageState(ObjectStorageState $) {
        this.accessKey = $.accessKey;
        this.buckets = $.buckets;
        this.created = $.created;
        this.description = $.description;
        this.name = $.name;
        this.secretKey = $.secretKey;
        this.size = $.size;
        this.state = $.state;
        this.url = $.url;
        this.usedSpace = $.usedSpace;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectStorageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectStorageState $;

        public Builder() {
            $ = new ObjectStorageState();
        }

        public Builder(ObjectStorageState defaults) {
            $ = new ObjectStorageState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The access key used to identify user. Can be set to an empty string, which will tell the provider to get the access key
         * from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_{name}&#34;. {name} is the
         * name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-) should
         * be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable named
         * &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_MY_FILES&#34;.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey The access key used to identify user. Can be set to an empty string, which will tell the provider to get the access key
         * from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_{name}&#34;. {name} is the
         * name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-) should
         * be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable named
         * &#34;UPCLOUD_OBJECT_STORAGE_ACCESS_KEY_MY_FILES&#34;.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        public Builder buckets(@Nullable Output<List<ObjectStorageBucketArgs>> buckets) {
            $.buckets = buckets;
            return this;
        }

        public Builder buckets(List<ObjectStorageBucketArgs> buckets) {
            return buckets(Output.of(buckets));
        }

        public Builder buckets(ObjectStorageBucketArgs... buckets) {
            return buckets(List.of(buckets));
        }

        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param description The description of the object storage instance to be created
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the object storage instance to be created
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the object storage instance to be created
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the object storage instance to be created
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secretKey The secret key used to authenticate user. Can be set to an empty string, which will tell the provider to get the secret
         * key from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_{name}&#34;. {name} is
         * the name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-)
         * should be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable
         * named &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_MY_FILES&#34;.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey The secret key used to authenticate user. Can be set to an empty string, which will tell the provider to get the secret
         * key from environment variable. The environment variable should be &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_{name}&#34;. {name} is
         * the name given to object storage instance (so not the resource label), it should be all uppercased and all dashes (-)
         * should be replaced with underscores (_). For example, object storage named &#34;my-files&#34; would use environment variable
         * named &#34;UPCLOUD_OBJECT_STORAGE_SECRET_KEY_MY_FILES&#34;.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param size The size of the object storage instance in gigabytes
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The size of the object storage instance in gigabytes
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder usedSpace(@Nullable Output<Integer> usedSpace) {
            $.usedSpace = usedSpace;
            return this;
        }

        public Builder usedSpace(Integer usedSpace) {
            return usedSpace(Output.of(usedSpace));
        }

        /**
         * @param zone The zone in which the object storage instance will be created, e.g. `de-fra1`. You can list available zones with `upctl
         * zone list`.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The zone in which the object storage instance will be created, e.g. `de-fra1`. You can list available zones with `upctl
         * zone list`.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public ObjectStorageState build() {
            return $;
        }
    }

}
