// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.upcloud.LoadbalancerDynamicBackendMemberArgs;
import com.pulumi.upcloud.Utilities;
import com.pulumi.upcloud.inputs.LoadbalancerDynamicBackendMemberState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource represents load balancer dynamic backend member
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.upcloud.Network;
 * import com.pulumi.upcloud.NetworkArgs;
 * import com.pulumi.upcloud.inputs.NetworkIpNetworkArgs;
 * import com.pulumi.upcloud.Loadbalancer;
 * import com.pulumi.upcloud.LoadbalancerArgs;
 * import com.pulumi.upcloud.LoadbalancerResolver;
 * import com.pulumi.upcloud.LoadbalancerResolverArgs;
 * import com.pulumi.upcloud.LoadbalancerBackend;
 * import com.pulumi.upcloud.LoadbalancerBackendArgs;
 * import com.pulumi.upcloud.LoadbalancerDynamicBackendMember;
 * import com.pulumi.upcloud.LoadbalancerDynamicBackendMemberArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var lbZone = config.get("lbZone").orElse("fi-hel2");
 *         var lbNetwork = new Network("lbNetwork", NetworkArgs.builder()
 *             .name("lb-test-net")
 *             .zone(lbZone)
 *             .ipNetwork(NetworkIpNetworkArgs.builder()
 *                 .address("10.0.0.0/24")
 *                 .dhcp(true)
 *                 .family("IPv4")
 *                 .build())
 *             .build());
 * 
 *         var lb = new Loadbalancer("lb", LoadbalancerArgs.builder()
 *             .configuredStatus("started")
 *             .name("lb-test")
 *             .plan("development")
 *             .zone(lbZone)
 *             .network(upcloudNetwork.lbNetwork().id())
 *             .build());
 * 
 *         var lbDns1 = new LoadbalancerResolver("lbDns1", LoadbalancerResolverArgs.builder()
 *             .loadbalancer(upcloudLoadbalancer.lb().id())
 *             .name("lb-resolver-1-test")
 *             .cacheInvalid(10)
 *             .cacheValid(100)
 *             .retries(5)
 *             .timeout(10)
 *             .timeoutRetry(10)
 *             .nameservers(            
 *                 "94.237.127.9:53",
 *                 "94.237.40.9:53")
 *             .build());
 * 
 *         var lbBe1 = new LoadbalancerBackend("lbBe1", LoadbalancerBackendArgs.builder()
 *             .loadbalancer(upcloudLoadbalancer.lb().id())
 *             .resolverName(upcloudLoadbalancerResolver.lbDns1().name())
 *             .name("lb-be-1-test")
 *             .build());
 * 
 *         var lbBe1Dm1 = new LoadbalancerDynamicBackendMember("lbBe1Dm1", LoadbalancerDynamicBackendMemberArgs.builder()
 *             .backend(upcloudLoadbalancerBackend.lbBe1().id())
 *             .name("lb-be-1-dm-1-test")
 *             .weight(10)
 *             .maxSessions(10)
 *             .enabled(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="upcloud:index/loadbalancerDynamicBackendMember:LoadbalancerDynamicBackendMember")
public class LoadbalancerDynamicBackendMember extends com.pulumi.resources.CustomResource {
    /**
     * ID of the load balancer backend to which the member is connected.
     * 
     */
    @Export(name="backend", refs={String.class}, tree="[0]")
    private Output<String> backend;

    /**
     * @return ID of the load balancer backend to which the member is connected.
     * 
     */
    public Output<String> backend() {
        return this.backend;
    }
    /**
     * Indicates if the member is enabled. Disabled members are excluded from load balancing.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Indicates if the member is enabled. Disabled members are excluded from load balancing.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Optional fallback IP address in case of failure on DNS resolving.
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return Optional fallback IP address in case of failure on DNS resolving.
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * Maximum number of sessions before queueing.
     * 
     */
    @Export(name="maxSessions", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxSessions;

    /**
     * @return Maximum number of sessions before queueing.
     * 
     */
    public Output<Integer> maxSessions() {
        return this.maxSessions;
    }
    /**
     * The name of the member. Must be unique within within the load balancer backend.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the member. Must be unique within within the load balancer backend.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Server port. Port is optional and can be specified in DNS SRV record.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return Server port. Port is optional and can be specified in DNS SRV record.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * Weight of the member. The higher the weight, the more traffic the member receives.
     * 
     */
    @Export(name="weight", refs={Integer.class}, tree="[0]")
    private Output<Integer> weight;

    /**
     * @return Weight of the member. The higher the weight, the more traffic the member receives.
     * 
     */
    public Output<Integer> weight() {
        return this.weight;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadbalancerDynamicBackendMember(java.lang.String name) {
        this(name, LoadbalancerDynamicBackendMemberArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadbalancerDynamicBackendMember(java.lang.String name, LoadbalancerDynamicBackendMemberArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadbalancerDynamicBackendMember(java.lang.String name, LoadbalancerDynamicBackendMemberArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/loadbalancerDynamicBackendMember:LoadbalancerDynamicBackendMember", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LoadbalancerDynamicBackendMember(java.lang.String name, Output<java.lang.String> id, @Nullable LoadbalancerDynamicBackendMemberState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("upcloud:index/loadbalancerDynamicBackendMember:LoadbalancerDynamicBackendMember", name, state, makeResourceOptions(options, id), false);
    }

    private static LoadbalancerDynamicBackendMemberArgs makeArgs(LoadbalancerDynamicBackendMemberArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LoadbalancerDynamicBackendMemberArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/UpCloudLtd/pulumi-upcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadbalancerDynamicBackendMember get(java.lang.String name, Output<java.lang.String> id, @Nullable LoadbalancerDynamicBackendMemberState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadbalancerDynamicBackendMember(name, id, state, options);
    }
}
