// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RouterStaticRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterStaticRouteArgs Empty = new RouterStaticRouteArgs();

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="nexthop", required=true)
    private Output<String> nexthop;

    public Output<String> nexthop() {
        return this.nexthop;
    }

    @Import(name="route", required=true)
    private Output<String> route;

    public Output<String> route() {
        return this.route;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private RouterStaticRouteArgs() {}

    private RouterStaticRouteArgs(RouterStaticRouteArgs $) {
        this.name = $.name;
        this.nexthop = $.nexthop;
        this.route = $.route;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterStaticRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterStaticRouteArgs $;

        public Builder() {
            $ = new RouterStaticRouteArgs();
        }

        public Builder(RouterStaticRouteArgs defaults) {
            $ = new RouterStaticRouteArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nexthop(Output<String> nexthop) {
            $.nexthop = nexthop;
            return this;
        }

        public Builder nexthop(String nexthop) {
            return nexthop(Output.of(nexthop));
        }

        public Builder route(Output<String> route) {
            $.route = route;
            return this;
        }

        public Builder route(String route) {
            return route(Output.of(route));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public RouterStaticRouteArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("RouterStaticRouteArgs", "name");
            }
            if ($.nexthop == null) {
                throw new MissingRequiredPropertyException("RouterStaticRouteArgs", "nexthop");
            }
            if ($.route == null) {
                throw new MissingRequiredPropertyException("RouterStaticRouteArgs", "route");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("RouterStaticRouteArgs", "type");
            }
            return $;
        }
    }

}
