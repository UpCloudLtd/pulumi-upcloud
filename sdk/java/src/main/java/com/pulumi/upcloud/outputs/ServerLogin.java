// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.upcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerLogin {
    /**
     * @return Indicates a password should be create to allow access
     * 
     */
    private @Nullable Boolean createPassword;
    /**
     * @return A list of ssh keys to access the server
     * 
     */
    private @Nullable List<String> keys;
    /**
     * @return The delivery method for the server&#39;s root password (one of `none`, `email` or `sms`)
     * 
     */
    private @Nullable String passwordDelivery;
    /**
     * @return Username to be create to access the server
     * 
     */
    private @Nullable String user;

    private ServerLogin() {}
    /**
     * @return Indicates a password should be create to allow access
     * 
     */
    public Optional<Boolean> createPassword() {
        return Optional.ofNullable(this.createPassword);
    }
    /**
     * @return A list of ssh keys to access the server
     * 
     */
    public List<String> keys() {
        return this.keys == null ? List.of() : this.keys;
    }
    /**
     * @return The delivery method for the server&#39;s root password (one of `none`, `email` or `sms`)
     * 
     */
    public Optional<String> passwordDelivery() {
        return Optional.ofNullable(this.passwordDelivery);
    }
    /**
     * @return Username to be create to access the server
     * 
     */
    public Optional<String> user() {
        return Optional.ofNullable(this.user);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerLogin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean createPassword;
        private @Nullable List<String> keys;
        private @Nullable String passwordDelivery;
        private @Nullable String user;
        public Builder() {}
        public Builder(ServerLogin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createPassword = defaults.createPassword;
    	      this.keys = defaults.keys;
    	      this.passwordDelivery = defaults.passwordDelivery;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder createPassword(@Nullable Boolean createPassword) {

            this.createPassword = createPassword;
            return this;
        }
        @CustomType.Setter
        public Builder keys(@Nullable List<String> keys) {

            this.keys = keys;
            return this;
        }
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder passwordDelivery(@Nullable String passwordDelivery) {

            this.passwordDelivery = passwordDelivery;
            return this;
        }
        @CustomType.Setter
        public Builder user(@Nullable String user) {

            this.user = user;
            return this;
        }
        public ServerLogin build() {
            final var _resultValue = new ServerLogin();
            _resultValue.createPassword = createPassword;
            _resultValue.keys = keys;
            _resultValue.passwordDelivery = passwordDelivery;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
