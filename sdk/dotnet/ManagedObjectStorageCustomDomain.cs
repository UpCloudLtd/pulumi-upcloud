// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Upcloud
{
    /// <summary>
    /// This resource represents an UpCloud Managed Object Storage custom domain. Note that DNS settings for the custom domain should be configured before creating this resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Upcloud = Pulumi.Upcloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var thisManagedObjectStorage = new Upcloud.ManagedObjectStorage("thisManagedObjectStorage", new()
    ///     {
    ///         Region = "europe-1",
    ///         ConfiguredStatus = "started",
    ///         Networks = new[]
    ///         {
    ///             new Upcloud.Inputs.ManagedObjectStorageNetworkArgs
    ///             {
    ///                 Family = "IPv4",
    ///                 Name = "public",
    ///                 Type = "public",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var thisLoadBalancerDnsChallengeDomain = Upcloud.GetLoadBalancerDnsChallengeDomain.Invoke();
    /// 
    ///     // Before creating the custom domain, configure the DNS settings for your custom domain. For example, if your custom domain is objects.example.com, you should configure the following DNS records:
    ///     // - "_acme-challenge.objects IN CNAME ${data.upcloud_load_balancer_dns_challenge_domain.this.domain}"
    ///     // - "objects IN CNAME ${[for i in upcloud_managed_object_storage.this.endpoint: i.domain_name if i.type == "public"][0]}"
    ///     // - "*.objects IN CNAME ${[for i in upcloud_managed_object_storage.this.endpoint: i.domain_name if i.type == "public"][0]}"
    ///     var thisManagedObjectStorageCustomDomain = new Upcloud.ManagedObjectStorageCustomDomain("thisManagedObjectStorageCustomDomain", new()
    ///     {
    ///         ServiceUuid = thisManagedObjectStorage.Id,
    ///         DomainName = "objects.example.com",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [UpcloudResourceType("upcloud:index/managedObjectStorageCustomDomain:ManagedObjectStorageCustomDomain")]
    public partial class ManagedObjectStorageCustomDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g.
        /// example.com.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// Managed Object Storage service UUID.
        /// </summary>
        [Output("serviceUuid")]
        public Output<string> ServiceUuid { get; private set; } = null!;

        /// <summary>
        /// At the moment only `public` is accepted.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedObjectStorageCustomDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedObjectStorageCustomDomain(string name, ManagedObjectStorageCustomDomainArgs args, CustomResourceOptions? options = null)
            : base("upcloud:index/managedObjectStorageCustomDomain:ManagedObjectStorageCustomDomain", name, args ?? new ManagedObjectStorageCustomDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedObjectStorageCustomDomain(string name, Input<string> id, ManagedObjectStorageCustomDomainState? state = null, CustomResourceOptions? options = null)
            : base("upcloud:index/managedObjectStorageCustomDomain:ManagedObjectStorageCustomDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/UpCloudLtd/pulumi-upcloud/releases/download/v${VERSION}/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedObjectStorageCustomDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedObjectStorageCustomDomain Get(string name, Input<string> id, ManagedObjectStorageCustomDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedObjectStorageCustomDomain(name, id, state, options);
        }
    }

    public sealed class ManagedObjectStorageCustomDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g.
        /// example.com.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// Managed Object Storage service UUID.
        /// </summary>
        [Input("serviceUuid", required: true)]
        public Input<string> ServiceUuid { get; set; } = null!;

        /// <summary>
        /// At the moment only `public` is accepted.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ManagedObjectStorageCustomDomainArgs()
        {
        }
        public static new ManagedObjectStorageCustomDomainArgs Empty => new ManagedObjectStorageCustomDomainArgs();
    }

    public sealed class ManagedObjectStorageCustomDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Must be a subdomain and consist of 3 to 5 parts such as objects.example.com. Cannot be root-level domain e.g.
        /// example.com.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Managed Object Storage service UUID.
        /// </summary>
        [Input("serviceUuid")]
        public Input<string>? ServiceUuid { get; set; }

        /// <summary>
        /// At the moment only `public` is accepted.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ManagedObjectStorageCustomDomainState()
        {
        }
        public static new ManagedObjectStorageCustomDomainState Empty => new ManagedObjectStorageCustomDomainState();
    }
}
