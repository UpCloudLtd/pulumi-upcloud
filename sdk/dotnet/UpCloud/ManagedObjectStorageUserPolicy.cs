// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud
{
    /// <summary>
    /// This resource represents an UpCloud Managed Object Storage user policy attachment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using UpCloud = UpCloud.Pulumi.UpCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var thisManagedObjectStorage = new UpCloud.ManagedObjectStorage("thisManagedObjectStorage", new()
    ///     {
    ///         Region = "europe-1",
    ///         ConfiguredStatus = "started",
    ///     });
    /// 
    ///     var thisManagedObjectStoragePolicy = new UpCloud.ManagedObjectStoragePolicy("thisManagedObjectStoragePolicy", new()
    ///     {
    ///         Description = "example description",
    ///         Document = "%7B%22Version%22%3A%20%222012-10-17%22%2C%20%20%22Statement%22%3A%20%5B%7B%22Action%22%3A%20%5B%22iam%3AGetUser%22%5D%2C%20%22Resource%22%3A%20%22%2A%22%2C%20%22Effect%22%3A%20%22Allow%22%2C%20%22Sid%22%3A%20%22editor%22%7D%5D%7D",
    ///         ServiceUuid = thisManagedObjectStorage.Id,
    ///     });
    /// 
    ///     var thisManagedObjectStorageUser = new UpCloud.ManagedObjectStorageUser("thisManagedObjectStorageUser", new()
    ///     {
    ///         Username = "example",
    ///         ServiceUuid = thisManagedObjectStorage.Id,
    ///     });
    /// 
    ///     var thisManagedObjectStorageUserPolicy = new UpCloud.ManagedObjectStorageUserPolicy("thisManagedObjectStorageUserPolicy", new()
    ///     {
    ///         Username = thisManagedObjectStorageUser.Username,
    ///         ServiceUuid = thisManagedObjectStorage.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [UpCloudResourceType("upcloud:index/managedObjectStorageUserPolicy:ManagedObjectStorageUserPolicy")]
    public partial class ManagedObjectStorageUserPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Policy name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Managed Object Storage service UUID.
        /// </summary>
        [Output("serviceUuid")]
        public Output<string> ServiceUuid { get; private set; } = null!;

        /// <summary>
        /// Username.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedObjectStorageUserPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedObjectStorageUserPolicy(string name, ManagedObjectStorageUserPolicyArgs args, CustomResourceOptions? options = null)
            : base("upcloud:index/managedObjectStorageUserPolicy:ManagedObjectStorageUserPolicy", name, args ?? new ManagedObjectStorageUserPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedObjectStorageUserPolicy(string name, Input<string> id, ManagedObjectStorageUserPolicyState? state = null, CustomResourceOptions? options = null)
            : base("upcloud:index/managedObjectStorageUserPolicy:ManagedObjectStorageUserPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/UpCloudLtd/pulumi-upcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedObjectStorageUserPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedObjectStorageUserPolicy Get(string name, Input<string> id, ManagedObjectStorageUserPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedObjectStorageUserPolicy(name, id, state, options);
        }
    }

    public sealed class ManagedObjectStorageUserPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policy name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Managed Object Storage service UUID.
        /// </summary>
        [Input("serviceUuid", required: true)]
        public Input<string> ServiceUuid { get; set; } = null!;

        /// <summary>
        /// Username.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public ManagedObjectStorageUserPolicyArgs()
        {
        }
        public static new ManagedObjectStorageUserPolicyArgs Empty => new ManagedObjectStorageUserPolicyArgs();
    }

    public sealed class ManagedObjectStorageUserPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Policy name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Managed Object Storage service UUID.
        /// </summary>
        [Input("serviceUuid")]
        public Input<string>? ServiceUuid { get; set; }

        /// <summary>
        /// Username.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public ManagedObjectStorageUserPolicyState()
        {
        }
        public static new ManagedObjectStorageUserPolicyState Empty => new ManagedObjectStorageUserPolicyState();
    }
}
