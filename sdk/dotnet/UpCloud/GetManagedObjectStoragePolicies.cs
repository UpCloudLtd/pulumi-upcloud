// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud
{
    public static class GetManagedObjectStoragePolicies
    {
        /// <summary>
        /// Policies available for a Managed Object Storage resource. See `managed_object_storage_user_policy` for attaching to a user.
        /// </summary>
        public static Task<GetManagedObjectStoragePoliciesResult> InvokeAsync(GetManagedObjectStoragePoliciesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedObjectStoragePoliciesResult>("upcloud:index/getManagedObjectStoragePolicies:getManagedObjectStoragePolicies", args ?? new GetManagedObjectStoragePoliciesArgs(), options.WithDefaults());

        /// <summary>
        /// Policies available for a Managed Object Storage resource. See `managed_object_storage_user_policy` for attaching to a user.
        /// </summary>
        public static Output<GetManagedObjectStoragePoliciesResult> Invoke(GetManagedObjectStoragePoliciesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedObjectStoragePoliciesResult>("upcloud:index/getManagedObjectStoragePolicies:getManagedObjectStoragePolicies", args ?? new GetManagedObjectStoragePoliciesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Policies available for a Managed Object Storage resource. See `managed_object_storage_user_policy` for attaching to a user.
        /// </summary>
        public static Output<GetManagedObjectStoragePoliciesResult> Invoke(GetManagedObjectStoragePoliciesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedObjectStoragePoliciesResult>("upcloud:index/getManagedObjectStoragePolicies:getManagedObjectStoragePolicies", args ?? new GetManagedObjectStoragePoliciesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedObjectStoragePoliciesArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceUuid", required: true)]
        public string ServiceUuid { get; set; } = null!;

        public GetManagedObjectStoragePoliciesArgs()
        {
        }
        public static new GetManagedObjectStoragePoliciesArgs Empty => new GetManagedObjectStoragePoliciesArgs();
    }

    public sealed class GetManagedObjectStoragePoliciesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceUuid", required: true)]
        public Input<string> ServiceUuid { get; set; } = null!;

        public GetManagedObjectStoragePoliciesInvokeArgs()
        {
        }
        public static new GetManagedObjectStoragePoliciesInvokeArgs Empty => new GetManagedObjectStoragePoliciesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedObjectStoragePoliciesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetManagedObjectStoragePoliciesPolicyResult> Policies;
        public readonly string ServiceUuid;

        [OutputConstructor]
        private GetManagedObjectStoragePoliciesResult(
            string id,

            ImmutableArray<Outputs.GetManagedObjectStoragePoliciesPolicyResult> policies,

            string serviceUuid)
        {
            Id = id;
            Policies = policies;
            ServiceUuid = serviceUuid;
        }
    }
}
