// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Outputs
{

    [OutputType]
    public sealed class GetManagedDatabaseMysqlSessionsSessionResult
    {
        /// <summary>
        /// Name of the application that is connected to this service.
        /// </summary>
        public readonly string ApplicationName;
        /// <summary>
        /// IP address of the client connected to this service.
        /// </summary>
        public readonly string ClientAddr;
        /// <summary>
        /// Name of the database this service is connected to.
        /// </summary>
        public readonly string Datname;
        /// <summary>
        /// Process ID of this service.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows an empty string.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The active query current duration.
        /// </summary>
        public readonly string QueryDuration;
        /// <summary>
        /// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Name of the user logged into this service.
        /// </summary>
        public readonly string Usename;

        [OutputConstructor]
        private GetManagedDatabaseMysqlSessionsSessionResult(
            string applicationName,

            string clientAddr,

            string datname,

            string id,

            string query,

            string queryDuration,

            string state,

            string usename)
        {
            ApplicationName = applicationName;
            ClientAddr = clientAddr;
            Datname = datname;
            Id = id;
            Query = query;
            QueryDuration = queryDuration;
            State = state;
            Usename = usename;
        }
    }
}
