// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Outputs
{

    [OutputType]
    public sealed class ServerStorageDevice
    {
        /// <summary>
        /// The device address the storage will be attached to (`Scsi`|`Virtio`|`Ide`). Leave `AddressPosition` field empty to auto-select next available address from that bus.
        /// </summary>
        public readonly string? Address;
        /// <summary>
        /// The device position in the given bus (defined via field `Address`). Valid values for address `Virtio` are `0-15` (`0`, for example). Valid values for `Scsi` or `Ide` are `0-1:0-1` (`0:0`, for example). Leave empty to auto-select next available address in the given bus.
        /// </summary>
        public readonly string? AddressPosition;
        /// <summary>
        /// The UUID of the storage to attach to the server.
        /// </summary>
        public readonly string? Storage;
        /// <summary>
        /// The device type the storage will be attached as
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ServerStorageDevice(
            string? address,

            string? addressPosition,

            string? storage,

            string? type)
        {
            Address = address;
            AddressPosition = addressPosition;
            Storage = storage;
            Type = type;
        }
    }
}
