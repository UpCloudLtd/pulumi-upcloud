// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Outputs
{

    [OutputType]
    public sealed class LoadbalancerFrontendRuleActions
    {
        /// <summary>
        /// Redirects HTTP requests to specified location or URL scheme. Only either location or scheme can be defined at a time.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsHttpRedirect> HttpRedirects;
        /// <summary>
        /// Returns HTTP response with specified HTTP status.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsHttpReturn> HttpReturns;
        /// <summary>
        /// Adds 'X-Forwarded-For / -Proto / -Port' headers in your forwarded requests
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsSetForwardedHeader> SetForwardedHeaders;
        /// <summary>
        /// Set request header
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsSetRequestHeader> SetRequestHeaders;
        /// <summary>
        /// Set response header
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsSetResponseHeader> SetResponseHeaders;
        /// <summary>
        /// Terminates a connection.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsTcpReject> TcpRejects;
        /// <summary>
        /// Routes traffic to specified `backend`.
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsUseBackend> UseBackends;

        [OutputConstructor]
        private LoadbalancerFrontendRuleActions(
            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsHttpRedirect> httpRedirects,

            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsHttpReturn> httpReturns,

            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsSetForwardedHeader> setForwardedHeaders,

            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsSetRequestHeader> setRequestHeaders,

            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsSetResponseHeader> setResponseHeaders,

            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsTcpReject> tcpRejects,

            ImmutableArray<Outputs.LoadbalancerFrontendRuleActionsUseBackend> useBackends)
        {
            HttpRedirects = httpRedirects;
            HttpReturns = httpReturns;
            SetForwardedHeaders = setForwardedHeaders;
            SetRequestHeaders = setRequestHeaders;
            SetResponseHeaders = setResponseHeaders;
            TcpRejects = tcpRejects;
            UseBackends = useBackends;
        }
    }
}
