// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Inputs
{

    public sealed class ServerNetworkInterfaceArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalIpAddresses")]
        private InputList<Inputs.ServerNetworkInterfaceAdditionalIpAddressArgs>? _additionalIpAddresses;

        /// <summary>
        /// 0-31 blocks of additional IP addresses to assign to this interface. Allowed only with network interfaces of type `Private`
        /// </summary>
        public InputList<Inputs.ServerNetworkInterfaceAdditionalIpAddressArgs> AdditionalIpAddresses
        {
            get => _additionalIpAddresses ?? (_additionalIpAddresses = new InputList<Inputs.ServerNetworkInterfaceAdditionalIpAddressArgs>());
            set => _additionalIpAddresses = value;
        }

        /// <summary>
        /// `True` if this interface should be used for network booting.
        /// </summary>
        [Input("bootable")]
        public Input<bool>? Bootable { get; set; }

        /// <summary>
        /// The interface index.
        /// </summary>
        [Input("index")]
        public Input<int>? Index { get; set; }

        /// <summary>
        /// The primary IP address of this interface.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The type of the primary IP address of this interface (one of `IPv4` or `IPv6`).
        /// </summary>
        [Input("ipAddressFamily")]
        public Input<string>? IpAddressFamily { get; set; }

        /// <summary>
        /// `True` indicates that the primary IP address is a floating IP address.
        /// </summary>
        [Input("ipAddressFloating")]
        public Input<bool>? IpAddressFloating { get; set; }

        /// <summary>
        /// The MAC address of the interface.
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        /// <summary>
        /// The UUID of the network to attach this interface to. Required for private network interfaces.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// `True` if source IP should be filtered.
        /// </summary>
        [Input("sourceIpFiltering")]
        public Input<bool>? SourceIpFiltering { get; set; }

        /// <summary>
        /// Network interface type. For private network interfaces, a network must be specified with an existing network id.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ServerNetworkInterfaceArgs()
        {
        }
        public static new ServerNetworkInterfaceArgs Empty => new ServerNetworkInterfaceArgs();
    }
}
