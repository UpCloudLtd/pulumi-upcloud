// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Inputs
{

    public sealed class NetworkIpNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CIDR range of the subnet
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// Is DHCP enabled?
        /// </summary>
        [Input("dhcp", required: true)]
        public Input<bool> Dhcp { get; set; } = null!;

        /// <summary>
        /// Is the gateway the DHCP default route?
        /// </summary>
        [Input("dhcpDefaultRoute")]
        public Input<bool>? DhcpDefaultRoute { get; set; }

        [Input("dhcpDns")]
        private InputList<string>? _dhcpDns;

        /// <summary>
        /// The DNS servers given by DHCP
        /// </summary>
        public InputList<string> DhcpDns
        {
            get => _dhcpDns ?? (_dhcpDns = new InputList<string>());
            set => _dhcpDns = value;
        }

        [Input("dhcpRoutes")]
        private InputList<string>? _dhcpRoutes;

        /// <summary>
        /// The additional DHCP classless static routes given by DHCP
        /// </summary>
        public InputList<string> DhcpRoutes
        {
            get => _dhcpRoutes ?? (_dhcpRoutes = new InputList<string>());
            set => _dhcpRoutes = value;
        }

        /// <summary>
        /// DHCP routes auto-population configuration.
        /// </summary>
        [Input("dhcpRoutesConfiguration")]
        public Input<Inputs.NetworkIpNetworkDhcpRoutesConfigurationArgs>? DhcpRoutesConfiguration { get; set; }

        /// <summary>
        /// IP address family
        /// </summary>
        [Input("family", required: true)]
        public Input<string> Family { get; set; } = null!;

        /// <summary>
        /// Gateway address given by DHCP
        /// </summary>
        [Input("gateway")]
        public Input<string>? Gateway { get; set; }

        public NetworkIpNetworkArgs()
        {
        }
        public static new NetworkIpNetworkArgs Empty => new NetworkIpNetworkArgs();
    }
}
