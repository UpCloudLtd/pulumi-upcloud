// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Inputs
{

    public sealed class GetHostsHostInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Free form text describing the host
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The unique id of the host
        /// </summary>
        [Input("hostId", required: true)]
        public Input<int> HostId { get; set; } = null!;

        [Input("statistics")]
        private InputList<Inputs.GetHostsHostStatisticInputArgs>? _statistics;
        public InputList<Inputs.GetHostsHostStatisticInputArgs> Statistics
        {
            get => _statistics ?? (_statistics = new InputList<Inputs.GetHostsHostStatisticInputArgs>());
            set => _statistics = value;
        }

        /// <summary>
        /// If true, this node can be used as a host for Windows servers.
        /// </summary>
        [Input("windowsEnabled", required: true)]
        public Input<bool> WindowsEnabled { get; set; } = null!;

        /// <summary>
        /// The zone the host is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetHostsHostInputArgs()
        {
        }
        public static new GetHostsHostInputArgs Empty => new GetHostsHostInputArgs();
    }
}
