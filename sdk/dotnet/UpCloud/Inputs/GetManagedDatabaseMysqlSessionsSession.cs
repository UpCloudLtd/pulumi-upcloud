// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Inputs
{

    public sealed class GetManagedDatabaseMysqlSessionsSessionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the application that is connected to this service.
        /// </summary>
        [Input("applicationName", required: true)]
        public string ApplicationName { get; set; } = null!;

        /// <summary>
        /// IP address of the client connected to this service.
        /// </summary>
        [Input("clientAddr", required: true)]
        public string ClientAddr { get; set; } = null!;

        /// <summary>
        /// Name of the database this service is connected to.
        /// </summary>
        [Input("datname", required: true)]
        public string Datname { get; set; } = null!;

        /// <summary>
        /// Process ID of this service.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows an empty string.
        /// </summary>
        [Input("query", required: true)]
        public string Query { get; set; } = null!;

        /// <summary>
        /// The active query current duration.
        /// </summary>
        [Input("queryDuration", required: true)]
        public string QueryDuration { get; set; } = null!;

        /// <summary>
        /// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
        /// </summary>
        [Input("state", required: true)]
        public string State { get; set; } = null!;

        /// <summary>
        /// Name of the user logged into this service.
        /// </summary>
        [Input("usename", required: true)]
        public string Usename { get; set; } = null!;

        public GetManagedDatabaseMysqlSessionsSessionArgs()
        {
        }
        public static new GetManagedDatabaseMysqlSessionsSessionArgs Empty => new GetManagedDatabaseMysqlSessionsSessionArgs();
    }
}
