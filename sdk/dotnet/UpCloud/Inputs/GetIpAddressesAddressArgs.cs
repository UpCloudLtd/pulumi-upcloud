// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Inputs
{

    public sealed class GetIpAddressesAddressInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is address for utility or public network
        /// </summary>
        [Input("access", required: true)]
        public Input<string> Access { get; set; } = null!;

        /// <summary>
        /// An UpCloud assigned IP Address
        /// </summary>
        [Input("address", required: true)]
        public Input<string> Address { get; set; } = null!;

        /// <summary>
        /// IP address family
        /// </summary>
        [Input("family", required: true)]
        public Input<string> Family { get; set; } = null!;

        /// <summary>
        /// Does the IP Address represents a floating IP Address
        /// </summary>
        [Input("floating", required: true)]
        public Input<bool> Floating { get; set; } = null!;

        /// <summary>
        /// MAC address of server interface to assign address to
        /// </summary>
        [Input("mac", required: true)]
        public Input<string> Mac { get; set; } = null!;

        /// <summary>
        /// Is the address a part of a plan
        /// </summary>
        [Input("partOfPlan", required: true)]
        public Input<bool> PartOfPlan { get; set; } = null!;

        /// <summary>
        /// A reverse DNS record entry
        /// </summary>
        [Input("ptrRecord", required: true)]
        public Input<string> PtrRecord { get; set; } = null!;

        /// <summary>
        /// The unique identifier for a server
        /// </summary>
        [Input("server", required: true)]
        public Input<string> Server { get; set; } = null!;

        /// <summary>
        /// Zone of address, required when assigning a detached floating IP address, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetIpAddressesAddressInputArgs()
        {
        }
        public static new GetIpAddressesAddressInputArgs Empty => new GetIpAddressesAddressInputArgs();
    }
}
