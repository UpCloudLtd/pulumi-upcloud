// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UpCloud.Pulumi.UpCloud.Inputs
{

    public sealed class ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Lower occupancy limit of the allocated quota of memory for the shard. Specify the lower occupancy limit of the allocated quota of memory for the shard.
        ///                     If the total memory usage of a shard is below this limit,
        ///                     shard indexing backpressure decreases the current allocated memory for that shard.
        ///                     Default is 0.75.
        /// </summary>
        [Input("lower")]
        public Input<double>? Lower { get; set; }

        /// <summary>
        /// Optimal occupancy of the allocated quota of memory for the shard. Specify the optimal occupancy of the allocated quota of memory for the shard.
        ///                     If the total memory usage of a shard is at this level,
        ///                     shard indexing backpressure doesnâ€™t change the current allocated memory for that shard.
        ///                     Default is 0.85.
        /// </summary>
        [Input("optimal")]
        public Input<double>? Optimal { get; set; }

        /// <summary>
        /// Upper occupancy limit of the allocated quota of memory for the shard. Specify the upper occupancy limit of the allocated quota of memory for the shard.
        ///                     If the total memory usage of a shard is above this limit,
        ///                     shard indexing backpressure increases the current allocated memory for that shard.
        ///                     Default is 0.95.
        /// </summary>
        [Input("upper")]
        public Input<double>? Upper { get; set; }

        public ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorGetArgs()
        {
        }
        public static new ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorGetArgs Empty => new ManagedDatabaseOpensearchPropertiesShardIndexingPressureOperatingFactorGetArgs();
    }
}
