// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource represents an UpCloud Managed Object Storage user access key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as upcloud from "@upcloud/pulumi-upcloud";
 *
 * const _this = new upcloud.ManagedObjectStorage("this", {
 *     name: "example",
 *     region: "europe-1",
 *     configuredStatus: "started",
 * });
 * const thisManagedObjectStorageUser = new upcloud.ManagedObjectStorageUser("this", {
 *     username: "example",
 *     serviceUuid: _this.id,
 * });
 * const thisManagedObjectStorageUserAccessKey = new upcloud.ManagedObjectStorageUserAccessKey("this", {
 *     username: thisManagedObjectStorageUser.username,
 *     serviceUuid: _this.id,
 *     status: "Active",
 * });
 * ```
 */
export class ManagedObjectStorageUserAccessKey extends pulumi.CustomResource {
    /**
     * Get an existing ManagedObjectStorageUserAccessKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedObjectStorageUserAccessKeyState, opts?: pulumi.CustomResourceOptions): ManagedObjectStorageUserAccessKey {
        return new ManagedObjectStorageUserAccessKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'upcloud:index/managedObjectStorageUserAccessKey:ManagedObjectStorageUserAccessKey';

    /**
     * Returns true if the given object is an instance of ManagedObjectStorageUserAccessKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedObjectStorageUserAccessKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedObjectStorageUserAccessKey.__pulumiType;
    }

    /**
     * Access key id.
     */
    public /*out*/ readonly accessKeyId!: pulumi.Output<string>;
    /**
     * Creation time.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Last used.
     */
    public /*out*/ readonly lastUsedAt!: pulumi.Output<string>;
    /**
     * Secret access key.
     */
    public /*out*/ readonly secretAccessKey!: pulumi.Output<string>;
    /**
     * Managed Object Storage service UUID.
     */
    public readonly serviceUuid!: pulumi.Output<string>;
    /**
     * Status of the key. Valid values: `Active`|`Inactive`
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Username.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a ManagedObjectStorageUserAccessKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedObjectStorageUserAccessKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedObjectStorageUserAccessKeyArgs | ManagedObjectStorageUserAccessKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedObjectStorageUserAccessKeyState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["lastUsedAt"] = state ? state.lastUsedAt : undefined;
            resourceInputs["secretAccessKey"] = state ? state.secretAccessKey : undefined;
            resourceInputs["serviceUuid"] = state ? state.serviceUuid : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as ManagedObjectStorageUserAccessKeyArgs | undefined;
            if ((!args || args.serviceUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceUuid'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["serviceUuid"] = args ? args.serviceUuid : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["accessKeyId"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUsedAt"] = undefined /*out*/;
            resourceInputs["secretAccessKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ManagedObjectStorageUserAccessKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedObjectStorageUserAccessKey resources.
 */
export interface ManagedObjectStorageUserAccessKeyState {
    /**
     * Access key id.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * Creation time.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Last used.
     */
    lastUsedAt?: pulumi.Input<string>;
    /**
     * Secret access key.
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * Managed Object Storage service UUID.
     */
    serviceUuid?: pulumi.Input<string>;
    /**
     * Status of the key. Valid values: `Active`|`Inactive`
     */
    status?: pulumi.Input<string>;
    /**
     * Username.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedObjectStorageUserAccessKey resource.
 */
export interface ManagedObjectStorageUserAccessKeyArgs {
    /**
     * Managed Object Storage service UUID.
     */
    serviceUuid: pulumi.Input<string>;
    /**
     * Status of the key. Valid values: `Active`|`Inactive`
     */
    status: pulumi.Input<string>;
    /**
     * Username.
     */
    username: pulumi.Input<string>;
}
