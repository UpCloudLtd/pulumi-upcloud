// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * This resource represents an UpCloud Managed Object Storage instance, which provides S3 compatible storage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as upcloud from "@pulumi/upcloud";
 *
 * // Create router for the network
 * const thisRouter = new upcloud.Router("thisRouter", {});
 * // Create network for the Managed Object Storage
 * const thisNetwork = new upcloud.Network("thisNetwork", {
 *     zone: "fi-hel1",
 *     ipNetwork: {
 *         address: "172.16.2.0/24",
 *         dhcp: true,
 *         family: "IPv4",
 *     },
 *     router: thisRouter.id,
 * });
 * const thisManagedObjectStorage = new upcloud.ManagedObjectStorage("thisManagedObjectStorage", {
 *     region: "europe-1",
 *     configuredStatus: "started",
 *     networks: [{
 *         family: "IPv4",
 *         name: "example-private-net",
 *         type: "private",
 *         uuid: thisNetwork.id,
 *     }],
 *     labels: {
 *         "managed-by": "terraform",
 *     },
 * });
 * ```
 */
export class ManagedObjectStorage extends pulumi.CustomResource {
    /**
     * Get an existing ManagedObjectStorage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedObjectStorageState, opts?: pulumi.CustomResourceOptions): ManagedObjectStorage {
        return new ManagedObjectStorage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'upcloud:index/managedObjectStorage:ManagedObjectStorage';

    /**
     * Returns true if the given object is an instance of ManagedObjectStorage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedObjectStorage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedObjectStorage.__pulumiType;
    }

    /**
     * Service status managed by the end user.
     */
    public readonly configuredStatus!: pulumi.Output<string>;
    /**
     * Creation time.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Endpoints for accessing the Managed Object Storage service.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.ManagedObjectStorageEndpoint[]>;
    /**
     * Key-value pairs to classify the managed object storage.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Name of the Managed Object Storage service. Must be unique within account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain
     * access from multiple private networks that might reside in different zones, create the networks and a corresponding
     * router for each network.
     */
    public readonly networks!: pulumi.Output<outputs.ManagedObjectStorageNetwork[] | undefined>;
    /**
     * Operational state of the Managed Object Storage service.
     */
    public /*out*/ readonly operationalState!: pulumi.Output<string>;
    /**
     * Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Creation time.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a ManagedObjectStorage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedObjectStorageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedObjectStorageArgs | ManagedObjectStorageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedObjectStorageState | undefined;
            resourceInputs["configuredStatus"] = state ? state.configuredStatus : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["operationalState"] = state ? state.operationalState : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as ManagedObjectStorageArgs | undefined;
            if ((!args || args.configuredStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configuredStatus'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["configuredStatus"] = args ? args.configuredStatus : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["operationalState"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedObjectStorage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedObjectStorage resources.
 */
export interface ManagedObjectStorageState {
    /**
     * Service status managed by the end user.
     */
    configuredStatus?: pulumi.Input<string>;
    /**
     * Creation time.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Endpoints for accessing the Managed Object Storage service.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.ManagedObjectStorageEndpoint>[]>;
    /**
     * Key-value pairs to classify the managed object storage.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the Managed Object Storage service. Must be unique within account.
     */
    name?: pulumi.Input<string>;
    /**
     * Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain
     * access from multiple private networks that might reside in different zones, create the networks and a corresponding
     * router for each network.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ManagedObjectStorageNetwork>[]>;
    /**
     * Operational state of the Managed Object Storage service.
     */
    operationalState?: pulumi.Input<string>;
    /**
     * Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
     */
    region?: pulumi.Input<string>;
    /**
     * Creation time.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedObjectStorage resource.
 */
export interface ManagedObjectStorageArgs {
    /**
     * Service status managed by the end user.
     */
    configuredStatus: pulumi.Input<string>;
    /**
     * Key-value pairs to classify the managed object storage.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the Managed Object Storage service. Must be unique within account.
     */
    name?: pulumi.Input<string>;
    /**
     * Attached networks from where object storage can be used. Private networks must reside in object storage region. To gain
     * access from multiple private networks that might reside in different zones, create the networks and a corresponding
     * router for each network.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ManagedObjectStorageNetwork>[]>;
    /**
     * Region in which the service will be hosted, see `upcloud.getManagedObjectStorageRegions` data source.
     */
    region: pulumi.Input<string>;
}
