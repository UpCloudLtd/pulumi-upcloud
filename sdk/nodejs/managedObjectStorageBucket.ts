// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * This resource represents an UpCloud Managed Object Storage bucket.
 *
 * > This resource uses the UpCloud API to manage the Managed Object Storage buckets. The main difference to S3 API is that the buckets can be deleted even when the bucket contains objects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as upcloud from "@upcloud/pulumi-upcloud";
 *
 * const example = new upcloud.ManagedObjectStorage("example", {
 *     name: "bucket-example-objstov2",
 *     region: "europe-1",
 *     configuredStatus: "started",
 * });
 * const exampleManagedObjectStorageBucket = new upcloud.ManagedObjectStorageBucket("example", {
 *     serviceUuid: example.id,
 *     name: "bucket",
 * });
 * ```
 */
export class ManagedObjectStorageBucket extends pulumi.CustomResource {
    /**
     * Get an existing ManagedObjectStorageBucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedObjectStorageBucketState, opts?: pulumi.CustomResourceOptions): ManagedObjectStorageBucket {
        return new ManagedObjectStorageBucket(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'upcloud:index/managedObjectStorageBucket:ManagedObjectStorageBucket';

    /**
     * Returns true if the given object is an instance of ManagedObjectStorageBucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedObjectStorageBucket {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedObjectStorageBucket.__pulumiType;
    }

    /**
     * Name of the bucket.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Managed Object Storage service UUID.
     */
    public readonly serviceUuid!: pulumi.Output<string>;
    /**
     * Number of objects stored in the bucket.
     */
    public /*out*/ readonly totalObjects!: pulumi.Output<number>;
    /**
     * Total size of objects stored in the bucket.
     */
    public /*out*/ readonly totalSizeBytes!: pulumi.Output<number>;

    /**
     * Create a ManagedObjectStorageBucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedObjectStorageBucketArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedObjectStorageBucketArgs | ManagedObjectStorageBucketState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedObjectStorageBucketState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceUuid"] = state ? state.serviceUuid : undefined;
            resourceInputs["totalObjects"] = state ? state.totalObjects : undefined;
            resourceInputs["totalSizeBytes"] = state ? state.totalSizeBytes : undefined;
        } else {
            const args = argsOrState as ManagedObjectStorageBucketArgs | undefined;
            if ((!args || args.serviceUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceUuid'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceUuid"] = args ? args.serviceUuid : undefined;
            resourceInputs["totalObjects"] = undefined /*out*/;
            resourceInputs["totalSizeBytes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedObjectStorageBucket.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedObjectStorageBucket resources.
 */
export interface ManagedObjectStorageBucketState {
    /**
     * Name of the bucket.
     */
    name?: pulumi.Input<string>;
    /**
     * Managed Object Storage service UUID.
     */
    serviceUuid?: pulumi.Input<string>;
    /**
     * Number of objects stored in the bucket.
     */
    totalObjects?: pulumi.Input<number>;
    /**
     * Total size of objects stored in the bucket.
     */
    totalSizeBytes?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ManagedObjectStorageBucket resource.
 */
export interface ManagedObjectStorageBucketArgs {
    /**
     * Name of the bucket.
     */
    name?: pulumi.Input<string>;
    /**
     * Managed Object Storage service UUID.
     */
    serviceUuid: pulumi.Input<string>;
}
