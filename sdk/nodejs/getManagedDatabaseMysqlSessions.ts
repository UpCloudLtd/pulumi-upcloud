// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Current sessions of a MySQL managed database
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as upcloud from "@pulumi/upcloud";
 * import * as upcloud from "@upcloud/pulumi-upcloud";
 *
 * // Use data source to gather a list of the active sessions for a Managed MySQL Database
 * // Create a Managed MySQL resource
 * const exampleManagedDatabaseMysql = new upcloud.ManagedDatabaseMysql("exampleManagedDatabaseMysql", {
 *     title: "mysql-example1",
 *     plan: "1x1xCPU-2GB-25GB",
 *     zone: "fi-hel1",
 * });
 * const exampleManagedDatabaseMysqlSessions = upcloud.getManagedDatabaseMysqlSessionsOutput({
 *     service: exampleManagedDatabaseMysql.id,
 * });
 * ```
 */
export function getManagedDatabaseMysqlSessions(args: GetManagedDatabaseMysqlSessionsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedDatabaseMysqlSessionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("upcloud:index/getManagedDatabaseMysqlSessions:getManagedDatabaseMysqlSessions", {
        "limit": args.limit,
        "offset": args.offset,
        "order": args.order,
        "service": args.service,
        "sessions": args.sessions,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedDatabaseMysqlSessions.
 */
export interface GetManagedDatabaseMysqlSessionsArgs {
    limit?: number;
    offset?: number;
    order?: string;
    service: string;
    sessions?: inputs.GetManagedDatabaseMysqlSessionsSession[];
}

/**
 * A collection of values returned by getManagedDatabaseMysqlSessions.
 */
export interface GetManagedDatabaseMysqlSessionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly offset?: number;
    readonly order?: string;
    readonly service: string;
    readonly sessions: outputs.GetManagedDatabaseMysqlSessionsSession[];
}
/**
 * Current sessions of a MySQL managed database
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as upcloud from "@pulumi/upcloud";
 * import * as upcloud from "@upcloud/pulumi-upcloud";
 *
 * // Use data source to gather a list of the active sessions for a Managed MySQL Database
 * // Create a Managed MySQL resource
 * const exampleManagedDatabaseMysql = new upcloud.ManagedDatabaseMysql("exampleManagedDatabaseMysql", {
 *     title: "mysql-example1",
 *     plan: "1x1xCPU-2GB-25GB",
 *     zone: "fi-hel1",
 * });
 * const exampleManagedDatabaseMysqlSessions = upcloud.getManagedDatabaseMysqlSessionsOutput({
 *     service: exampleManagedDatabaseMysql.id,
 * });
 * ```
 */
export function getManagedDatabaseMysqlSessionsOutput(args: GetManagedDatabaseMysqlSessionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedDatabaseMysqlSessionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("upcloud:index/getManagedDatabaseMysqlSessions:getManagedDatabaseMysqlSessions", {
        "limit": args.limit,
        "offset": args.offset,
        "order": args.order,
        "service": args.service,
        "sessions": args.sessions,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedDatabaseMysqlSessions.
 */
export interface GetManagedDatabaseMysqlSessionsOutputArgs {
    limit?: pulumi.Input<number>;
    offset?: pulumi.Input<number>;
    order?: pulumi.Input<string>;
    service: pulumi.Input<string>;
    sessions?: pulumi.Input<pulumi.Input<inputs.GetManagedDatabaseMysqlSessionsSessionArgs>[]>;
}
