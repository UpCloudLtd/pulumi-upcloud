{
    "compilerOptions": {
        "outDir": "bin",
        "target": "ES2020",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "config/index.ts",
        "config/vars.ts",
        "floatingIpAddress.ts",
        "gateway.ts",
        "gatewayConnection.ts",
        "gatewayConnectionTunnel.ts",
        "getHosts.ts",
        "getIpAddresses.ts",
        "getKubernetesCluster.ts",
        "getLoadBalancerDnsChallengeDomain.ts",
        "getManagedDatabaseMysqlSessions.ts",
        "getManagedDatabaseOpensearchIndices.ts",
        "getManagedDatabasePostgresqlSessions.ts",
        "getManagedDatabaseRedisSessions.ts",
        "getManagedDatabaseValkeySessions.ts",
        "getManagedObjectStoragePolicies.ts",
        "getManagedObjectStorageRegions.ts",
        "getNetworks.ts",
        "getStorage.ts",
        "getTags.ts",
        "getZone.ts",
        "getZones.ts",
        "index.ts",
        "kubernetesCluster.ts",
        "kubernetesNodeGroup.ts",
        "loadbalancer.ts",
        "loadbalancerBackend.ts",
        "loadbalancerBackendTlsConfig.ts",
        "loadbalancerDynamicBackendMember.ts",
        "loadbalancerDynamicCertificateBundle.ts",
        "loadbalancerFrontend.ts",
        "loadbalancerFrontendRule.ts",
        "loadbalancerFrontendTlsConfig.ts",
        "loadbalancerManualCertificateBundle.ts",
        "loadbalancerResolver.ts",
        "loadbalancerStaticBackendMember.ts",
        "managedDatabaseLogicalDatabase.ts",
        "managedDatabaseMysql.ts",
        "managedDatabaseOpensearch.ts",
        "managedDatabasePostgresql.ts",
        "managedDatabaseRedis.ts",
        "managedDatabaseUser.ts",
        "managedDatabaseValkey.ts",
        "managedObjectStorage.ts",
        "managedObjectStorageBucket.ts",
        "managedObjectStorageCustomDomain.ts",
        "managedObjectStoragePolicy.ts",
        "managedObjectStorageUser.ts",
        "managedObjectStorageUserAccessKey.ts",
        "managedObjectStorageUserPolicy.ts",
        "network.ts",
        "networkPeering.ts",
        "provider.ts",
        "router.ts",
        "server.ts",
        "serverFirewallRules.ts",
        "serverGroup.ts",
        "storage.ts",
        "storageBackup.ts",
        "storageTemplate.ts",
        "tag.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
