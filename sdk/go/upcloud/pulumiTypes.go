// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upcloud

import (
	"context"
	"reflect"

	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GatewayAddress struct {
	// IP addresss
	Address *string `pulumi:"address"`
	// Name of the IP address
	Name *string `pulumi:"name"`
}

// GatewayAddressInput is an input type that accepts GatewayAddressArgs and GatewayAddressOutput values.
// You can construct a concrete instance of `GatewayAddressInput` via:
//
//	GatewayAddressArgs{...}
type GatewayAddressInput interface {
	pulumi.Input

	ToGatewayAddressOutput() GatewayAddressOutput
	ToGatewayAddressOutputWithContext(context.Context) GatewayAddressOutput
}

type GatewayAddressArgs struct {
	// IP addresss
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Name of the IP address
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GatewayAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayAddress)(nil)).Elem()
}

func (i GatewayAddressArgs) ToGatewayAddressOutput() GatewayAddressOutput {
	return i.ToGatewayAddressOutputWithContext(context.Background())
}

func (i GatewayAddressArgs) ToGatewayAddressOutputWithContext(ctx context.Context) GatewayAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAddressOutput)
}

func (i GatewayAddressArgs) ToGatewayAddressPtrOutput() GatewayAddressPtrOutput {
	return i.ToGatewayAddressPtrOutputWithContext(context.Background())
}

func (i GatewayAddressArgs) ToGatewayAddressPtrOutputWithContext(ctx context.Context) GatewayAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAddressOutput).ToGatewayAddressPtrOutputWithContext(ctx)
}

// GatewayAddressPtrInput is an input type that accepts GatewayAddressArgs, GatewayAddressPtr and GatewayAddressPtrOutput values.
// You can construct a concrete instance of `GatewayAddressPtrInput` via:
//
//	        GatewayAddressArgs{...}
//
//	or:
//
//	        nil
type GatewayAddressPtrInput interface {
	pulumi.Input

	ToGatewayAddressPtrOutput() GatewayAddressPtrOutput
	ToGatewayAddressPtrOutputWithContext(context.Context) GatewayAddressPtrOutput
}

type gatewayAddressPtrType GatewayAddressArgs

func GatewayAddressPtr(v *GatewayAddressArgs) GatewayAddressPtrInput {
	return (*gatewayAddressPtrType)(v)
}

func (*gatewayAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayAddress)(nil)).Elem()
}

func (i *gatewayAddressPtrType) ToGatewayAddressPtrOutput() GatewayAddressPtrOutput {
	return i.ToGatewayAddressPtrOutputWithContext(context.Background())
}

func (i *gatewayAddressPtrType) ToGatewayAddressPtrOutputWithContext(ctx context.Context) GatewayAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAddressPtrOutput)
}

// GatewayAddressArrayInput is an input type that accepts GatewayAddressArray and GatewayAddressArrayOutput values.
// You can construct a concrete instance of `GatewayAddressArrayInput` via:
//
//	GatewayAddressArray{ GatewayAddressArgs{...} }
type GatewayAddressArrayInput interface {
	pulumi.Input

	ToGatewayAddressArrayOutput() GatewayAddressArrayOutput
	ToGatewayAddressArrayOutputWithContext(context.Context) GatewayAddressArrayOutput
}

type GatewayAddressArray []GatewayAddressInput

func (GatewayAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayAddress)(nil)).Elem()
}

func (i GatewayAddressArray) ToGatewayAddressArrayOutput() GatewayAddressArrayOutput {
	return i.ToGatewayAddressArrayOutputWithContext(context.Background())
}

func (i GatewayAddressArray) ToGatewayAddressArrayOutputWithContext(ctx context.Context) GatewayAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayAddressArrayOutput)
}

type GatewayAddressOutput struct{ *pulumi.OutputState }

func (GatewayAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayAddress)(nil)).Elem()
}

func (o GatewayAddressOutput) ToGatewayAddressOutput() GatewayAddressOutput {
	return o
}

func (o GatewayAddressOutput) ToGatewayAddressOutputWithContext(ctx context.Context) GatewayAddressOutput {
	return o
}

func (o GatewayAddressOutput) ToGatewayAddressPtrOutput() GatewayAddressPtrOutput {
	return o.ToGatewayAddressPtrOutputWithContext(context.Background())
}

func (o GatewayAddressOutput) ToGatewayAddressPtrOutputWithContext(ctx context.Context) GatewayAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayAddress) *GatewayAddress {
		return &v
	}).(GatewayAddressPtrOutput)
}

// IP addresss
func (o GatewayAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Name of the IP address
func (o GatewayAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GatewayAddressPtrOutput struct{ *pulumi.OutputState }

func (GatewayAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayAddress)(nil)).Elem()
}

func (o GatewayAddressPtrOutput) ToGatewayAddressPtrOutput() GatewayAddressPtrOutput {
	return o
}

func (o GatewayAddressPtrOutput) ToGatewayAddressPtrOutputWithContext(ctx context.Context) GatewayAddressPtrOutput {
	return o
}

func (o GatewayAddressPtrOutput) Elem() GatewayAddressOutput {
	return o.ApplyT(func(v *GatewayAddress) GatewayAddress {
		if v != nil {
			return *v
		}
		var ret GatewayAddress
		return ret
	}).(GatewayAddressOutput)
}

// IP addresss
func (o GatewayAddressPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Name of the IP address
func (o GatewayAddressPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayAddress) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GatewayAddressArrayOutput struct{ *pulumi.OutputState }

func (GatewayAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayAddress)(nil)).Elem()
}

func (o GatewayAddressArrayOutput) ToGatewayAddressArrayOutput() GatewayAddressArrayOutput {
	return o
}

func (o GatewayAddressArrayOutput) ToGatewayAddressArrayOutputWithContext(ctx context.Context) GatewayAddressArrayOutput {
	return o
}

func (o GatewayAddressArrayOutput) Index(i pulumi.IntInput) GatewayAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayAddress {
		return vs[0].([]GatewayAddress)[vs[1].(int)]
	}).(GatewayAddressOutput)
}

type GatewayConnectionLocalRoute struct {
	// Name of the route
	Name string `pulumi:"name"`
	// Destination prefix of the route; needs to be a valid IPv4 prefix
	StaticNetwork string `pulumi:"staticNetwork"`
	// Type of route; currently the only supported type is 'static'
	Type *string `pulumi:"type"`
}

// GatewayConnectionLocalRouteInput is an input type that accepts GatewayConnectionLocalRouteArgs and GatewayConnectionLocalRouteOutput values.
// You can construct a concrete instance of `GatewayConnectionLocalRouteInput` via:
//
//	GatewayConnectionLocalRouteArgs{...}
type GatewayConnectionLocalRouteInput interface {
	pulumi.Input

	ToGatewayConnectionLocalRouteOutput() GatewayConnectionLocalRouteOutput
	ToGatewayConnectionLocalRouteOutputWithContext(context.Context) GatewayConnectionLocalRouteOutput
}

type GatewayConnectionLocalRouteArgs struct {
	// Name of the route
	Name pulumi.StringInput `pulumi:"name"`
	// Destination prefix of the route; needs to be a valid IPv4 prefix
	StaticNetwork pulumi.StringInput `pulumi:"staticNetwork"`
	// Type of route; currently the only supported type is 'static'
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayConnectionLocalRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionLocalRoute)(nil)).Elem()
}

func (i GatewayConnectionLocalRouteArgs) ToGatewayConnectionLocalRouteOutput() GatewayConnectionLocalRouteOutput {
	return i.ToGatewayConnectionLocalRouteOutputWithContext(context.Background())
}

func (i GatewayConnectionLocalRouteArgs) ToGatewayConnectionLocalRouteOutputWithContext(ctx context.Context) GatewayConnectionLocalRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionLocalRouteOutput)
}

// GatewayConnectionLocalRouteArrayInput is an input type that accepts GatewayConnectionLocalRouteArray and GatewayConnectionLocalRouteArrayOutput values.
// You can construct a concrete instance of `GatewayConnectionLocalRouteArrayInput` via:
//
//	GatewayConnectionLocalRouteArray{ GatewayConnectionLocalRouteArgs{...} }
type GatewayConnectionLocalRouteArrayInput interface {
	pulumi.Input

	ToGatewayConnectionLocalRouteArrayOutput() GatewayConnectionLocalRouteArrayOutput
	ToGatewayConnectionLocalRouteArrayOutputWithContext(context.Context) GatewayConnectionLocalRouteArrayOutput
}

type GatewayConnectionLocalRouteArray []GatewayConnectionLocalRouteInput

func (GatewayConnectionLocalRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayConnectionLocalRoute)(nil)).Elem()
}

func (i GatewayConnectionLocalRouteArray) ToGatewayConnectionLocalRouteArrayOutput() GatewayConnectionLocalRouteArrayOutput {
	return i.ToGatewayConnectionLocalRouteArrayOutputWithContext(context.Background())
}

func (i GatewayConnectionLocalRouteArray) ToGatewayConnectionLocalRouteArrayOutputWithContext(ctx context.Context) GatewayConnectionLocalRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionLocalRouteArrayOutput)
}

type GatewayConnectionLocalRouteOutput struct{ *pulumi.OutputState }

func (GatewayConnectionLocalRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionLocalRoute)(nil)).Elem()
}

func (o GatewayConnectionLocalRouteOutput) ToGatewayConnectionLocalRouteOutput() GatewayConnectionLocalRouteOutput {
	return o
}

func (o GatewayConnectionLocalRouteOutput) ToGatewayConnectionLocalRouteOutputWithContext(ctx context.Context) GatewayConnectionLocalRouteOutput {
	return o
}

// Name of the route
func (o GatewayConnectionLocalRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayConnectionLocalRoute) string { return v.Name }).(pulumi.StringOutput)
}

// Destination prefix of the route; needs to be a valid IPv4 prefix
func (o GatewayConnectionLocalRouteOutput) StaticNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayConnectionLocalRoute) string { return v.StaticNetwork }).(pulumi.StringOutput)
}

// Type of route; currently the only supported type is 'static'
func (o GatewayConnectionLocalRouteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayConnectionLocalRoute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayConnectionLocalRouteArrayOutput struct{ *pulumi.OutputState }

func (GatewayConnectionLocalRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayConnectionLocalRoute)(nil)).Elem()
}

func (o GatewayConnectionLocalRouteArrayOutput) ToGatewayConnectionLocalRouteArrayOutput() GatewayConnectionLocalRouteArrayOutput {
	return o
}

func (o GatewayConnectionLocalRouteArrayOutput) ToGatewayConnectionLocalRouteArrayOutputWithContext(ctx context.Context) GatewayConnectionLocalRouteArrayOutput {
	return o
}

func (o GatewayConnectionLocalRouteArrayOutput) Index(i pulumi.IntInput) GatewayConnectionLocalRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayConnectionLocalRoute {
		return vs[0].([]GatewayConnectionLocalRoute)[vs[1].(int)]
	}).(GatewayConnectionLocalRouteOutput)
}

type GatewayConnectionRemoteRoute struct {
	// Name of the route
	Name string `pulumi:"name"`
	// Destination prefix of the route; needs to be a valid IPv4 prefix
	StaticNetwork string `pulumi:"staticNetwork"`
	// Type of route; currently the only supported type is 'static'
	Type *string `pulumi:"type"`
}

// GatewayConnectionRemoteRouteInput is an input type that accepts GatewayConnectionRemoteRouteArgs and GatewayConnectionRemoteRouteOutput values.
// You can construct a concrete instance of `GatewayConnectionRemoteRouteInput` via:
//
//	GatewayConnectionRemoteRouteArgs{...}
type GatewayConnectionRemoteRouteInput interface {
	pulumi.Input

	ToGatewayConnectionRemoteRouteOutput() GatewayConnectionRemoteRouteOutput
	ToGatewayConnectionRemoteRouteOutputWithContext(context.Context) GatewayConnectionRemoteRouteOutput
}

type GatewayConnectionRemoteRouteArgs struct {
	// Name of the route
	Name pulumi.StringInput `pulumi:"name"`
	// Destination prefix of the route; needs to be a valid IPv4 prefix
	StaticNetwork pulumi.StringInput `pulumi:"staticNetwork"`
	// Type of route; currently the only supported type is 'static'
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GatewayConnectionRemoteRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionRemoteRoute)(nil)).Elem()
}

func (i GatewayConnectionRemoteRouteArgs) ToGatewayConnectionRemoteRouteOutput() GatewayConnectionRemoteRouteOutput {
	return i.ToGatewayConnectionRemoteRouteOutputWithContext(context.Background())
}

func (i GatewayConnectionRemoteRouteArgs) ToGatewayConnectionRemoteRouteOutputWithContext(ctx context.Context) GatewayConnectionRemoteRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionRemoteRouteOutput)
}

// GatewayConnectionRemoteRouteArrayInput is an input type that accepts GatewayConnectionRemoteRouteArray and GatewayConnectionRemoteRouteArrayOutput values.
// You can construct a concrete instance of `GatewayConnectionRemoteRouteArrayInput` via:
//
//	GatewayConnectionRemoteRouteArray{ GatewayConnectionRemoteRouteArgs{...} }
type GatewayConnectionRemoteRouteArrayInput interface {
	pulumi.Input

	ToGatewayConnectionRemoteRouteArrayOutput() GatewayConnectionRemoteRouteArrayOutput
	ToGatewayConnectionRemoteRouteArrayOutputWithContext(context.Context) GatewayConnectionRemoteRouteArrayOutput
}

type GatewayConnectionRemoteRouteArray []GatewayConnectionRemoteRouteInput

func (GatewayConnectionRemoteRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayConnectionRemoteRoute)(nil)).Elem()
}

func (i GatewayConnectionRemoteRouteArray) ToGatewayConnectionRemoteRouteArrayOutput() GatewayConnectionRemoteRouteArrayOutput {
	return i.ToGatewayConnectionRemoteRouteArrayOutputWithContext(context.Background())
}

func (i GatewayConnectionRemoteRouteArray) ToGatewayConnectionRemoteRouteArrayOutputWithContext(ctx context.Context) GatewayConnectionRemoteRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionRemoteRouteArrayOutput)
}

type GatewayConnectionRemoteRouteOutput struct{ *pulumi.OutputState }

func (GatewayConnectionRemoteRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionRemoteRoute)(nil)).Elem()
}

func (o GatewayConnectionRemoteRouteOutput) ToGatewayConnectionRemoteRouteOutput() GatewayConnectionRemoteRouteOutput {
	return o
}

func (o GatewayConnectionRemoteRouteOutput) ToGatewayConnectionRemoteRouteOutputWithContext(ctx context.Context) GatewayConnectionRemoteRouteOutput {
	return o
}

// Name of the route
func (o GatewayConnectionRemoteRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayConnectionRemoteRoute) string { return v.Name }).(pulumi.StringOutput)
}

// Destination prefix of the route; needs to be a valid IPv4 prefix
func (o GatewayConnectionRemoteRouteOutput) StaticNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayConnectionRemoteRoute) string { return v.StaticNetwork }).(pulumi.StringOutput)
}

// Type of route; currently the only supported type is 'static'
func (o GatewayConnectionRemoteRouteOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayConnectionRemoteRoute) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GatewayConnectionRemoteRouteArrayOutput struct{ *pulumi.OutputState }

func (GatewayConnectionRemoteRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayConnectionRemoteRoute)(nil)).Elem()
}

func (o GatewayConnectionRemoteRouteArrayOutput) ToGatewayConnectionRemoteRouteArrayOutput() GatewayConnectionRemoteRouteArrayOutput {
	return o
}

func (o GatewayConnectionRemoteRouteArrayOutput) ToGatewayConnectionRemoteRouteArrayOutputWithContext(ctx context.Context) GatewayConnectionRemoteRouteArrayOutput {
	return o
}

func (o GatewayConnectionRemoteRouteArrayOutput) Index(i pulumi.IntInput) GatewayConnectionRemoteRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayConnectionRemoteRoute {
		return vs[0].([]GatewayConnectionRemoteRoute)[vs[1].(int)]
	}).(GatewayConnectionRemoteRouteOutput)
}

type GatewayConnectionTunnelIpsecAuthPsk struct {
	// The pre-shared key. This value is only used during resource creation and is not returned in the state. It is not possible to update this value. If you need to update it, delete the connection and create a new one.
	Psk string `pulumi:"psk"`
}

// GatewayConnectionTunnelIpsecAuthPskInput is an input type that accepts GatewayConnectionTunnelIpsecAuthPskArgs and GatewayConnectionTunnelIpsecAuthPskOutput values.
// You can construct a concrete instance of `GatewayConnectionTunnelIpsecAuthPskInput` via:
//
//	GatewayConnectionTunnelIpsecAuthPskArgs{...}
type GatewayConnectionTunnelIpsecAuthPskInput interface {
	pulumi.Input

	ToGatewayConnectionTunnelIpsecAuthPskOutput() GatewayConnectionTunnelIpsecAuthPskOutput
	ToGatewayConnectionTunnelIpsecAuthPskOutputWithContext(context.Context) GatewayConnectionTunnelIpsecAuthPskOutput
}

type GatewayConnectionTunnelIpsecAuthPskArgs struct {
	// The pre-shared key. This value is only used during resource creation and is not returned in the state. It is not possible to update this value. If you need to update it, delete the connection and create a new one.
	Psk pulumi.StringInput `pulumi:"psk"`
}

func (GatewayConnectionTunnelIpsecAuthPskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionTunnelIpsecAuthPsk)(nil)).Elem()
}

func (i GatewayConnectionTunnelIpsecAuthPskArgs) ToGatewayConnectionTunnelIpsecAuthPskOutput() GatewayConnectionTunnelIpsecAuthPskOutput {
	return i.ToGatewayConnectionTunnelIpsecAuthPskOutputWithContext(context.Background())
}

func (i GatewayConnectionTunnelIpsecAuthPskArgs) ToGatewayConnectionTunnelIpsecAuthPskOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecAuthPskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionTunnelIpsecAuthPskOutput)
}

func (i GatewayConnectionTunnelIpsecAuthPskArgs) ToGatewayConnectionTunnelIpsecAuthPskPtrOutput() GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return i.ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(context.Background())
}

func (i GatewayConnectionTunnelIpsecAuthPskArgs) ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionTunnelIpsecAuthPskOutput).ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(ctx)
}

// GatewayConnectionTunnelIpsecAuthPskPtrInput is an input type that accepts GatewayConnectionTunnelIpsecAuthPskArgs, GatewayConnectionTunnelIpsecAuthPskPtr and GatewayConnectionTunnelIpsecAuthPskPtrOutput values.
// You can construct a concrete instance of `GatewayConnectionTunnelIpsecAuthPskPtrInput` via:
//
//	        GatewayConnectionTunnelIpsecAuthPskArgs{...}
//
//	or:
//
//	        nil
type GatewayConnectionTunnelIpsecAuthPskPtrInput interface {
	pulumi.Input

	ToGatewayConnectionTunnelIpsecAuthPskPtrOutput() GatewayConnectionTunnelIpsecAuthPskPtrOutput
	ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(context.Context) GatewayConnectionTunnelIpsecAuthPskPtrOutput
}

type gatewayConnectionTunnelIpsecAuthPskPtrType GatewayConnectionTunnelIpsecAuthPskArgs

func GatewayConnectionTunnelIpsecAuthPskPtr(v *GatewayConnectionTunnelIpsecAuthPskArgs) GatewayConnectionTunnelIpsecAuthPskPtrInput {
	return (*gatewayConnectionTunnelIpsecAuthPskPtrType)(v)
}

func (*gatewayConnectionTunnelIpsecAuthPskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConnectionTunnelIpsecAuthPsk)(nil)).Elem()
}

func (i *gatewayConnectionTunnelIpsecAuthPskPtrType) ToGatewayConnectionTunnelIpsecAuthPskPtrOutput() GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return i.ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(context.Background())
}

func (i *gatewayConnectionTunnelIpsecAuthPskPtrType) ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionTunnelIpsecAuthPskPtrOutput)
}

type GatewayConnectionTunnelIpsecAuthPskOutput struct{ *pulumi.OutputState }

func (GatewayConnectionTunnelIpsecAuthPskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionTunnelIpsecAuthPsk)(nil)).Elem()
}

func (o GatewayConnectionTunnelIpsecAuthPskOutput) ToGatewayConnectionTunnelIpsecAuthPskOutput() GatewayConnectionTunnelIpsecAuthPskOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecAuthPskOutput) ToGatewayConnectionTunnelIpsecAuthPskOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecAuthPskOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecAuthPskOutput) ToGatewayConnectionTunnelIpsecAuthPskPtrOutput() GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return o.ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(context.Background())
}

func (o GatewayConnectionTunnelIpsecAuthPskOutput) ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayConnectionTunnelIpsecAuthPsk) *GatewayConnectionTunnelIpsecAuthPsk {
		return &v
	}).(GatewayConnectionTunnelIpsecAuthPskPtrOutput)
}

// The pre-shared key. This value is only used during resource creation and is not returned in the state. It is not possible to update this value. If you need to update it, delete the connection and create a new one.
func (o GatewayConnectionTunnelIpsecAuthPskOutput) Psk() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecAuthPsk) string { return v.Psk }).(pulumi.StringOutput)
}

type GatewayConnectionTunnelIpsecAuthPskPtrOutput struct{ *pulumi.OutputState }

func (GatewayConnectionTunnelIpsecAuthPskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConnectionTunnelIpsecAuthPsk)(nil)).Elem()
}

func (o GatewayConnectionTunnelIpsecAuthPskPtrOutput) ToGatewayConnectionTunnelIpsecAuthPskPtrOutput() GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecAuthPskPtrOutput) ToGatewayConnectionTunnelIpsecAuthPskPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecAuthPskPtrOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecAuthPskPtrOutput) Elem() GatewayConnectionTunnelIpsecAuthPskOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecAuthPsk) GatewayConnectionTunnelIpsecAuthPsk {
		if v != nil {
			return *v
		}
		var ret GatewayConnectionTunnelIpsecAuthPsk
		return ret
	}).(GatewayConnectionTunnelIpsecAuthPskOutput)
}

// The pre-shared key. This value is only used during resource creation and is not returned in the state. It is not possible to update this value. If you need to update it, delete the connection and create a new one.
func (o GatewayConnectionTunnelIpsecAuthPskPtrOutput) Psk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecAuthPsk) *string {
		if v == nil {
			return nil
		}
		return &v.Psk
	}).(pulumi.StringPtrOutput)
}

type GatewayConnectionTunnelIpsecProperties struct {
	// IKE child SA rekey time in seconds.
	ChildRekeyTime *int `pulumi:"childRekeyTime"`
	// Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
	DpdDelay *int `pulumi:"dpdDelay"`
	// Timeout period for DPD reply before considering the peer to be dead, in seconds.
	DpdTimeout *int `pulumi:"dpdTimeout"`
	// Maximum IKE SA lifetime in seconds.
	IkeLifetime *int `pulumi:"ikeLifetime"`
	// List of Phase 1: Proposal algorithms.
	Phase1Algorithms []string `pulumi:"phase1Algorithms"`
	// List of Phase 1 Diffie-Hellman group numbers.
	Phase1DhGroupNumbers []int `pulumi:"phase1DhGroupNumbers"`
	// List of Phase 1 integrity algorithms.
	Phase1IntegrityAlgorithms []string `pulumi:"phase1IntegrityAlgorithms"`
	// List of Phase 2: Security Association algorithms.
	Phase2Algorithms []string `pulumi:"phase2Algorithms"`
	// List of Phase 2 Diffie-Hellman group numbers.
	Phase2DhGroupNumbers []int `pulumi:"phase2DhGroupNumbers"`
	// List of Phase 2 integrity algorithms.
	Phase2IntegrityAlgorithms []string `pulumi:"phase2IntegrityAlgorithms"`
	// IKE SA rekey time in seconds.
	RekeyTime *int `pulumi:"rekeyTime"`
}

// GatewayConnectionTunnelIpsecPropertiesInput is an input type that accepts GatewayConnectionTunnelIpsecPropertiesArgs and GatewayConnectionTunnelIpsecPropertiesOutput values.
// You can construct a concrete instance of `GatewayConnectionTunnelIpsecPropertiesInput` via:
//
//	GatewayConnectionTunnelIpsecPropertiesArgs{...}
type GatewayConnectionTunnelIpsecPropertiesInput interface {
	pulumi.Input

	ToGatewayConnectionTunnelIpsecPropertiesOutput() GatewayConnectionTunnelIpsecPropertiesOutput
	ToGatewayConnectionTunnelIpsecPropertiesOutputWithContext(context.Context) GatewayConnectionTunnelIpsecPropertiesOutput
}

type GatewayConnectionTunnelIpsecPropertiesArgs struct {
	// IKE child SA rekey time in seconds.
	ChildRekeyTime pulumi.IntPtrInput `pulumi:"childRekeyTime"`
	// Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
	DpdDelay pulumi.IntPtrInput `pulumi:"dpdDelay"`
	// Timeout period for DPD reply before considering the peer to be dead, in seconds.
	DpdTimeout pulumi.IntPtrInput `pulumi:"dpdTimeout"`
	// Maximum IKE SA lifetime in seconds.
	IkeLifetime pulumi.IntPtrInput `pulumi:"ikeLifetime"`
	// List of Phase 1: Proposal algorithms.
	Phase1Algorithms pulumi.StringArrayInput `pulumi:"phase1Algorithms"`
	// List of Phase 1 Diffie-Hellman group numbers.
	Phase1DhGroupNumbers pulumi.IntArrayInput `pulumi:"phase1DhGroupNumbers"`
	// List of Phase 1 integrity algorithms.
	Phase1IntegrityAlgorithms pulumi.StringArrayInput `pulumi:"phase1IntegrityAlgorithms"`
	// List of Phase 2: Security Association algorithms.
	Phase2Algorithms pulumi.StringArrayInput `pulumi:"phase2Algorithms"`
	// List of Phase 2 Diffie-Hellman group numbers.
	Phase2DhGroupNumbers pulumi.IntArrayInput `pulumi:"phase2DhGroupNumbers"`
	// List of Phase 2 integrity algorithms.
	Phase2IntegrityAlgorithms pulumi.StringArrayInput `pulumi:"phase2IntegrityAlgorithms"`
	// IKE SA rekey time in seconds.
	RekeyTime pulumi.IntPtrInput `pulumi:"rekeyTime"`
}

func (GatewayConnectionTunnelIpsecPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionTunnelIpsecProperties)(nil)).Elem()
}

func (i GatewayConnectionTunnelIpsecPropertiesArgs) ToGatewayConnectionTunnelIpsecPropertiesOutput() GatewayConnectionTunnelIpsecPropertiesOutput {
	return i.ToGatewayConnectionTunnelIpsecPropertiesOutputWithContext(context.Background())
}

func (i GatewayConnectionTunnelIpsecPropertiesArgs) ToGatewayConnectionTunnelIpsecPropertiesOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionTunnelIpsecPropertiesOutput)
}

func (i GatewayConnectionTunnelIpsecPropertiesArgs) ToGatewayConnectionTunnelIpsecPropertiesPtrOutput() GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return i.ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(context.Background())
}

func (i GatewayConnectionTunnelIpsecPropertiesArgs) ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionTunnelIpsecPropertiesOutput).ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(ctx)
}

// GatewayConnectionTunnelIpsecPropertiesPtrInput is an input type that accepts GatewayConnectionTunnelIpsecPropertiesArgs, GatewayConnectionTunnelIpsecPropertiesPtr and GatewayConnectionTunnelIpsecPropertiesPtrOutput values.
// You can construct a concrete instance of `GatewayConnectionTunnelIpsecPropertiesPtrInput` via:
//
//	        GatewayConnectionTunnelIpsecPropertiesArgs{...}
//
//	or:
//
//	        nil
type GatewayConnectionTunnelIpsecPropertiesPtrInput interface {
	pulumi.Input

	ToGatewayConnectionTunnelIpsecPropertiesPtrOutput() GatewayConnectionTunnelIpsecPropertiesPtrOutput
	ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(context.Context) GatewayConnectionTunnelIpsecPropertiesPtrOutput
}

type gatewayConnectionTunnelIpsecPropertiesPtrType GatewayConnectionTunnelIpsecPropertiesArgs

func GatewayConnectionTunnelIpsecPropertiesPtr(v *GatewayConnectionTunnelIpsecPropertiesArgs) GatewayConnectionTunnelIpsecPropertiesPtrInput {
	return (*gatewayConnectionTunnelIpsecPropertiesPtrType)(v)
}

func (*gatewayConnectionTunnelIpsecPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConnectionTunnelIpsecProperties)(nil)).Elem()
}

func (i *gatewayConnectionTunnelIpsecPropertiesPtrType) ToGatewayConnectionTunnelIpsecPropertiesPtrOutput() GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return i.ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(context.Background())
}

func (i *gatewayConnectionTunnelIpsecPropertiesPtrType) ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayConnectionTunnelIpsecPropertiesPtrOutput)
}

type GatewayConnectionTunnelIpsecPropertiesOutput struct{ *pulumi.OutputState }

func (GatewayConnectionTunnelIpsecPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayConnectionTunnelIpsecProperties)(nil)).Elem()
}

func (o GatewayConnectionTunnelIpsecPropertiesOutput) ToGatewayConnectionTunnelIpsecPropertiesOutput() GatewayConnectionTunnelIpsecPropertiesOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecPropertiesOutput) ToGatewayConnectionTunnelIpsecPropertiesOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecPropertiesOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecPropertiesOutput) ToGatewayConnectionTunnelIpsecPropertiesPtrOutput() GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return o.ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(context.Background())
}

func (o GatewayConnectionTunnelIpsecPropertiesOutput) ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayConnectionTunnelIpsecProperties) *GatewayConnectionTunnelIpsecProperties {
		return &v
	}).(GatewayConnectionTunnelIpsecPropertiesPtrOutput)
}

// IKE child SA rekey time in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) ChildRekeyTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) *int { return v.ChildRekeyTime }).(pulumi.IntPtrOutput)
}

// Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) DpdDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) *int { return v.DpdDelay }).(pulumi.IntPtrOutput)
}

// Timeout period for DPD reply before considering the peer to be dead, in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) DpdTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) *int { return v.DpdTimeout }).(pulumi.IntPtrOutput)
}

// Maximum IKE SA lifetime in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) *int { return v.IkeLifetime }).(pulumi.IntPtrOutput)
}

// List of Phase 1: Proposal algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) Phase1Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) []string { return v.Phase1Algorithms }).(pulumi.StringArrayOutput)
}

// List of Phase 1 Diffie-Hellman group numbers.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) Phase1DhGroupNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) []int { return v.Phase1DhGroupNumbers }).(pulumi.IntArrayOutput)
}

// List of Phase 1 integrity algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) Phase1IntegrityAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) []string { return v.Phase1IntegrityAlgorithms }).(pulumi.StringArrayOutput)
}

// List of Phase 2: Security Association algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) Phase2Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) []string { return v.Phase2Algorithms }).(pulumi.StringArrayOutput)
}

// List of Phase 2 Diffie-Hellman group numbers.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) Phase2DhGroupNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) []int { return v.Phase2DhGroupNumbers }).(pulumi.IntArrayOutput)
}

// List of Phase 2 integrity algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) Phase2IntegrityAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) []string { return v.Phase2IntegrityAlgorithms }).(pulumi.StringArrayOutput)
}

// IKE SA rekey time in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesOutput) RekeyTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GatewayConnectionTunnelIpsecProperties) *int { return v.RekeyTime }).(pulumi.IntPtrOutput)
}

type GatewayConnectionTunnelIpsecPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GatewayConnectionTunnelIpsecPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayConnectionTunnelIpsecProperties)(nil)).Elem()
}

func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) ToGatewayConnectionTunnelIpsecPropertiesPtrOutput() GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) ToGatewayConnectionTunnelIpsecPropertiesPtrOutputWithContext(ctx context.Context) GatewayConnectionTunnelIpsecPropertiesPtrOutput {
	return o
}

func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Elem() GatewayConnectionTunnelIpsecPropertiesOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) GatewayConnectionTunnelIpsecProperties {
		if v != nil {
			return *v
		}
		var ret GatewayConnectionTunnelIpsecProperties
		return ret
	}).(GatewayConnectionTunnelIpsecPropertiesOutput)
}

// IKE child SA rekey time in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) ChildRekeyTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) *int {
		if v == nil {
			return nil
		}
		return v.ChildRekeyTime
	}).(pulumi.IntPtrOutput)
}

// Delay before sending Dead Peer Detection packets if no traffic is detected, in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) DpdDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) *int {
		if v == nil {
			return nil
		}
		return v.DpdDelay
	}).(pulumi.IntPtrOutput)
}

// Timeout period for DPD reply before considering the peer to be dead, in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) DpdTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) *int {
		if v == nil {
			return nil
		}
		return v.DpdTimeout
	}).(pulumi.IntPtrOutput)
}

// Maximum IKE SA lifetime in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) IkeLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) *int {
		if v == nil {
			return nil
		}
		return v.IkeLifetime
	}).(pulumi.IntPtrOutput)
}

// List of Phase 1: Proposal algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Phase1Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) []string {
		if v == nil {
			return nil
		}
		return v.Phase1Algorithms
	}).(pulumi.StringArrayOutput)
}

// List of Phase 1 Diffie-Hellman group numbers.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Phase1DhGroupNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) []int {
		if v == nil {
			return nil
		}
		return v.Phase1DhGroupNumbers
	}).(pulumi.IntArrayOutput)
}

// List of Phase 1 integrity algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Phase1IntegrityAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) []string {
		if v == nil {
			return nil
		}
		return v.Phase1IntegrityAlgorithms
	}).(pulumi.StringArrayOutput)
}

// List of Phase 2: Security Association algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Phase2Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) []string {
		if v == nil {
			return nil
		}
		return v.Phase2Algorithms
	}).(pulumi.StringArrayOutput)
}

// List of Phase 2 Diffie-Hellman group numbers.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Phase2DhGroupNumbers() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) []int {
		if v == nil {
			return nil
		}
		return v.Phase2DhGroupNumbers
	}).(pulumi.IntArrayOutput)
}

// List of Phase 2 integrity algorithms.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) Phase2IntegrityAlgorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) []string {
		if v == nil {
			return nil
		}
		return v.Phase2IntegrityAlgorithms
	}).(pulumi.StringArrayOutput)
}

// IKE SA rekey time in seconds.
func (o GatewayConnectionTunnelIpsecPropertiesPtrOutput) RekeyTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GatewayConnectionTunnelIpsecProperties) *int {
		if v == nil {
			return nil
		}
		return v.RekeyTime
	}).(pulumi.IntPtrOutput)
}

type GatewayRouter struct {
	// ID of the router attached to the gateway.
	Id string `pulumi:"id"`
}

// GatewayRouterInput is an input type that accepts GatewayRouterArgs and GatewayRouterOutput values.
// You can construct a concrete instance of `GatewayRouterInput` via:
//
//	GatewayRouterArgs{...}
type GatewayRouterInput interface {
	pulumi.Input

	ToGatewayRouterOutput() GatewayRouterOutput
	ToGatewayRouterOutputWithContext(context.Context) GatewayRouterOutput
}

type GatewayRouterArgs struct {
	// ID of the router attached to the gateway.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GatewayRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouter)(nil)).Elem()
}

func (i GatewayRouterArgs) ToGatewayRouterOutput() GatewayRouterOutput {
	return i.ToGatewayRouterOutputWithContext(context.Background())
}

func (i GatewayRouterArgs) ToGatewayRouterOutputWithContext(ctx context.Context) GatewayRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouterOutput)
}

func (i GatewayRouterArgs) ToGatewayRouterPtrOutput() GatewayRouterPtrOutput {
	return i.ToGatewayRouterPtrOutputWithContext(context.Background())
}

func (i GatewayRouterArgs) ToGatewayRouterPtrOutputWithContext(ctx context.Context) GatewayRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouterOutput).ToGatewayRouterPtrOutputWithContext(ctx)
}

// GatewayRouterPtrInput is an input type that accepts GatewayRouterArgs, GatewayRouterPtr and GatewayRouterPtrOutput values.
// You can construct a concrete instance of `GatewayRouterPtrInput` via:
//
//	        GatewayRouterArgs{...}
//
//	or:
//
//	        nil
type GatewayRouterPtrInput interface {
	pulumi.Input

	ToGatewayRouterPtrOutput() GatewayRouterPtrOutput
	ToGatewayRouterPtrOutputWithContext(context.Context) GatewayRouterPtrOutput
}

type gatewayRouterPtrType GatewayRouterArgs

func GatewayRouterPtr(v *GatewayRouterArgs) GatewayRouterPtrInput {
	return (*gatewayRouterPtrType)(v)
}

func (*gatewayRouterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouter)(nil)).Elem()
}

func (i *gatewayRouterPtrType) ToGatewayRouterPtrOutput() GatewayRouterPtrOutput {
	return i.ToGatewayRouterPtrOutputWithContext(context.Background())
}

func (i *gatewayRouterPtrType) ToGatewayRouterPtrOutputWithContext(ctx context.Context) GatewayRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouterPtrOutput)
}

type GatewayRouterOutput struct{ *pulumi.OutputState }

func (GatewayRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouter)(nil)).Elem()
}

func (o GatewayRouterOutput) ToGatewayRouterOutput() GatewayRouterOutput {
	return o
}

func (o GatewayRouterOutput) ToGatewayRouterOutputWithContext(ctx context.Context) GatewayRouterOutput {
	return o
}

func (o GatewayRouterOutput) ToGatewayRouterPtrOutput() GatewayRouterPtrOutput {
	return o.ToGatewayRouterPtrOutputWithContext(context.Background())
}

func (o GatewayRouterOutput) ToGatewayRouterPtrOutputWithContext(ctx context.Context) GatewayRouterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayRouter) *GatewayRouter {
		return &v
	}).(GatewayRouterPtrOutput)
}

// ID of the router attached to the gateway.
func (o GatewayRouterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouter) string { return v.Id }).(pulumi.StringOutput)
}

type GatewayRouterPtrOutput struct{ *pulumi.OutputState }

func (GatewayRouterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayRouter)(nil)).Elem()
}

func (o GatewayRouterPtrOutput) ToGatewayRouterPtrOutput() GatewayRouterPtrOutput {
	return o
}

func (o GatewayRouterPtrOutput) ToGatewayRouterPtrOutputWithContext(ctx context.Context) GatewayRouterPtrOutput {
	return o
}

func (o GatewayRouterPtrOutput) Elem() GatewayRouterOutput {
	return o.ApplyT(func(v *GatewayRouter) GatewayRouter {
		if v != nil {
			return *v
		}
		var ret GatewayRouter
		return ret
	}).(GatewayRouterOutput)
}

// ID of the router attached to the gateway.
func (o GatewayRouterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayRouter) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupCustomPlan struct {
	// The number of CPU cores dedicated to individual node group nodes when using custom plan
	Cores int `pulumi:"cores"`
	// The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
	Memory int `pulumi:"memory"`
	// The size of the storage device in gigabytes.
	StorageSize int `pulumi:"storageSize"`
	// The storage tier to use. Defaults to maxiops
	StorageTier *string `pulumi:"storageTier"`
}

// KubernetesNodeGroupCustomPlanInput is an input type that accepts KubernetesNodeGroupCustomPlanArgs and KubernetesNodeGroupCustomPlanOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupCustomPlanInput` via:
//
//	KubernetesNodeGroupCustomPlanArgs{...}
type KubernetesNodeGroupCustomPlanInput interface {
	pulumi.Input

	ToKubernetesNodeGroupCustomPlanOutput() KubernetesNodeGroupCustomPlanOutput
	ToKubernetesNodeGroupCustomPlanOutputWithContext(context.Context) KubernetesNodeGroupCustomPlanOutput
}

type KubernetesNodeGroupCustomPlanArgs struct {
	// The number of CPU cores dedicated to individual node group nodes when using custom plan
	Cores pulumi.IntInput `pulumi:"cores"`
	// The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The size of the storage device in gigabytes.
	StorageSize pulumi.IntInput `pulumi:"storageSize"`
	// The storage tier to use. Defaults to maxiops
	StorageTier pulumi.StringPtrInput `pulumi:"storageTier"`
}

func (KubernetesNodeGroupCustomPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupCustomPlan)(nil)).Elem()
}

func (i KubernetesNodeGroupCustomPlanArgs) ToKubernetesNodeGroupCustomPlanOutput() KubernetesNodeGroupCustomPlanOutput {
	return i.ToKubernetesNodeGroupCustomPlanOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupCustomPlanArgs) ToKubernetesNodeGroupCustomPlanOutputWithContext(ctx context.Context) KubernetesNodeGroupCustomPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupCustomPlanOutput)
}

func (i KubernetesNodeGroupCustomPlanArgs) ToKubernetesNodeGroupCustomPlanPtrOutput() KubernetesNodeGroupCustomPlanPtrOutput {
	return i.ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupCustomPlanArgs) ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupCustomPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupCustomPlanOutput).ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(ctx)
}

// KubernetesNodeGroupCustomPlanPtrInput is an input type that accepts KubernetesNodeGroupCustomPlanArgs, KubernetesNodeGroupCustomPlanPtr and KubernetesNodeGroupCustomPlanPtrOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupCustomPlanPtrInput` via:
//
//	        KubernetesNodeGroupCustomPlanArgs{...}
//
//	or:
//
//	        nil
type KubernetesNodeGroupCustomPlanPtrInput interface {
	pulumi.Input

	ToKubernetesNodeGroupCustomPlanPtrOutput() KubernetesNodeGroupCustomPlanPtrOutput
	ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(context.Context) KubernetesNodeGroupCustomPlanPtrOutput
}

type kubernetesNodeGroupCustomPlanPtrType KubernetesNodeGroupCustomPlanArgs

func KubernetesNodeGroupCustomPlanPtr(v *KubernetesNodeGroupCustomPlanArgs) KubernetesNodeGroupCustomPlanPtrInput {
	return (*kubernetesNodeGroupCustomPlanPtrType)(v)
}

func (*kubernetesNodeGroupCustomPlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupCustomPlan)(nil)).Elem()
}

func (i *kubernetesNodeGroupCustomPlanPtrType) ToKubernetesNodeGroupCustomPlanPtrOutput() KubernetesNodeGroupCustomPlanPtrOutput {
	return i.ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodeGroupCustomPlanPtrType) ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupCustomPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupCustomPlanPtrOutput)
}

type KubernetesNodeGroupCustomPlanOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupCustomPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupCustomPlan)(nil)).Elem()
}

func (o KubernetesNodeGroupCustomPlanOutput) ToKubernetesNodeGroupCustomPlanOutput() KubernetesNodeGroupCustomPlanOutput {
	return o
}

func (o KubernetesNodeGroupCustomPlanOutput) ToKubernetesNodeGroupCustomPlanOutputWithContext(ctx context.Context) KubernetesNodeGroupCustomPlanOutput {
	return o
}

func (o KubernetesNodeGroupCustomPlanOutput) ToKubernetesNodeGroupCustomPlanPtrOutput() KubernetesNodeGroupCustomPlanPtrOutput {
	return o.ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(context.Background())
}

func (o KubernetesNodeGroupCustomPlanOutput) ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupCustomPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesNodeGroupCustomPlan) *KubernetesNodeGroupCustomPlan {
		return &v
	}).(KubernetesNodeGroupCustomPlanPtrOutput)
}

// The number of CPU cores dedicated to individual node group nodes when using custom plan
func (o KubernetesNodeGroupCustomPlanOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupCustomPlan) int { return v.Cores }).(pulumi.IntOutput)
}

// The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
func (o KubernetesNodeGroupCustomPlanOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupCustomPlan) int { return v.Memory }).(pulumi.IntOutput)
}

// The size of the storage device in gigabytes.
func (o KubernetesNodeGroupCustomPlanOutput) StorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesNodeGroupCustomPlan) int { return v.StorageSize }).(pulumi.IntOutput)
}

// The storage tier to use. Defaults to maxiops
func (o KubernetesNodeGroupCustomPlanOutput) StorageTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodeGroupCustomPlan) *string { return v.StorageTier }).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupCustomPlanPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupCustomPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodeGroupCustomPlan)(nil)).Elem()
}

func (o KubernetesNodeGroupCustomPlanPtrOutput) ToKubernetesNodeGroupCustomPlanPtrOutput() KubernetesNodeGroupCustomPlanPtrOutput {
	return o
}

func (o KubernetesNodeGroupCustomPlanPtrOutput) ToKubernetesNodeGroupCustomPlanPtrOutputWithContext(ctx context.Context) KubernetesNodeGroupCustomPlanPtrOutput {
	return o
}

func (o KubernetesNodeGroupCustomPlanPtrOutput) Elem() KubernetesNodeGroupCustomPlanOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupCustomPlan) KubernetesNodeGroupCustomPlan {
		if v != nil {
			return *v
		}
		var ret KubernetesNodeGroupCustomPlan
		return ret
	}).(KubernetesNodeGroupCustomPlanOutput)
}

// The number of CPU cores dedicated to individual node group nodes when using custom plan
func (o KubernetesNodeGroupCustomPlanPtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupCustomPlan) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

// The amount of memory in megabytes to assign to individual node group node when using custom plan. Value needs to be divisible by 1024.
func (o KubernetesNodeGroupCustomPlanPtrOutput) Memory() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupCustomPlan) *int {
		if v == nil {
			return nil
		}
		return &v.Memory
	}).(pulumi.IntPtrOutput)
}

// The size of the storage device in gigabytes.
func (o KubernetesNodeGroupCustomPlanPtrOutput) StorageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupCustomPlan) *int {
		if v == nil {
			return nil
		}
		return &v.StorageSize
	}).(pulumi.IntPtrOutput)
}

// The storage tier to use. Defaults to maxiops
func (o KubernetesNodeGroupCustomPlanPtrOutput) StorageTier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodeGroupCustomPlan) *string {
		if v == nil {
			return nil
		}
		return v.StorageTier
	}).(pulumi.StringPtrOutput)
}

type KubernetesNodeGroupKubeletArg struct {
	// Kubelet argument key.
	Key string `pulumi:"key"`
	// Kubelet argument value.
	Value string `pulumi:"value"`
}

// KubernetesNodeGroupKubeletArgInput is an input type that accepts KubernetesNodeGroupKubeletArgArgs and KubernetesNodeGroupKubeletArgOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupKubeletArgInput` via:
//
//	KubernetesNodeGroupKubeletArgArgs{...}
type KubernetesNodeGroupKubeletArgInput interface {
	pulumi.Input

	ToKubernetesNodeGroupKubeletArgOutput() KubernetesNodeGroupKubeletArgOutput
	ToKubernetesNodeGroupKubeletArgOutputWithContext(context.Context) KubernetesNodeGroupKubeletArgOutput
}

type KubernetesNodeGroupKubeletArgArgs struct {
	// Kubelet argument key.
	Key pulumi.StringInput `pulumi:"key"`
	// Kubelet argument value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (KubernetesNodeGroupKubeletArgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupKubeletArg)(nil)).Elem()
}

func (i KubernetesNodeGroupKubeletArgArgs) ToKubernetesNodeGroupKubeletArgOutput() KubernetesNodeGroupKubeletArgOutput {
	return i.ToKubernetesNodeGroupKubeletArgOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupKubeletArgArgs) ToKubernetesNodeGroupKubeletArgOutputWithContext(ctx context.Context) KubernetesNodeGroupKubeletArgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupKubeletArgOutput)
}

// KubernetesNodeGroupKubeletArgArrayInput is an input type that accepts KubernetesNodeGroupKubeletArgArray and KubernetesNodeGroupKubeletArgArrayOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupKubeletArgArrayInput` via:
//
//	KubernetesNodeGroupKubeletArgArray{ KubernetesNodeGroupKubeletArgArgs{...} }
type KubernetesNodeGroupKubeletArgArrayInput interface {
	pulumi.Input

	ToKubernetesNodeGroupKubeletArgArrayOutput() KubernetesNodeGroupKubeletArgArrayOutput
	ToKubernetesNodeGroupKubeletArgArrayOutputWithContext(context.Context) KubernetesNodeGroupKubeletArgArrayOutput
}

type KubernetesNodeGroupKubeletArgArray []KubernetesNodeGroupKubeletArgInput

func (KubernetesNodeGroupKubeletArgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupKubeletArg)(nil)).Elem()
}

func (i KubernetesNodeGroupKubeletArgArray) ToKubernetesNodeGroupKubeletArgArrayOutput() KubernetesNodeGroupKubeletArgArrayOutput {
	return i.ToKubernetesNodeGroupKubeletArgArrayOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupKubeletArgArray) ToKubernetesNodeGroupKubeletArgArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupKubeletArgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupKubeletArgArrayOutput)
}

type KubernetesNodeGroupKubeletArgOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupKubeletArgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupKubeletArg)(nil)).Elem()
}

func (o KubernetesNodeGroupKubeletArgOutput) ToKubernetesNodeGroupKubeletArgOutput() KubernetesNodeGroupKubeletArgOutput {
	return o
}

func (o KubernetesNodeGroupKubeletArgOutput) ToKubernetesNodeGroupKubeletArgOutputWithContext(ctx context.Context) KubernetesNodeGroupKubeletArgOutput {
	return o
}

// Kubelet argument key.
func (o KubernetesNodeGroupKubeletArgOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupKubeletArg) string { return v.Key }).(pulumi.StringOutput)
}

// Kubelet argument value.
func (o KubernetesNodeGroupKubeletArgOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupKubeletArg) string { return v.Value }).(pulumi.StringOutput)
}

type KubernetesNodeGroupKubeletArgArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupKubeletArgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupKubeletArg)(nil)).Elem()
}

func (o KubernetesNodeGroupKubeletArgArrayOutput) ToKubernetesNodeGroupKubeletArgArrayOutput() KubernetesNodeGroupKubeletArgArrayOutput {
	return o
}

func (o KubernetesNodeGroupKubeletArgArrayOutput) ToKubernetesNodeGroupKubeletArgArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupKubeletArgArrayOutput {
	return o
}

func (o KubernetesNodeGroupKubeletArgArrayOutput) Index(i pulumi.IntInput) KubernetesNodeGroupKubeletArgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodeGroupKubeletArg {
		return vs[0].([]KubernetesNodeGroupKubeletArg)[vs[1].(int)]
	}).(KubernetesNodeGroupKubeletArgOutput)
}

type KubernetesNodeGroupTaint struct {
	// Taint effect.
	Effect string `pulumi:"effect"`
	// Taint key.
	Key string `pulumi:"key"`
	// Taint value.
	Value string `pulumi:"value"`
}

// KubernetesNodeGroupTaintInput is an input type that accepts KubernetesNodeGroupTaintArgs and KubernetesNodeGroupTaintOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupTaintInput` via:
//
//	KubernetesNodeGroupTaintArgs{...}
type KubernetesNodeGroupTaintInput interface {
	pulumi.Input

	ToKubernetesNodeGroupTaintOutput() KubernetesNodeGroupTaintOutput
	ToKubernetesNodeGroupTaintOutputWithContext(context.Context) KubernetesNodeGroupTaintOutput
}

type KubernetesNodeGroupTaintArgs struct {
	// Taint effect.
	Effect pulumi.StringInput `pulumi:"effect"`
	// Taint key.
	Key pulumi.StringInput `pulumi:"key"`
	// Taint value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (KubernetesNodeGroupTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupTaint)(nil)).Elem()
}

func (i KubernetesNodeGroupTaintArgs) ToKubernetesNodeGroupTaintOutput() KubernetesNodeGroupTaintOutput {
	return i.ToKubernetesNodeGroupTaintOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupTaintArgs) ToKubernetesNodeGroupTaintOutputWithContext(ctx context.Context) KubernetesNodeGroupTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupTaintOutput)
}

// KubernetesNodeGroupTaintArrayInput is an input type that accepts KubernetesNodeGroupTaintArray and KubernetesNodeGroupTaintArrayOutput values.
// You can construct a concrete instance of `KubernetesNodeGroupTaintArrayInput` via:
//
//	KubernetesNodeGroupTaintArray{ KubernetesNodeGroupTaintArgs{...} }
type KubernetesNodeGroupTaintArrayInput interface {
	pulumi.Input

	ToKubernetesNodeGroupTaintArrayOutput() KubernetesNodeGroupTaintArrayOutput
	ToKubernetesNodeGroupTaintArrayOutputWithContext(context.Context) KubernetesNodeGroupTaintArrayOutput
}

type KubernetesNodeGroupTaintArray []KubernetesNodeGroupTaintInput

func (KubernetesNodeGroupTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupTaint)(nil)).Elem()
}

func (i KubernetesNodeGroupTaintArray) ToKubernetesNodeGroupTaintArrayOutput() KubernetesNodeGroupTaintArrayOutput {
	return i.ToKubernetesNodeGroupTaintArrayOutputWithContext(context.Background())
}

func (i KubernetesNodeGroupTaintArray) ToKubernetesNodeGroupTaintArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupTaintArrayOutput)
}

type KubernetesNodeGroupTaintOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroupTaint)(nil)).Elem()
}

func (o KubernetesNodeGroupTaintOutput) ToKubernetesNodeGroupTaintOutput() KubernetesNodeGroupTaintOutput {
	return o
}

func (o KubernetesNodeGroupTaintOutput) ToKubernetesNodeGroupTaintOutputWithContext(ctx context.Context) KubernetesNodeGroupTaintOutput {
	return o
}

// Taint effect.
func (o KubernetesNodeGroupTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// Taint key.
func (o KubernetesNodeGroupTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Taint value.
func (o KubernetesNodeGroupTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodeGroupTaint) string { return v.Value }).(pulumi.StringOutput)
}

type KubernetesNodeGroupTaintArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodeGroupTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodeGroupTaint)(nil)).Elem()
}

func (o KubernetesNodeGroupTaintArrayOutput) ToKubernetesNodeGroupTaintArrayOutput() KubernetesNodeGroupTaintArrayOutput {
	return o
}

func (o KubernetesNodeGroupTaintArrayOutput) ToKubernetesNodeGroupTaintArrayOutputWithContext(ctx context.Context) KubernetesNodeGroupTaintArrayOutput {
	return o
}

func (o KubernetesNodeGroupTaintArrayOutput) Index(i pulumi.IntInput) KubernetesNodeGroupTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodeGroupTaint {
		return vs[0].([]KubernetesNodeGroupTaint)[vs[1].(int)]
	}).(KubernetesNodeGroupTaintOutput)
}

type LoadbalancerBackendProperties struct {
	// Expected HTTP status code returned by the customer application to mark server as healthy. Ignored for tcp type.
	HealthCheckExpectedStatus *int `pulumi:"healthCheckExpectedStatus"`
	// Sets how many failed health checks are allowed until the backend member is taken off from the rotation.
	HealthCheckFall *int `pulumi:"healthCheckFall"`
	// Interval between health checks.
	HealthCheckInterval *int `pulumi:"healthCheckInterval"`
	// Sets how many passing checks there must be before returning the backend member to the rotation.
	HealthCheckRise *int `pulumi:"healthCheckRise"`
	// Enables certificate verification with the system CA certificate bundle. Works with https scheme in health_check_url, otherwise ignored.
	HealthCheckTlsVerify *bool `pulumi:"healthCheckTlsVerify"`
	// Health check type.
	HealthCheckType *string `pulumi:"healthCheckType"`
	// Target path for health check HTTP GET requests. Ignored for tcp type.
	HealthCheckUrl *string `pulumi:"healthCheckUrl"`
	// Allow HTTP/2 connections to backend members by utilizing ALPN extension of TLS protocol, therefore it can only be enabled when tlsEnabled is set to true. Note: members should support HTTP/2 for this setting to work.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// Enable outbound proxy protocol by setting the desired version. Empty string disables proxy protocol.
	OutboundProxyProtocol *string `pulumi:"outboundProxyProtocol"`
	// Sets sticky session cookie name. Empty string disables sticky session.
	StickySessionCookieName *string `pulumi:"stickySessionCookieName"`
	// Backend server timeout in seconds.
	TimeoutServer *int `pulumi:"timeoutServer"`
	// Maximum inactivity time on the client and server side for tunnels in seconds.
	TimeoutTunnel *int `pulumi:"timeoutTunnel"`
	// Set of TLS config names
	TlsConfigs []string `pulumi:"tlsConfigs"`
	// Enables TLS connection from the load balancer to backend servers.
	TlsEnabled *bool `pulumi:"tlsEnabled"`
	// If enabled, then the system CA certificate bundle will be used for the certificate verification.
	TlsUseSystemCa *bool `pulumi:"tlsUseSystemCa"`
	// Enables backend servers certificate verification. Please make sure that TLS config with the certificate bundle of type authority attached to the backend or `tlsUseSystemCa` enabled. Note: `tlsVerify` has preference over `healthCheckTlsVerify` when `tlsEnabled` in true.
	TlsVerify *bool `pulumi:"tlsVerify"`
}

// LoadbalancerBackendPropertiesInput is an input type that accepts LoadbalancerBackendPropertiesArgs and LoadbalancerBackendPropertiesOutput values.
// You can construct a concrete instance of `LoadbalancerBackendPropertiesInput` via:
//
//	LoadbalancerBackendPropertiesArgs{...}
type LoadbalancerBackendPropertiesInput interface {
	pulumi.Input

	ToLoadbalancerBackendPropertiesOutput() LoadbalancerBackendPropertiesOutput
	ToLoadbalancerBackendPropertiesOutputWithContext(context.Context) LoadbalancerBackendPropertiesOutput
}

type LoadbalancerBackendPropertiesArgs struct {
	// Expected HTTP status code returned by the customer application to mark server as healthy. Ignored for tcp type.
	HealthCheckExpectedStatus pulumi.IntPtrInput `pulumi:"healthCheckExpectedStatus"`
	// Sets how many failed health checks are allowed until the backend member is taken off from the rotation.
	HealthCheckFall pulumi.IntPtrInput `pulumi:"healthCheckFall"`
	// Interval between health checks.
	HealthCheckInterval pulumi.IntPtrInput `pulumi:"healthCheckInterval"`
	// Sets how many passing checks there must be before returning the backend member to the rotation.
	HealthCheckRise pulumi.IntPtrInput `pulumi:"healthCheckRise"`
	// Enables certificate verification with the system CA certificate bundle. Works with https scheme in health_check_url, otherwise ignored.
	HealthCheckTlsVerify pulumi.BoolPtrInput `pulumi:"healthCheckTlsVerify"`
	// Health check type.
	HealthCheckType pulumi.StringPtrInput `pulumi:"healthCheckType"`
	// Target path for health check HTTP GET requests. Ignored for tcp type.
	HealthCheckUrl pulumi.StringPtrInput `pulumi:"healthCheckUrl"`
	// Allow HTTP/2 connections to backend members by utilizing ALPN extension of TLS protocol, therefore it can only be enabled when tlsEnabled is set to true. Note: members should support HTTP/2 for this setting to work.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// Enable outbound proxy protocol by setting the desired version. Empty string disables proxy protocol.
	OutboundProxyProtocol pulumi.StringPtrInput `pulumi:"outboundProxyProtocol"`
	// Sets sticky session cookie name. Empty string disables sticky session.
	StickySessionCookieName pulumi.StringPtrInput `pulumi:"stickySessionCookieName"`
	// Backend server timeout in seconds.
	TimeoutServer pulumi.IntPtrInput `pulumi:"timeoutServer"`
	// Maximum inactivity time on the client and server side for tunnels in seconds.
	TimeoutTunnel pulumi.IntPtrInput `pulumi:"timeoutTunnel"`
	// Set of TLS config names
	TlsConfigs pulumi.StringArrayInput `pulumi:"tlsConfigs"`
	// Enables TLS connection from the load balancer to backend servers.
	TlsEnabled pulumi.BoolPtrInput `pulumi:"tlsEnabled"`
	// If enabled, then the system CA certificate bundle will be used for the certificate verification.
	TlsUseSystemCa pulumi.BoolPtrInput `pulumi:"tlsUseSystemCa"`
	// Enables backend servers certificate verification. Please make sure that TLS config with the certificate bundle of type authority attached to the backend or `tlsUseSystemCa` enabled. Note: `tlsVerify` has preference over `healthCheckTlsVerify` when `tlsEnabled` in true.
	TlsVerify pulumi.BoolPtrInput `pulumi:"tlsVerify"`
}

func (LoadbalancerBackendPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendProperties)(nil)).Elem()
}

func (i LoadbalancerBackendPropertiesArgs) ToLoadbalancerBackendPropertiesOutput() LoadbalancerBackendPropertiesOutput {
	return i.ToLoadbalancerBackendPropertiesOutputWithContext(context.Background())
}

func (i LoadbalancerBackendPropertiesArgs) ToLoadbalancerBackendPropertiesOutputWithContext(ctx context.Context) LoadbalancerBackendPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendPropertiesOutput)
}

func (i LoadbalancerBackendPropertiesArgs) ToLoadbalancerBackendPropertiesPtrOutput() LoadbalancerBackendPropertiesPtrOutput {
	return i.ToLoadbalancerBackendPropertiesPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendPropertiesArgs) ToLoadbalancerBackendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerBackendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendPropertiesOutput).ToLoadbalancerBackendPropertiesPtrOutputWithContext(ctx)
}

// LoadbalancerBackendPropertiesPtrInput is an input type that accepts LoadbalancerBackendPropertiesArgs, LoadbalancerBackendPropertiesPtr and LoadbalancerBackendPropertiesPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendPropertiesPtrInput` via:
//
//	        LoadbalancerBackendPropertiesArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerBackendPropertiesPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendPropertiesPtrOutput() LoadbalancerBackendPropertiesPtrOutput
	ToLoadbalancerBackendPropertiesPtrOutputWithContext(context.Context) LoadbalancerBackendPropertiesPtrOutput
}

type loadbalancerBackendPropertiesPtrType LoadbalancerBackendPropertiesArgs

func LoadbalancerBackendPropertiesPtr(v *LoadbalancerBackendPropertiesArgs) LoadbalancerBackendPropertiesPtrInput {
	return (*loadbalancerBackendPropertiesPtrType)(v)
}

func (*loadbalancerBackendPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendProperties)(nil)).Elem()
}

func (i *loadbalancerBackendPropertiesPtrType) ToLoadbalancerBackendPropertiesPtrOutput() LoadbalancerBackendPropertiesPtrOutput {
	return i.ToLoadbalancerBackendPropertiesPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendPropertiesPtrType) ToLoadbalancerBackendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerBackendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendPropertiesPtrOutput)
}

type LoadbalancerBackendPropertiesOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendProperties)(nil)).Elem()
}

func (o LoadbalancerBackendPropertiesOutput) ToLoadbalancerBackendPropertiesOutput() LoadbalancerBackendPropertiesOutput {
	return o
}

func (o LoadbalancerBackendPropertiesOutput) ToLoadbalancerBackendPropertiesOutputWithContext(ctx context.Context) LoadbalancerBackendPropertiesOutput {
	return o
}

func (o LoadbalancerBackendPropertiesOutput) ToLoadbalancerBackendPropertiesPtrOutput() LoadbalancerBackendPropertiesPtrOutput {
	return o.ToLoadbalancerBackendPropertiesPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendPropertiesOutput) ToLoadbalancerBackendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerBackendPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendProperties) *LoadbalancerBackendProperties {
		return &v
	}).(LoadbalancerBackendPropertiesPtrOutput)
}

// Expected HTTP status code returned by the customer application to mark server as healthy. Ignored for tcp type.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckExpectedStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *int { return v.HealthCheckExpectedStatus }).(pulumi.IntPtrOutput)
}

// Sets how many failed health checks are allowed until the backend member is taken off from the rotation.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckFall() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *int { return v.HealthCheckFall }).(pulumi.IntPtrOutput)
}

// Interval between health checks.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *int { return v.HealthCheckInterval }).(pulumi.IntPtrOutput)
}

// Sets how many passing checks there must be before returning the backend member to the rotation.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckRise() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *int { return v.HealthCheckRise }).(pulumi.IntPtrOutput)
}

// Enables certificate verification with the system CA certificate bundle. Works with https scheme in health_check_url, otherwise ignored.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckTlsVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *bool { return v.HealthCheckTlsVerify }).(pulumi.BoolPtrOutput)
}

// Health check type.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *string { return v.HealthCheckType }).(pulumi.StringPtrOutput)
}

// Target path for health check HTTP GET requests. Ignored for tcp type.
func (o LoadbalancerBackendPropertiesOutput) HealthCheckUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *string { return v.HealthCheckUrl }).(pulumi.StringPtrOutput)
}

// Allow HTTP/2 connections to backend members by utilizing ALPN extension of TLS protocol, therefore it can only be enabled when tlsEnabled is set to true. Note: members should support HTTP/2 for this setting to work.
func (o LoadbalancerBackendPropertiesOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// Enable outbound proxy protocol by setting the desired version. Empty string disables proxy protocol.
func (o LoadbalancerBackendPropertiesOutput) OutboundProxyProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *string { return v.OutboundProxyProtocol }).(pulumi.StringPtrOutput)
}

// Sets sticky session cookie name. Empty string disables sticky session.
func (o LoadbalancerBackendPropertiesOutput) StickySessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *string { return v.StickySessionCookieName }).(pulumi.StringPtrOutput)
}

// Backend server timeout in seconds.
func (o LoadbalancerBackendPropertiesOutput) TimeoutServer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *int { return v.TimeoutServer }).(pulumi.IntPtrOutput)
}

// Maximum inactivity time on the client and server side for tunnels in seconds.
func (o LoadbalancerBackendPropertiesOutput) TimeoutTunnel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *int { return v.TimeoutTunnel }).(pulumi.IntPtrOutput)
}

// Set of TLS config names
func (o LoadbalancerBackendPropertiesOutput) TlsConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) []string { return v.TlsConfigs }).(pulumi.StringArrayOutput)
}

// Enables TLS connection from the load balancer to backend servers.
func (o LoadbalancerBackendPropertiesOutput) TlsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *bool { return v.TlsEnabled }).(pulumi.BoolPtrOutput)
}

// If enabled, then the system CA certificate bundle will be used for the certificate verification.
func (o LoadbalancerBackendPropertiesOutput) TlsUseSystemCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *bool { return v.TlsUseSystemCa }).(pulumi.BoolPtrOutput)
}

// Enables backend servers certificate verification. Please make sure that TLS config with the certificate bundle of type authority attached to the backend or `tlsUseSystemCa` enabled. Note: `tlsVerify` has preference over `healthCheckTlsVerify` when `tlsEnabled` in true.
func (o LoadbalancerBackendPropertiesOutput) TlsVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendProperties) *bool { return v.TlsVerify }).(pulumi.BoolPtrOutput)
}

type LoadbalancerBackendPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendProperties)(nil)).Elem()
}

func (o LoadbalancerBackendPropertiesPtrOutput) ToLoadbalancerBackendPropertiesPtrOutput() LoadbalancerBackendPropertiesPtrOutput {
	return o
}

func (o LoadbalancerBackendPropertiesPtrOutput) ToLoadbalancerBackendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerBackendPropertiesPtrOutput {
	return o
}

func (o LoadbalancerBackendPropertiesPtrOutput) Elem() LoadbalancerBackendPropertiesOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) LoadbalancerBackendProperties {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendProperties
		return ret
	}).(LoadbalancerBackendPropertiesOutput)
}

// Expected HTTP status code returned by the customer application to mark server as healthy. Ignored for tcp type.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckExpectedStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckExpectedStatus
	}).(pulumi.IntPtrOutput)
}

// Sets how many failed health checks are allowed until the backend member is taken off from the rotation.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckFall() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckFall
	}).(pulumi.IntPtrOutput)
}

// Interval between health checks.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckInterval
	}).(pulumi.IntPtrOutput)
}

// Sets how many passing checks there must be before returning the backend member to the rotation.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckRise() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckRise
	}).(pulumi.IntPtrOutput)
}

// Enables certificate verification with the system CA certificate bundle. Works with https scheme in health_check_url, otherwise ignored.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckTlsVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.HealthCheckTlsVerify
	}).(pulumi.BoolPtrOutput)
}

// Health check type.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckType
	}).(pulumi.StringPtrOutput)
}

// Target path for health check HTTP GET requests. Ignored for tcp type.
func (o LoadbalancerBackendPropertiesPtrOutput) HealthCheckUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckUrl
	}).(pulumi.StringPtrOutput)
}

// Allow HTTP/2 connections to backend members by utilizing ALPN extension of TLS protocol, therefore it can only be enabled when tlsEnabled is set to true. Note: members should support HTTP/2 for this setting to work.
func (o LoadbalancerBackendPropertiesPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enable outbound proxy protocol by setting the desired version. Empty string disables proxy protocol.
func (o LoadbalancerBackendPropertiesPtrOutput) OutboundProxyProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *string {
		if v == nil {
			return nil
		}
		return v.OutboundProxyProtocol
	}).(pulumi.StringPtrOutput)
}

// Sets sticky session cookie name. Empty string disables sticky session.
func (o LoadbalancerBackendPropertiesPtrOutput) StickySessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *string {
		if v == nil {
			return nil
		}
		return v.StickySessionCookieName
	}).(pulumi.StringPtrOutput)
}

// Backend server timeout in seconds.
func (o LoadbalancerBackendPropertiesPtrOutput) TimeoutServer() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutServer
	}).(pulumi.IntPtrOutput)
}

// Maximum inactivity time on the client and server side for tunnels in seconds.
func (o LoadbalancerBackendPropertiesPtrOutput) TimeoutTunnel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutTunnel
	}).(pulumi.IntPtrOutput)
}

// Set of TLS config names
func (o LoadbalancerBackendPropertiesPtrOutput) TlsConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) []string {
		if v == nil {
			return nil
		}
		return v.TlsConfigs
	}).(pulumi.StringArrayOutput)
}

// Enables TLS connection from the load balancer to backend servers.
func (o LoadbalancerBackendPropertiesPtrOutput) TlsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.TlsEnabled
	}).(pulumi.BoolPtrOutput)
}

// If enabled, then the system CA certificate bundle will be used for the certificate verification.
func (o LoadbalancerBackendPropertiesPtrOutput) TlsUseSystemCa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.TlsUseSystemCa
	}).(pulumi.BoolPtrOutput)
}

// Enables backend servers certificate verification. Please make sure that TLS config with the certificate bundle of type authority attached to the backend or `tlsUseSystemCa` enabled. Note: `tlsVerify` has preference over `healthCheckTlsVerify` when `tlsEnabled` in true.
func (o LoadbalancerBackendPropertiesPtrOutput) TlsVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.TlsVerify
	}).(pulumi.BoolPtrOutput)
}

type LoadbalancerFrontendNetwork struct {
	// Name of the load balancer network.
	Name string `pulumi:"name"`
}

// LoadbalancerFrontendNetworkInput is an input type that accepts LoadbalancerFrontendNetworkArgs and LoadbalancerFrontendNetworkOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendNetworkInput` via:
//
//	LoadbalancerFrontendNetworkArgs{...}
type LoadbalancerFrontendNetworkInput interface {
	pulumi.Input

	ToLoadbalancerFrontendNetworkOutput() LoadbalancerFrontendNetworkOutput
	ToLoadbalancerFrontendNetworkOutputWithContext(context.Context) LoadbalancerFrontendNetworkOutput
}

type LoadbalancerFrontendNetworkArgs struct {
	// Name of the load balancer network.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LoadbalancerFrontendNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendNetwork)(nil)).Elem()
}

func (i LoadbalancerFrontendNetworkArgs) ToLoadbalancerFrontendNetworkOutput() LoadbalancerFrontendNetworkOutput {
	return i.ToLoadbalancerFrontendNetworkOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendNetworkArgs) ToLoadbalancerFrontendNetworkOutputWithContext(ctx context.Context) LoadbalancerFrontendNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendNetworkOutput)
}

// LoadbalancerFrontendNetworkArrayInput is an input type that accepts LoadbalancerFrontendNetworkArray and LoadbalancerFrontendNetworkArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendNetworkArrayInput` via:
//
//	LoadbalancerFrontendNetworkArray{ LoadbalancerFrontendNetworkArgs{...} }
type LoadbalancerFrontendNetworkArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendNetworkArrayOutput() LoadbalancerFrontendNetworkArrayOutput
	ToLoadbalancerFrontendNetworkArrayOutputWithContext(context.Context) LoadbalancerFrontendNetworkArrayOutput
}

type LoadbalancerFrontendNetworkArray []LoadbalancerFrontendNetworkInput

func (LoadbalancerFrontendNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendNetwork)(nil)).Elem()
}

func (i LoadbalancerFrontendNetworkArray) ToLoadbalancerFrontendNetworkArrayOutput() LoadbalancerFrontendNetworkArrayOutput {
	return i.ToLoadbalancerFrontendNetworkArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendNetworkArray) ToLoadbalancerFrontendNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendNetworkArrayOutput)
}

type LoadbalancerFrontendNetworkOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendNetwork)(nil)).Elem()
}

func (o LoadbalancerFrontendNetworkOutput) ToLoadbalancerFrontendNetworkOutput() LoadbalancerFrontendNetworkOutput {
	return o
}

func (o LoadbalancerFrontendNetworkOutput) ToLoadbalancerFrontendNetworkOutputWithContext(ctx context.Context) LoadbalancerFrontendNetworkOutput {
	return o
}

// Name of the load balancer network.
func (o LoadbalancerFrontendNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type LoadbalancerFrontendNetworkArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendNetwork)(nil)).Elem()
}

func (o LoadbalancerFrontendNetworkArrayOutput) ToLoadbalancerFrontendNetworkArrayOutput() LoadbalancerFrontendNetworkArrayOutput {
	return o
}

func (o LoadbalancerFrontendNetworkArrayOutput) ToLoadbalancerFrontendNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendNetworkArrayOutput {
	return o
}

func (o LoadbalancerFrontendNetworkArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendNetwork {
		return vs[0].([]LoadbalancerFrontendNetwork)[vs[1].(int)]
	}).(LoadbalancerFrontendNetworkOutput)
}

type LoadbalancerFrontendProperties struct {
	// Enable or disable HTTP/2 support.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// Enable or disable inbound proxy protocol support.
	InboundProxyProtocol *bool `pulumi:"inboundProxyProtocol"`
	// Client request timeout in seconds.
	TimeoutClient *int `pulumi:"timeoutClient"`
}

// LoadbalancerFrontendPropertiesInput is an input type that accepts LoadbalancerFrontendPropertiesArgs and LoadbalancerFrontendPropertiesOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendPropertiesInput` via:
//
//	LoadbalancerFrontendPropertiesArgs{...}
type LoadbalancerFrontendPropertiesInput interface {
	pulumi.Input

	ToLoadbalancerFrontendPropertiesOutput() LoadbalancerFrontendPropertiesOutput
	ToLoadbalancerFrontendPropertiesOutputWithContext(context.Context) LoadbalancerFrontendPropertiesOutput
}

type LoadbalancerFrontendPropertiesArgs struct {
	// Enable or disable HTTP/2 support.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// Enable or disable inbound proxy protocol support.
	InboundProxyProtocol pulumi.BoolPtrInput `pulumi:"inboundProxyProtocol"`
	// Client request timeout in seconds.
	TimeoutClient pulumi.IntPtrInput `pulumi:"timeoutClient"`
}

func (LoadbalancerFrontendPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendProperties)(nil)).Elem()
}

func (i LoadbalancerFrontendPropertiesArgs) ToLoadbalancerFrontendPropertiesOutput() LoadbalancerFrontendPropertiesOutput {
	return i.ToLoadbalancerFrontendPropertiesOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendPropertiesArgs) ToLoadbalancerFrontendPropertiesOutputWithContext(ctx context.Context) LoadbalancerFrontendPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendPropertiesOutput)
}

func (i LoadbalancerFrontendPropertiesArgs) ToLoadbalancerFrontendPropertiesPtrOutput() LoadbalancerFrontendPropertiesPtrOutput {
	return i.ToLoadbalancerFrontendPropertiesPtrOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendPropertiesArgs) ToLoadbalancerFrontendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendPropertiesOutput).ToLoadbalancerFrontendPropertiesPtrOutputWithContext(ctx)
}

// LoadbalancerFrontendPropertiesPtrInput is an input type that accepts LoadbalancerFrontendPropertiesArgs, LoadbalancerFrontendPropertiesPtr and LoadbalancerFrontendPropertiesPtrOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendPropertiesPtrInput` via:
//
//	        LoadbalancerFrontendPropertiesArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerFrontendPropertiesPtrInput interface {
	pulumi.Input

	ToLoadbalancerFrontendPropertiesPtrOutput() LoadbalancerFrontendPropertiesPtrOutput
	ToLoadbalancerFrontendPropertiesPtrOutputWithContext(context.Context) LoadbalancerFrontendPropertiesPtrOutput
}

type loadbalancerFrontendPropertiesPtrType LoadbalancerFrontendPropertiesArgs

func LoadbalancerFrontendPropertiesPtr(v *LoadbalancerFrontendPropertiesArgs) LoadbalancerFrontendPropertiesPtrInput {
	return (*loadbalancerFrontendPropertiesPtrType)(v)
}

func (*loadbalancerFrontendPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerFrontendProperties)(nil)).Elem()
}

func (i *loadbalancerFrontendPropertiesPtrType) ToLoadbalancerFrontendPropertiesPtrOutput() LoadbalancerFrontendPropertiesPtrOutput {
	return i.ToLoadbalancerFrontendPropertiesPtrOutputWithContext(context.Background())
}

func (i *loadbalancerFrontendPropertiesPtrType) ToLoadbalancerFrontendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendPropertiesPtrOutput)
}

type LoadbalancerFrontendPropertiesOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendProperties)(nil)).Elem()
}

func (o LoadbalancerFrontendPropertiesOutput) ToLoadbalancerFrontendPropertiesOutput() LoadbalancerFrontendPropertiesOutput {
	return o
}

func (o LoadbalancerFrontendPropertiesOutput) ToLoadbalancerFrontendPropertiesOutputWithContext(ctx context.Context) LoadbalancerFrontendPropertiesOutput {
	return o
}

func (o LoadbalancerFrontendPropertiesOutput) ToLoadbalancerFrontendPropertiesPtrOutput() LoadbalancerFrontendPropertiesPtrOutput {
	return o.ToLoadbalancerFrontendPropertiesPtrOutputWithContext(context.Background())
}

func (o LoadbalancerFrontendPropertiesOutput) ToLoadbalancerFrontendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerFrontendProperties) *LoadbalancerFrontendProperties {
		return &v
	}).(LoadbalancerFrontendPropertiesPtrOutput)
}

// Enable or disable HTTP/2 support.
func (o LoadbalancerFrontendPropertiesOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendProperties) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// Enable or disable inbound proxy protocol support.
func (o LoadbalancerFrontendPropertiesOutput) InboundProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendProperties) *bool { return v.InboundProxyProtocol }).(pulumi.BoolPtrOutput)
}

// Client request timeout in seconds.
func (o LoadbalancerFrontendPropertiesOutput) TimeoutClient() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendProperties) *int { return v.TimeoutClient }).(pulumi.IntPtrOutput)
}

type LoadbalancerFrontendPropertiesPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerFrontendProperties)(nil)).Elem()
}

func (o LoadbalancerFrontendPropertiesPtrOutput) ToLoadbalancerFrontendPropertiesPtrOutput() LoadbalancerFrontendPropertiesPtrOutput {
	return o
}

func (o LoadbalancerFrontendPropertiesPtrOutput) ToLoadbalancerFrontendPropertiesPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendPropertiesPtrOutput {
	return o
}

func (o LoadbalancerFrontendPropertiesPtrOutput) Elem() LoadbalancerFrontendPropertiesOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendProperties) LoadbalancerFrontendProperties {
		if v != nil {
			return *v
		}
		var ret LoadbalancerFrontendProperties
		return ret
	}).(LoadbalancerFrontendPropertiesOutput)
}

// Enable or disable HTTP/2 support.
func (o LoadbalancerFrontendPropertiesPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable inbound proxy protocol support.
func (o LoadbalancerFrontendPropertiesPtrOutput) InboundProxyProtocol() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendProperties) *bool {
		if v == nil {
			return nil
		}
		return v.InboundProxyProtocol
	}).(pulumi.BoolPtrOutput)
}

// Client request timeout in seconds.
func (o LoadbalancerFrontendPropertiesPtrOutput) TimeoutClient() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendProperties) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutClient
	}).(pulumi.IntPtrOutput)
}

type LoadbalancerFrontendRuleActions struct {
	// Redirects HTTP requests to specified location or URL scheme. Only either location or scheme can be defined at a time.
	HttpRedirects []LoadbalancerFrontendRuleActionsHttpRedirect `pulumi:"httpRedirects"`
	// Returns HTTP response with specified HTTP status.
	HttpReturns []LoadbalancerFrontendRuleActionsHttpReturn `pulumi:"httpReturns"`
	// Adds 'X-Forwarded-For / -Proto / -Port' headers in your forwarded requests
	SetForwardedHeaders []LoadbalancerFrontendRuleActionsSetForwardedHeader `pulumi:"setForwardedHeaders"`
	// Terminates a connection.
	TcpRejects []LoadbalancerFrontendRuleActionsTcpReject `pulumi:"tcpRejects"`
	// Routes traffic to specified `backend`.
	UseBackends []LoadbalancerFrontendRuleActionsUseBackend `pulumi:"useBackends"`
}

// LoadbalancerFrontendRuleActionsInput is an input type that accepts LoadbalancerFrontendRuleActionsArgs and LoadbalancerFrontendRuleActionsOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsInput` via:
//
//	LoadbalancerFrontendRuleActionsArgs{...}
type LoadbalancerFrontendRuleActionsInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsOutput() LoadbalancerFrontendRuleActionsOutput
	ToLoadbalancerFrontendRuleActionsOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsOutput
}

type LoadbalancerFrontendRuleActionsArgs struct {
	// Redirects HTTP requests to specified location or URL scheme. Only either location or scheme can be defined at a time.
	HttpRedirects LoadbalancerFrontendRuleActionsHttpRedirectArrayInput `pulumi:"httpRedirects"`
	// Returns HTTP response with specified HTTP status.
	HttpReturns LoadbalancerFrontendRuleActionsHttpReturnArrayInput `pulumi:"httpReturns"`
	// Adds 'X-Forwarded-For / -Proto / -Port' headers in your forwarded requests
	SetForwardedHeaders LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayInput `pulumi:"setForwardedHeaders"`
	// Terminates a connection.
	TcpRejects LoadbalancerFrontendRuleActionsTcpRejectArrayInput `pulumi:"tcpRejects"`
	// Routes traffic to specified `backend`.
	UseBackends LoadbalancerFrontendRuleActionsUseBackendArrayInput `pulumi:"useBackends"`
}

func (LoadbalancerFrontendRuleActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActions)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsArgs) ToLoadbalancerFrontendRuleActionsOutput() LoadbalancerFrontendRuleActionsOutput {
	return i.ToLoadbalancerFrontendRuleActionsOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsArgs) ToLoadbalancerFrontendRuleActionsOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsOutput)
}

func (i LoadbalancerFrontendRuleActionsArgs) ToLoadbalancerFrontendRuleActionsPtrOutput() LoadbalancerFrontendRuleActionsPtrOutput {
	return i.ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsArgs) ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsOutput).ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(ctx)
}

// LoadbalancerFrontendRuleActionsPtrInput is an input type that accepts LoadbalancerFrontendRuleActionsArgs, LoadbalancerFrontendRuleActionsPtr and LoadbalancerFrontendRuleActionsPtrOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsPtrInput` via:
//
//	        LoadbalancerFrontendRuleActionsArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerFrontendRuleActionsPtrInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsPtrOutput() LoadbalancerFrontendRuleActionsPtrOutput
	ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsPtrOutput
}

type loadbalancerFrontendRuleActionsPtrType LoadbalancerFrontendRuleActionsArgs

func LoadbalancerFrontendRuleActionsPtr(v *LoadbalancerFrontendRuleActionsArgs) LoadbalancerFrontendRuleActionsPtrInput {
	return (*loadbalancerFrontendRuleActionsPtrType)(v)
}

func (*loadbalancerFrontendRuleActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerFrontendRuleActions)(nil)).Elem()
}

func (i *loadbalancerFrontendRuleActionsPtrType) ToLoadbalancerFrontendRuleActionsPtrOutput() LoadbalancerFrontendRuleActionsPtrOutput {
	return i.ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(context.Background())
}

func (i *loadbalancerFrontendRuleActionsPtrType) ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsPtrOutput)
}

type LoadbalancerFrontendRuleActionsOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActions)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsOutput) ToLoadbalancerFrontendRuleActionsOutput() LoadbalancerFrontendRuleActionsOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsOutput) ToLoadbalancerFrontendRuleActionsOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsOutput) ToLoadbalancerFrontendRuleActionsPtrOutput() LoadbalancerFrontendRuleActionsPtrOutput {
	return o.ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(context.Background())
}

func (o LoadbalancerFrontendRuleActionsOutput) ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerFrontendRuleActions) *LoadbalancerFrontendRuleActions {
		return &v
	}).(LoadbalancerFrontendRuleActionsPtrOutput)
}

// Redirects HTTP requests to specified location or URL scheme. Only either location or scheme can be defined at a time.
func (o LoadbalancerFrontendRuleActionsOutput) HttpRedirects() LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsHttpRedirect {
		return v.HttpRedirects
	}).(LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput)
}

// Returns HTTP response with specified HTTP status.
func (o LoadbalancerFrontendRuleActionsOutput) HttpReturns() LoadbalancerFrontendRuleActionsHttpReturnArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsHttpReturn {
		return v.HttpReturns
	}).(LoadbalancerFrontendRuleActionsHttpReturnArrayOutput)
}

// Adds 'X-Forwarded-For / -Proto / -Port' headers in your forwarded requests
func (o LoadbalancerFrontendRuleActionsOutput) SetForwardedHeaders() LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsSetForwardedHeader {
		return v.SetForwardedHeaders
	}).(LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput)
}

// Terminates a connection.
func (o LoadbalancerFrontendRuleActionsOutput) TcpRejects() LoadbalancerFrontendRuleActionsTcpRejectArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsTcpReject {
		return v.TcpRejects
	}).(LoadbalancerFrontendRuleActionsTcpRejectArrayOutput)
}

// Routes traffic to specified `backend`.
func (o LoadbalancerFrontendRuleActionsOutput) UseBackends() LoadbalancerFrontendRuleActionsUseBackendArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsUseBackend {
		return v.UseBackends
	}).(LoadbalancerFrontendRuleActionsUseBackendArrayOutput)
}

type LoadbalancerFrontendRuleActionsPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerFrontendRuleActions)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsPtrOutput) ToLoadbalancerFrontendRuleActionsPtrOutput() LoadbalancerFrontendRuleActionsPtrOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsPtrOutput) ToLoadbalancerFrontendRuleActionsPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsPtrOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsPtrOutput) Elem() LoadbalancerFrontendRuleActionsOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleActions) LoadbalancerFrontendRuleActions {
		if v != nil {
			return *v
		}
		var ret LoadbalancerFrontendRuleActions
		return ret
	}).(LoadbalancerFrontendRuleActionsOutput)
}

// Redirects HTTP requests to specified location or URL scheme. Only either location or scheme can be defined at a time.
func (o LoadbalancerFrontendRuleActionsPtrOutput) HttpRedirects() LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsHttpRedirect {
		if v == nil {
			return nil
		}
		return v.HttpRedirects
	}).(LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput)
}

// Returns HTTP response with specified HTTP status.
func (o LoadbalancerFrontendRuleActionsPtrOutput) HttpReturns() LoadbalancerFrontendRuleActionsHttpReturnArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsHttpReturn {
		if v == nil {
			return nil
		}
		return v.HttpReturns
	}).(LoadbalancerFrontendRuleActionsHttpReturnArrayOutput)
}

// Adds 'X-Forwarded-For / -Proto / -Port' headers in your forwarded requests
func (o LoadbalancerFrontendRuleActionsPtrOutput) SetForwardedHeaders() LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsSetForwardedHeader {
		if v == nil {
			return nil
		}
		return v.SetForwardedHeaders
	}).(LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput)
}

// Terminates a connection.
func (o LoadbalancerFrontendRuleActionsPtrOutput) TcpRejects() LoadbalancerFrontendRuleActionsTcpRejectArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsTcpReject {
		if v == nil {
			return nil
		}
		return v.TcpRejects
	}).(LoadbalancerFrontendRuleActionsTcpRejectArrayOutput)
}

// Routes traffic to specified `backend`.
func (o LoadbalancerFrontendRuleActionsPtrOutput) UseBackends() LoadbalancerFrontendRuleActionsUseBackendArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleActions) []LoadbalancerFrontendRuleActionsUseBackend {
		if v == nil {
			return nil
		}
		return v.UseBackends
	}).(LoadbalancerFrontendRuleActionsUseBackendArrayOutput)
}

type LoadbalancerFrontendRuleActionsHttpRedirect struct {
	// Target location.
	Location *string `pulumi:"location"`
	// Target scheme.
	Scheme *string `pulumi:"scheme"`
}

// LoadbalancerFrontendRuleActionsHttpRedirectInput is an input type that accepts LoadbalancerFrontendRuleActionsHttpRedirectArgs and LoadbalancerFrontendRuleActionsHttpRedirectOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsHttpRedirectInput` via:
//
//	LoadbalancerFrontendRuleActionsHttpRedirectArgs{...}
type LoadbalancerFrontendRuleActionsHttpRedirectInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsHttpRedirectOutput() LoadbalancerFrontendRuleActionsHttpRedirectOutput
	ToLoadbalancerFrontendRuleActionsHttpRedirectOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsHttpRedirectOutput
}

type LoadbalancerFrontendRuleActionsHttpRedirectArgs struct {
	// Target location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Target scheme.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (LoadbalancerFrontendRuleActionsHttpRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpRedirect)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsHttpRedirectArgs) ToLoadbalancerFrontendRuleActionsHttpRedirectOutput() LoadbalancerFrontendRuleActionsHttpRedirectOutput {
	return i.ToLoadbalancerFrontendRuleActionsHttpRedirectOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsHttpRedirectArgs) ToLoadbalancerFrontendRuleActionsHttpRedirectOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsHttpRedirectOutput)
}

// LoadbalancerFrontendRuleActionsHttpRedirectArrayInput is an input type that accepts LoadbalancerFrontendRuleActionsHttpRedirectArray and LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsHttpRedirectArrayInput` via:
//
//	LoadbalancerFrontendRuleActionsHttpRedirectArray{ LoadbalancerFrontendRuleActionsHttpRedirectArgs{...} }
type LoadbalancerFrontendRuleActionsHttpRedirectArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutput() LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput
	ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput
}

type LoadbalancerFrontendRuleActionsHttpRedirectArray []LoadbalancerFrontendRuleActionsHttpRedirectInput

func (LoadbalancerFrontendRuleActionsHttpRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsHttpRedirect)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsHttpRedirectArray) ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutput() LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput {
	return i.ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsHttpRedirectArray) ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput)
}

type LoadbalancerFrontendRuleActionsHttpRedirectOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsHttpRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpRedirect)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsHttpRedirectOutput) ToLoadbalancerFrontendRuleActionsHttpRedirectOutput() LoadbalancerFrontendRuleActionsHttpRedirectOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsHttpRedirectOutput) ToLoadbalancerFrontendRuleActionsHttpRedirectOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpRedirectOutput {
	return o
}

// Target location.
func (o LoadbalancerFrontendRuleActionsHttpRedirectOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsHttpRedirect) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Target scheme.
func (o LoadbalancerFrontendRuleActionsHttpRedirectOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsHttpRedirect) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsHttpRedirect)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput) ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutput() LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput) ToLoadbalancerFrontendRuleActionsHttpRedirectArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleActionsHttpRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleActionsHttpRedirect {
		return vs[0].([]LoadbalancerFrontendRuleActionsHttpRedirect)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleActionsHttpRedirectOutput)
}

type LoadbalancerFrontendRuleActionsHttpReturn struct {
	// Content type.
	ContentType string `pulumi:"contentType"`
	// The payload.
	Payload string `pulumi:"payload"`
	// HTTP status code.
	Status int `pulumi:"status"`
}

// LoadbalancerFrontendRuleActionsHttpReturnInput is an input type that accepts LoadbalancerFrontendRuleActionsHttpReturnArgs and LoadbalancerFrontendRuleActionsHttpReturnOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsHttpReturnInput` via:
//
//	LoadbalancerFrontendRuleActionsHttpReturnArgs{...}
type LoadbalancerFrontendRuleActionsHttpReturnInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsHttpReturnOutput() LoadbalancerFrontendRuleActionsHttpReturnOutput
	ToLoadbalancerFrontendRuleActionsHttpReturnOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsHttpReturnOutput
}

type LoadbalancerFrontendRuleActionsHttpReturnArgs struct {
	// Content type.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The payload.
	Payload pulumi.StringInput `pulumi:"payload"`
	// HTTP status code.
	Status pulumi.IntInput `pulumi:"status"`
}

func (LoadbalancerFrontendRuleActionsHttpReturnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpReturn)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsHttpReturnArgs) ToLoadbalancerFrontendRuleActionsHttpReturnOutput() LoadbalancerFrontendRuleActionsHttpReturnOutput {
	return i.ToLoadbalancerFrontendRuleActionsHttpReturnOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsHttpReturnArgs) ToLoadbalancerFrontendRuleActionsHttpReturnOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpReturnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsHttpReturnOutput)
}

// LoadbalancerFrontendRuleActionsHttpReturnArrayInput is an input type that accepts LoadbalancerFrontendRuleActionsHttpReturnArray and LoadbalancerFrontendRuleActionsHttpReturnArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsHttpReturnArrayInput` via:
//
//	LoadbalancerFrontendRuleActionsHttpReturnArray{ LoadbalancerFrontendRuleActionsHttpReturnArgs{...} }
type LoadbalancerFrontendRuleActionsHttpReturnArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutput() LoadbalancerFrontendRuleActionsHttpReturnArrayOutput
	ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsHttpReturnArrayOutput
}

type LoadbalancerFrontendRuleActionsHttpReturnArray []LoadbalancerFrontendRuleActionsHttpReturnInput

func (LoadbalancerFrontendRuleActionsHttpReturnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsHttpReturn)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsHttpReturnArray) ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutput() LoadbalancerFrontendRuleActionsHttpReturnArrayOutput {
	return i.ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsHttpReturnArray) ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpReturnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsHttpReturnArrayOutput)
}

type LoadbalancerFrontendRuleActionsHttpReturnOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsHttpReturnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpReturn)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsHttpReturnOutput) ToLoadbalancerFrontendRuleActionsHttpReturnOutput() LoadbalancerFrontendRuleActionsHttpReturnOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsHttpReturnOutput) ToLoadbalancerFrontendRuleActionsHttpReturnOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpReturnOutput {
	return o
}

// Content type.
func (o LoadbalancerFrontendRuleActionsHttpReturnOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsHttpReturn) string { return v.ContentType }).(pulumi.StringOutput)
}

// The payload.
func (o LoadbalancerFrontendRuleActionsHttpReturnOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsHttpReturn) string { return v.Payload }).(pulumi.StringOutput)
}

// HTTP status code.
func (o LoadbalancerFrontendRuleActionsHttpReturnOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsHttpReturn) int { return v.Status }).(pulumi.IntOutput)
}

type LoadbalancerFrontendRuleActionsHttpReturnArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsHttpReturnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsHttpReturn)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsHttpReturnArrayOutput) ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutput() LoadbalancerFrontendRuleActionsHttpReturnArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsHttpReturnArrayOutput) ToLoadbalancerFrontendRuleActionsHttpReturnArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsHttpReturnArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsHttpReturnArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleActionsHttpReturnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleActionsHttpReturn {
		return vs[0].([]LoadbalancerFrontendRuleActionsHttpReturn)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleActionsHttpReturnOutput)
}

type LoadbalancerFrontendRuleActionsSetForwardedHeader struct {
	Active *bool `pulumi:"active"`
}

// LoadbalancerFrontendRuleActionsSetForwardedHeaderInput is an input type that accepts LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs and LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsSetForwardedHeaderInput` via:
//
//	LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs{...}
type LoadbalancerFrontendRuleActionsSetForwardedHeaderInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutput() LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput
	ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput
}

type LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs struct {
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsSetForwardedHeader)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutput() LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput {
	return i.ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput)
}

// LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayInput is an input type that accepts LoadbalancerFrontendRuleActionsSetForwardedHeaderArray and LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayInput` via:
//
//	LoadbalancerFrontendRuleActionsSetForwardedHeaderArray{ LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs{...} }
type LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput() LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput
	ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput
}

type LoadbalancerFrontendRuleActionsSetForwardedHeaderArray []LoadbalancerFrontendRuleActionsSetForwardedHeaderInput

func (LoadbalancerFrontendRuleActionsSetForwardedHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsSetForwardedHeader)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsSetForwardedHeaderArray) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput() LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput {
	return i.ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsSetForwardedHeaderArray) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput)
}

type LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsSetForwardedHeader)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutput() LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsSetForwardedHeader) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsSetForwardedHeader)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput() LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput) ToLoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleActionsSetForwardedHeader {
		return vs[0].([]LoadbalancerFrontendRuleActionsSetForwardedHeader)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput)
}

type LoadbalancerFrontendRuleActionsTcpReject struct {
	Active *bool `pulumi:"active"`
}

// LoadbalancerFrontendRuleActionsTcpRejectInput is an input type that accepts LoadbalancerFrontendRuleActionsTcpRejectArgs and LoadbalancerFrontendRuleActionsTcpRejectOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsTcpRejectInput` via:
//
//	LoadbalancerFrontendRuleActionsTcpRejectArgs{...}
type LoadbalancerFrontendRuleActionsTcpRejectInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsTcpRejectOutput() LoadbalancerFrontendRuleActionsTcpRejectOutput
	ToLoadbalancerFrontendRuleActionsTcpRejectOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsTcpRejectOutput
}

type LoadbalancerFrontendRuleActionsTcpRejectArgs struct {
	Active pulumi.BoolPtrInput `pulumi:"active"`
}

func (LoadbalancerFrontendRuleActionsTcpRejectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsTcpReject)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsTcpRejectArgs) ToLoadbalancerFrontendRuleActionsTcpRejectOutput() LoadbalancerFrontendRuleActionsTcpRejectOutput {
	return i.ToLoadbalancerFrontendRuleActionsTcpRejectOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsTcpRejectArgs) ToLoadbalancerFrontendRuleActionsTcpRejectOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsTcpRejectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsTcpRejectOutput)
}

// LoadbalancerFrontendRuleActionsTcpRejectArrayInput is an input type that accepts LoadbalancerFrontendRuleActionsTcpRejectArray and LoadbalancerFrontendRuleActionsTcpRejectArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsTcpRejectArrayInput` via:
//
//	LoadbalancerFrontendRuleActionsTcpRejectArray{ LoadbalancerFrontendRuleActionsTcpRejectArgs{...} }
type LoadbalancerFrontendRuleActionsTcpRejectArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutput() LoadbalancerFrontendRuleActionsTcpRejectArrayOutput
	ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsTcpRejectArrayOutput
}

type LoadbalancerFrontendRuleActionsTcpRejectArray []LoadbalancerFrontendRuleActionsTcpRejectInput

func (LoadbalancerFrontendRuleActionsTcpRejectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsTcpReject)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsTcpRejectArray) ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutput() LoadbalancerFrontendRuleActionsTcpRejectArrayOutput {
	return i.ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsTcpRejectArray) ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsTcpRejectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsTcpRejectArrayOutput)
}

type LoadbalancerFrontendRuleActionsTcpRejectOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsTcpRejectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsTcpReject)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsTcpRejectOutput) ToLoadbalancerFrontendRuleActionsTcpRejectOutput() LoadbalancerFrontendRuleActionsTcpRejectOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsTcpRejectOutput) ToLoadbalancerFrontendRuleActionsTcpRejectOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsTcpRejectOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsTcpRejectOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsTcpReject) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

type LoadbalancerFrontendRuleActionsTcpRejectArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsTcpRejectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsTcpReject)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsTcpRejectArrayOutput) ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutput() LoadbalancerFrontendRuleActionsTcpRejectArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsTcpRejectArrayOutput) ToLoadbalancerFrontendRuleActionsTcpRejectArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsTcpRejectArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsTcpRejectArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleActionsTcpRejectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleActionsTcpReject {
		return vs[0].([]LoadbalancerFrontendRuleActionsTcpReject)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleActionsTcpRejectOutput)
}

type LoadbalancerFrontendRuleActionsUseBackend struct {
	// The name of the backend where traffic will be routed.
	BackendName string `pulumi:"backendName"`
}

// LoadbalancerFrontendRuleActionsUseBackendInput is an input type that accepts LoadbalancerFrontendRuleActionsUseBackendArgs and LoadbalancerFrontendRuleActionsUseBackendOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsUseBackendInput` via:
//
//	LoadbalancerFrontendRuleActionsUseBackendArgs{...}
type LoadbalancerFrontendRuleActionsUseBackendInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsUseBackendOutput() LoadbalancerFrontendRuleActionsUseBackendOutput
	ToLoadbalancerFrontendRuleActionsUseBackendOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsUseBackendOutput
}

type LoadbalancerFrontendRuleActionsUseBackendArgs struct {
	// The name of the backend where traffic will be routed.
	BackendName pulumi.StringInput `pulumi:"backendName"`
}

func (LoadbalancerFrontendRuleActionsUseBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsUseBackend)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsUseBackendArgs) ToLoadbalancerFrontendRuleActionsUseBackendOutput() LoadbalancerFrontendRuleActionsUseBackendOutput {
	return i.ToLoadbalancerFrontendRuleActionsUseBackendOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsUseBackendArgs) ToLoadbalancerFrontendRuleActionsUseBackendOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsUseBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsUseBackendOutput)
}

// LoadbalancerFrontendRuleActionsUseBackendArrayInput is an input type that accepts LoadbalancerFrontendRuleActionsUseBackendArray and LoadbalancerFrontendRuleActionsUseBackendArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleActionsUseBackendArrayInput` via:
//
//	LoadbalancerFrontendRuleActionsUseBackendArray{ LoadbalancerFrontendRuleActionsUseBackendArgs{...} }
type LoadbalancerFrontendRuleActionsUseBackendArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleActionsUseBackendArrayOutput() LoadbalancerFrontendRuleActionsUseBackendArrayOutput
	ToLoadbalancerFrontendRuleActionsUseBackendArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleActionsUseBackendArrayOutput
}

type LoadbalancerFrontendRuleActionsUseBackendArray []LoadbalancerFrontendRuleActionsUseBackendInput

func (LoadbalancerFrontendRuleActionsUseBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsUseBackend)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleActionsUseBackendArray) ToLoadbalancerFrontendRuleActionsUseBackendArrayOutput() LoadbalancerFrontendRuleActionsUseBackendArrayOutput {
	return i.ToLoadbalancerFrontendRuleActionsUseBackendArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleActionsUseBackendArray) ToLoadbalancerFrontendRuleActionsUseBackendArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsUseBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleActionsUseBackendArrayOutput)
}

type LoadbalancerFrontendRuleActionsUseBackendOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsUseBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleActionsUseBackend)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsUseBackendOutput) ToLoadbalancerFrontendRuleActionsUseBackendOutput() LoadbalancerFrontendRuleActionsUseBackendOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsUseBackendOutput) ToLoadbalancerFrontendRuleActionsUseBackendOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsUseBackendOutput {
	return o
}

// The name of the backend where traffic will be routed.
func (o LoadbalancerFrontendRuleActionsUseBackendOutput) BackendName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleActionsUseBackend) string { return v.BackendName }).(pulumi.StringOutput)
}

type LoadbalancerFrontendRuleActionsUseBackendArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleActionsUseBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleActionsUseBackend)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleActionsUseBackendArrayOutput) ToLoadbalancerFrontendRuleActionsUseBackendArrayOutput() LoadbalancerFrontendRuleActionsUseBackendArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsUseBackendArrayOutput) ToLoadbalancerFrontendRuleActionsUseBackendArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleActionsUseBackendArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleActionsUseBackendArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleActionsUseBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleActionsUseBackend {
		return vs[0].([]LoadbalancerFrontendRuleActionsUseBackend)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleActionsUseBackendOutput)
}

type LoadbalancerFrontendRuleMatchers struct {
	// Matches by range of HTTP request body sizes
	BodySizeRanges []LoadbalancerFrontendRuleMatchersBodySizeRange `pulumi:"bodySizeRanges"`
	// Matches by HTTP request body size.
	BodySizes []LoadbalancerFrontendRuleMatchersBodySize `pulumi:"bodySizes"`
	// Matches by HTTP cookie value. Cookie name must be provided.
	Cookies []LoadbalancerFrontendRuleMatchersCookie `pulumi:"cookies"`
	// Matches by HTTP header value. Header name must be provided.
	Headers []LoadbalancerFrontendRuleMatchersHeader `pulumi:"headers"`
	// Matches by hostname. Header extracted from HTTP Headers or from TLS certificate in case of secured connection.
	Hosts []LoadbalancerFrontendRuleMatchersHost `pulumi:"hosts"`
	// Matches by HTTP method.
	HttpMethods []LoadbalancerFrontendRuleMatchersHttpMethod `pulumi:"httpMethods"`
	// Matches by number of healthy backend members.
	NumMembersUps []LoadbalancerFrontendRuleMatchersNumMembersUp `pulumi:"numMembersUps"`
	// Matches by URL path.
	Paths []LoadbalancerFrontendRuleMatchersPath `pulumi:"paths"`
	// Matches by source IP address.
	SrcIps []LoadbalancerFrontendRuleMatchersSrcIp `pulumi:"srcIps"`
	// Matches by range of source port numbers
	SrcPortRanges []LoadbalancerFrontendRuleMatchersSrcPortRange `pulumi:"srcPortRanges"`
	// Matches by source port number.
	SrcPorts []LoadbalancerFrontendRuleMatchersSrcPort `pulumi:"srcPorts"`
	// Matches by URL query parameter value. Query parameter name must be provided
	UrlParams []LoadbalancerFrontendRuleMatchersUrlParam `pulumi:"urlParams"`
	// Matches by URL query string.
	UrlQueries []LoadbalancerFrontendRuleMatchersUrlQuery `pulumi:"urlQueries"`
	// Matches by URL without schema, e.g. `example.com/dashboard`.
	Urls []LoadbalancerFrontendRuleMatchersUrl `pulumi:"urls"`
}

// LoadbalancerFrontendRuleMatchersInput is an input type that accepts LoadbalancerFrontendRuleMatchersArgs and LoadbalancerFrontendRuleMatchersOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersInput` via:
//
//	LoadbalancerFrontendRuleMatchersArgs{...}
type LoadbalancerFrontendRuleMatchersInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersOutput() LoadbalancerFrontendRuleMatchersOutput
	ToLoadbalancerFrontendRuleMatchersOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersOutput
}

type LoadbalancerFrontendRuleMatchersArgs struct {
	// Matches by range of HTTP request body sizes
	BodySizeRanges LoadbalancerFrontendRuleMatchersBodySizeRangeArrayInput `pulumi:"bodySizeRanges"`
	// Matches by HTTP request body size.
	BodySizes LoadbalancerFrontendRuleMatchersBodySizeArrayInput `pulumi:"bodySizes"`
	// Matches by HTTP cookie value. Cookie name must be provided.
	Cookies LoadbalancerFrontendRuleMatchersCookieArrayInput `pulumi:"cookies"`
	// Matches by HTTP header value. Header name must be provided.
	Headers LoadbalancerFrontendRuleMatchersHeaderArrayInput `pulumi:"headers"`
	// Matches by hostname. Header extracted from HTTP Headers or from TLS certificate in case of secured connection.
	Hosts LoadbalancerFrontendRuleMatchersHostArrayInput `pulumi:"hosts"`
	// Matches by HTTP method.
	HttpMethods LoadbalancerFrontendRuleMatchersHttpMethodArrayInput `pulumi:"httpMethods"`
	// Matches by number of healthy backend members.
	NumMembersUps LoadbalancerFrontendRuleMatchersNumMembersUpArrayInput `pulumi:"numMembersUps"`
	// Matches by URL path.
	Paths LoadbalancerFrontendRuleMatchersPathArrayInput `pulumi:"paths"`
	// Matches by source IP address.
	SrcIps LoadbalancerFrontendRuleMatchersSrcIpArrayInput `pulumi:"srcIps"`
	// Matches by range of source port numbers
	SrcPortRanges LoadbalancerFrontendRuleMatchersSrcPortRangeArrayInput `pulumi:"srcPortRanges"`
	// Matches by source port number.
	SrcPorts LoadbalancerFrontendRuleMatchersSrcPortArrayInput `pulumi:"srcPorts"`
	// Matches by URL query parameter value. Query parameter name must be provided
	UrlParams LoadbalancerFrontendRuleMatchersUrlParamArrayInput `pulumi:"urlParams"`
	// Matches by URL query string.
	UrlQueries LoadbalancerFrontendRuleMatchersUrlQueryArrayInput `pulumi:"urlQueries"`
	// Matches by URL without schema, e.g. `example.com/dashboard`.
	Urls LoadbalancerFrontendRuleMatchersUrlArrayInput `pulumi:"urls"`
}

func (LoadbalancerFrontendRuleMatchersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchers)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersArgs) ToLoadbalancerFrontendRuleMatchersOutput() LoadbalancerFrontendRuleMatchersOutput {
	return i.ToLoadbalancerFrontendRuleMatchersOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersArgs) ToLoadbalancerFrontendRuleMatchersOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersOutput)
}

func (i LoadbalancerFrontendRuleMatchersArgs) ToLoadbalancerFrontendRuleMatchersPtrOutput() LoadbalancerFrontendRuleMatchersPtrOutput {
	return i.ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersArgs) ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersOutput).ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(ctx)
}

// LoadbalancerFrontendRuleMatchersPtrInput is an input type that accepts LoadbalancerFrontendRuleMatchersArgs, LoadbalancerFrontendRuleMatchersPtr and LoadbalancerFrontendRuleMatchersPtrOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersPtrInput` via:
//
//	        LoadbalancerFrontendRuleMatchersArgs{...}
//
//	or:
//
//	        nil
type LoadbalancerFrontendRuleMatchersPtrInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersPtrOutput() LoadbalancerFrontendRuleMatchersPtrOutput
	ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersPtrOutput
}

type loadbalancerFrontendRuleMatchersPtrType LoadbalancerFrontendRuleMatchersArgs

func LoadbalancerFrontendRuleMatchersPtr(v *LoadbalancerFrontendRuleMatchersArgs) LoadbalancerFrontendRuleMatchersPtrInput {
	return (*loadbalancerFrontendRuleMatchersPtrType)(v)
}

func (*loadbalancerFrontendRuleMatchersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerFrontendRuleMatchers)(nil)).Elem()
}

func (i *loadbalancerFrontendRuleMatchersPtrType) ToLoadbalancerFrontendRuleMatchersPtrOutput() LoadbalancerFrontendRuleMatchersPtrOutput {
	return i.ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(context.Background())
}

func (i *loadbalancerFrontendRuleMatchersPtrType) ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersPtrOutput)
}

type LoadbalancerFrontendRuleMatchersOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchers)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersOutput) ToLoadbalancerFrontendRuleMatchersOutput() LoadbalancerFrontendRuleMatchersOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersOutput) ToLoadbalancerFrontendRuleMatchersOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersOutput) ToLoadbalancerFrontendRuleMatchersPtrOutput() LoadbalancerFrontendRuleMatchersPtrOutput {
	return o.ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(context.Background())
}

func (o LoadbalancerFrontendRuleMatchersOutput) ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerFrontendRuleMatchers) *LoadbalancerFrontendRuleMatchers {
		return &v
	}).(LoadbalancerFrontendRuleMatchersPtrOutput)
}

// Matches by range of HTTP request body sizes
func (o LoadbalancerFrontendRuleMatchersOutput) BodySizeRanges() LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersBodySizeRange {
		return v.BodySizeRanges
	}).(LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput)
}

// Matches by HTTP request body size.
func (o LoadbalancerFrontendRuleMatchersOutput) BodySizes() LoadbalancerFrontendRuleMatchersBodySizeArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersBodySize {
		return v.BodySizes
	}).(LoadbalancerFrontendRuleMatchersBodySizeArrayOutput)
}

// Matches by HTTP cookie value. Cookie name must be provided.
func (o LoadbalancerFrontendRuleMatchersOutput) Cookies() LoadbalancerFrontendRuleMatchersCookieArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersCookie { return v.Cookies }).(LoadbalancerFrontendRuleMatchersCookieArrayOutput)
}

// Matches by HTTP header value. Header name must be provided.
func (o LoadbalancerFrontendRuleMatchersOutput) Headers() LoadbalancerFrontendRuleMatchersHeaderArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersHeader { return v.Headers }).(LoadbalancerFrontendRuleMatchersHeaderArrayOutput)
}

// Matches by hostname. Header extracted from HTTP Headers or from TLS certificate in case of secured connection.
func (o LoadbalancerFrontendRuleMatchersOutput) Hosts() LoadbalancerFrontendRuleMatchersHostArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersHost { return v.Hosts }).(LoadbalancerFrontendRuleMatchersHostArrayOutput)
}

// Matches by HTTP method.
func (o LoadbalancerFrontendRuleMatchersOutput) HttpMethods() LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersHttpMethod {
		return v.HttpMethods
	}).(LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput)
}

// Matches by number of healthy backend members.
func (o LoadbalancerFrontendRuleMatchersOutput) NumMembersUps() LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersNumMembersUp {
		return v.NumMembersUps
	}).(LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput)
}

// Matches by URL path.
func (o LoadbalancerFrontendRuleMatchersOutput) Paths() LoadbalancerFrontendRuleMatchersPathArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersPath { return v.Paths }).(LoadbalancerFrontendRuleMatchersPathArrayOutput)
}

// Matches by source IP address.
func (o LoadbalancerFrontendRuleMatchersOutput) SrcIps() LoadbalancerFrontendRuleMatchersSrcIpArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersSrcIp { return v.SrcIps }).(LoadbalancerFrontendRuleMatchersSrcIpArrayOutput)
}

// Matches by range of source port numbers
func (o LoadbalancerFrontendRuleMatchersOutput) SrcPortRanges() LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersSrcPortRange {
		return v.SrcPortRanges
	}).(LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput)
}

// Matches by source port number.
func (o LoadbalancerFrontendRuleMatchersOutput) SrcPorts() LoadbalancerFrontendRuleMatchersSrcPortArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersSrcPort { return v.SrcPorts }).(LoadbalancerFrontendRuleMatchersSrcPortArrayOutput)
}

// Matches by URL query parameter value. Query parameter name must be provided
func (o LoadbalancerFrontendRuleMatchersOutput) UrlParams() LoadbalancerFrontendRuleMatchersUrlParamArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersUrlParam {
		return v.UrlParams
	}).(LoadbalancerFrontendRuleMatchersUrlParamArrayOutput)
}

// Matches by URL query string.
func (o LoadbalancerFrontendRuleMatchersOutput) UrlQueries() LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersUrlQuery {
		return v.UrlQueries
	}).(LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput)
}

// Matches by URL without schema, e.g. `example.com/dashboard`.
func (o LoadbalancerFrontendRuleMatchersOutput) Urls() LoadbalancerFrontendRuleMatchersUrlArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersUrl { return v.Urls }).(LoadbalancerFrontendRuleMatchersUrlArrayOutput)
}

type LoadbalancerFrontendRuleMatchersPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerFrontendRuleMatchers)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersPtrOutput) ToLoadbalancerFrontendRuleMatchersPtrOutput() LoadbalancerFrontendRuleMatchersPtrOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersPtrOutput) ToLoadbalancerFrontendRuleMatchersPtrOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPtrOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersPtrOutput) Elem() LoadbalancerFrontendRuleMatchersOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) LoadbalancerFrontendRuleMatchers {
		if v != nil {
			return *v
		}
		var ret LoadbalancerFrontendRuleMatchers
		return ret
	}).(LoadbalancerFrontendRuleMatchersOutput)
}

// Matches by range of HTTP request body sizes
func (o LoadbalancerFrontendRuleMatchersPtrOutput) BodySizeRanges() LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersBodySizeRange {
		if v == nil {
			return nil
		}
		return v.BodySizeRanges
	}).(LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput)
}

// Matches by HTTP request body size.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) BodySizes() LoadbalancerFrontendRuleMatchersBodySizeArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersBodySize {
		if v == nil {
			return nil
		}
		return v.BodySizes
	}).(LoadbalancerFrontendRuleMatchersBodySizeArrayOutput)
}

// Matches by HTTP cookie value. Cookie name must be provided.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) Cookies() LoadbalancerFrontendRuleMatchersCookieArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersCookie {
		if v == nil {
			return nil
		}
		return v.Cookies
	}).(LoadbalancerFrontendRuleMatchersCookieArrayOutput)
}

// Matches by HTTP header value. Header name must be provided.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) Headers() LoadbalancerFrontendRuleMatchersHeaderArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(LoadbalancerFrontendRuleMatchersHeaderArrayOutput)
}

// Matches by hostname. Header extracted from HTTP Headers or from TLS certificate in case of secured connection.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) Hosts() LoadbalancerFrontendRuleMatchersHostArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersHost {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(LoadbalancerFrontendRuleMatchersHostArrayOutput)
}

// Matches by HTTP method.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) HttpMethods() LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersHttpMethod {
		if v == nil {
			return nil
		}
		return v.HttpMethods
	}).(LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput)
}

// Matches by number of healthy backend members.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) NumMembersUps() LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersNumMembersUp {
		if v == nil {
			return nil
		}
		return v.NumMembersUps
	}).(LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput)
}

// Matches by URL path.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) Paths() LoadbalancerFrontendRuleMatchersPathArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersPath {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(LoadbalancerFrontendRuleMatchersPathArrayOutput)
}

// Matches by source IP address.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) SrcIps() LoadbalancerFrontendRuleMatchersSrcIpArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersSrcIp {
		if v == nil {
			return nil
		}
		return v.SrcIps
	}).(LoadbalancerFrontendRuleMatchersSrcIpArrayOutput)
}

// Matches by range of source port numbers
func (o LoadbalancerFrontendRuleMatchersPtrOutput) SrcPortRanges() LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersSrcPortRange {
		if v == nil {
			return nil
		}
		return v.SrcPortRanges
	}).(LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput)
}

// Matches by source port number.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) SrcPorts() LoadbalancerFrontendRuleMatchersSrcPortArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersSrcPort {
		if v == nil {
			return nil
		}
		return v.SrcPorts
	}).(LoadbalancerFrontendRuleMatchersSrcPortArrayOutput)
}

// Matches by URL query parameter value. Query parameter name must be provided
func (o LoadbalancerFrontendRuleMatchersPtrOutput) UrlParams() LoadbalancerFrontendRuleMatchersUrlParamArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersUrlParam {
		if v == nil {
			return nil
		}
		return v.UrlParams
	}).(LoadbalancerFrontendRuleMatchersUrlParamArrayOutput)
}

// Matches by URL query string.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) UrlQueries() LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersUrlQuery {
		if v == nil {
			return nil
		}
		return v.UrlQueries
	}).(LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput)
}

// Matches by URL without schema, e.g. `example.com/dashboard`.
func (o LoadbalancerFrontendRuleMatchersPtrOutput) Urls() LoadbalancerFrontendRuleMatchersUrlArrayOutput {
	return o.ApplyT(func(v *LoadbalancerFrontendRuleMatchers) []LoadbalancerFrontendRuleMatchersUrl {
		if v == nil {
			return nil
		}
		return v.Urls
	}).(LoadbalancerFrontendRuleMatchersUrlArrayOutput)
}

type LoadbalancerFrontendRuleMatchersBodySize struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
	Method string `pulumi:"method"`
	// Integer value.
	Value int `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersBodySizeInput is an input type that accepts LoadbalancerFrontendRuleMatchersBodySizeArgs and LoadbalancerFrontendRuleMatchersBodySizeOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersBodySizeInput` via:
//
//	LoadbalancerFrontendRuleMatchersBodySizeArgs{...}
type LoadbalancerFrontendRuleMatchersBodySizeInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersBodySizeOutput() LoadbalancerFrontendRuleMatchersBodySizeOutput
	ToLoadbalancerFrontendRuleMatchersBodySizeOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersBodySizeOutput
}

type LoadbalancerFrontendRuleMatchersBodySizeArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
	Method pulumi.StringInput `pulumi:"method"`
	// Integer value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersBodySizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySize)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersBodySizeArgs) ToLoadbalancerFrontendRuleMatchersBodySizeOutput() LoadbalancerFrontendRuleMatchersBodySizeOutput {
	return i.ToLoadbalancerFrontendRuleMatchersBodySizeOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersBodySizeArgs) ToLoadbalancerFrontendRuleMatchersBodySizeOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersBodySizeOutput)
}

// LoadbalancerFrontendRuleMatchersBodySizeArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersBodySizeArray and LoadbalancerFrontendRuleMatchersBodySizeArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersBodySizeArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersBodySizeArray{ LoadbalancerFrontendRuleMatchersBodySizeArgs{...} }
type LoadbalancerFrontendRuleMatchersBodySizeArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutput() LoadbalancerFrontendRuleMatchersBodySizeArrayOutput
	ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersBodySizeArrayOutput
}

type LoadbalancerFrontendRuleMatchersBodySizeArray []LoadbalancerFrontendRuleMatchersBodySizeInput

func (LoadbalancerFrontendRuleMatchersBodySizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersBodySize)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersBodySizeArray) ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutput() LoadbalancerFrontendRuleMatchersBodySizeArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersBodySizeArray) ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersBodySizeArrayOutput)
}

type LoadbalancerFrontendRuleMatchersBodySizeOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersBodySizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySize)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersBodySizeOutput) ToLoadbalancerFrontendRuleMatchersBodySizeOutput() LoadbalancerFrontendRuleMatchersBodySizeOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersBodySizeOutput) ToLoadbalancerFrontendRuleMatchersBodySizeOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersBodySizeOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersBodySize) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
func (o LoadbalancerFrontendRuleMatchersBodySizeOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersBodySize) string { return v.Method }).(pulumi.StringOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersBodySizeOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersBodySize) int { return v.Value }).(pulumi.IntOutput)
}

type LoadbalancerFrontendRuleMatchersBodySizeArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersBodySizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersBodySize)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersBodySizeArrayOutput) ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutput() LoadbalancerFrontendRuleMatchersBodySizeArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersBodySizeArrayOutput) ToLoadbalancerFrontendRuleMatchersBodySizeArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersBodySizeArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersBodySizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersBodySize {
		return vs[0].([]LoadbalancerFrontendRuleMatchersBodySize)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersBodySizeOutput)
}

type LoadbalancerFrontendRuleMatchersBodySizeRange struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Integer value.
	RangeEnd int `pulumi:"rangeEnd"`
	// Integer value.
	RangeStart int `pulumi:"rangeStart"`
}

// LoadbalancerFrontendRuleMatchersBodySizeRangeInput is an input type that accepts LoadbalancerFrontendRuleMatchersBodySizeRangeArgs and LoadbalancerFrontendRuleMatchersBodySizeRangeOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersBodySizeRangeInput` via:
//
//	LoadbalancerFrontendRuleMatchersBodySizeRangeArgs{...}
type LoadbalancerFrontendRuleMatchersBodySizeRangeInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutput() LoadbalancerFrontendRuleMatchersBodySizeRangeOutput
	ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersBodySizeRangeOutput
}

type LoadbalancerFrontendRuleMatchersBodySizeRangeArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Integer value.
	RangeEnd pulumi.IntInput `pulumi:"rangeEnd"`
	// Integer value.
	RangeStart pulumi.IntInput `pulumi:"rangeStart"`
}

func (LoadbalancerFrontendRuleMatchersBodySizeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySizeRange)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersBodySizeRangeArgs) ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutput() LoadbalancerFrontendRuleMatchersBodySizeRangeOutput {
	return i.ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersBodySizeRangeArgs) ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersBodySizeRangeOutput)
}

// LoadbalancerFrontendRuleMatchersBodySizeRangeArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersBodySizeRangeArray and LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersBodySizeRangeArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersBodySizeRangeArray{ LoadbalancerFrontendRuleMatchersBodySizeRangeArgs{...} }
type LoadbalancerFrontendRuleMatchersBodySizeRangeArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput() LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput
	ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput
}

type LoadbalancerFrontendRuleMatchersBodySizeRangeArray []LoadbalancerFrontendRuleMatchersBodySizeRangeInput

func (LoadbalancerFrontendRuleMatchersBodySizeRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersBodySizeRange)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersBodySizeRangeArray) ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput() LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersBodySizeRangeArray) ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput)
}

type LoadbalancerFrontendRuleMatchersBodySizeRangeOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersBodySizeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySizeRange)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersBodySizeRangeOutput) ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutput() LoadbalancerFrontendRuleMatchersBodySizeRangeOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersBodySizeRangeOutput) ToLoadbalancerFrontendRuleMatchersBodySizeRangeOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeRangeOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersBodySizeRangeOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersBodySizeRange) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersBodySizeRangeOutput) RangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersBodySizeRange) int { return v.RangeEnd }).(pulumi.IntOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersBodySizeRangeOutput) RangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersBodySizeRange) int { return v.RangeStart }).(pulumi.IntOutput)
}

type LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersBodySizeRange)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput) ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput() LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput) ToLoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersBodySizeRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersBodySizeRange {
		return vs[0].([]LoadbalancerFrontendRuleMatchersBodySizeRange)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersBodySizeRangeOutput)
}

type LoadbalancerFrontendRuleMatchersCookie struct {
	// Ignore case, default `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method string `pulumi:"method"`
	// Name of the argument.
	Name string `pulumi:"name"`
	// String value.
	Value *string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersCookieInput is an input type that accepts LoadbalancerFrontendRuleMatchersCookieArgs and LoadbalancerFrontendRuleMatchersCookieOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersCookieInput` via:
//
//	LoadbalancerFrontendRuleMatchersCookieArgs{...}
type LoadbalancerFrontendRuleMatchersCookieInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersCookieOutput() LoadbalancerFrontendRuleMatchersCookieOutput
	ToLoadbalancerFrontendRuleMatchersCookieOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersCookieOutput
}

type LoadbalancerFrontendRuleMatchersCookieArgs struct {
	// Ignore case, default `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method pulumi.StringInput `pulumi:"method"`
	// Name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// String value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersCookie)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersCookieArgs) ToLoadbalancerFrontendRuleMatchersCookieOutput() LoadbalancerFrontendRuleMatchersCookieOutput {
	return i.ToLoadbalancerFrontendRuleMatchersCookieOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersCookieArgs) ToLoadbalancerFrontendRuleMatchersCookieOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersCookieOutput)
}

// LoadbalancerFrontendRuleMatchersCookieArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersCookieArray and LoadbalancerFrontendRuleMatchersCookieArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersCookieArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersCookieArray{ LoadbalancerFrontendRuleMatchersCookieArgs{...} }
type LoadbalancerFrontendRuleMatchersCookieArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersCookieArrayOutput() LoadbalancerFrontendRuleMatchersCookieArrayOutput
	ToLoadbalancerFrontendRuleMatchersCookieArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersCookieArrayOutput
}

type LoadbalancerFrontendRuleMatchersCookieArray []LoadbalancerFrontendRuleMatchersCookieInput

func (LoadbalancerFrontendRuleMatchersCookieArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersCookie)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersCookieArray) ToLoadbalancerFrontendRuleMatchersCookieArrayOutput() LoadbalancerFrontendRuleMatchersCookieArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersCookieArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersCookieArray) ToLoadbalancerFrontendRuleMatchersCookieArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersCookieArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersCookieArrayOutput)
}

type LoadbalancerFrontendRuleMatchersCookieOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersCookie)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersCookieOutput) ToLoadbalancerFrontendRuleMatchersCookieOutput() LoadbalancerFrontendRuleMatchersCookieOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersCookieOutput) ToLoadbalancerFrontendRuleMatchersCookieOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersCookieOutput {
	return o
}

// Ignore case, default `false`.
func (o LoadbalancerFrontendRuleMatchersCookieOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersCookie) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersCookieOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersCookie) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
func (o LoadbalancerFrontendRuleMatchersCookieOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersCookie) string { return v.Method }).(pulumi.StringOutput)
}

// Name of the argument.
func (o LoadbalancerFrontendRuleMatchersCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersCookie) string { return v.Name }).(pulumi.StringOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersCookieOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersCookie) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleMatchersCookieArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersCookieArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersCookie)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersCookieArrayOutput) ToLoadbalancerFrontendRuleMatchersCookieArrayOutput() LoadbalancerFrontendRuleMatchersCookieArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersCookieArrayOutput) ToLoadbalancerFrontendRuleMatchersCookieArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersCookieArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersCookieArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersCookieOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersCookie {
		return vs[0].([]LoadbalancerFrontendRuleMatchersCookie)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersCookieOutput)
}

type LoadbalancerFrontendRuleMatchersHeader struct {
	// Ignore case, default `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method string `pulumi:"method"`
	// Name of the argument.
	Name string `pulumi:"name"`
	// String value.
	Value *string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersHeaderInput is an input type that accepts LoadbalancerFrontendRuleMatchersHeaderArgs and LoadbalancerFrontendRuleMatchersHeaderOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersHeaderInput` via:
//
//	LoadbalancerFrontendRuleMatchersHeaderArgs{...}
type LoadbalancerFrontendRuleMatchersHeaderInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersHeaderOutput() LoadbalancerFrontendRuleMatchersHeaderOutput
	ToLoadbalancerFrontendRuleMatchersHeaderOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersHeaderOutput
}

type LoadbalancerFrontendRuleMatchersHeaderArgs struct {
	// Ignore case, default `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method pulumi.StringInput `pulumi:"method"`
	// Name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// String value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHeader)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersHeaderArgs) ToLoadbalancerFrontendRuleMatchersHeaderOutput() LoadbalancerFrontendRuleMatchersHeaderOutput {
	return i.ToLoadbalancerFrontendRuleMatchersHeaderOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersHeaderArgs) ToLoadbalancerFrontendRuleMatchersHeaderOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersHeaderOutput)
}

// LoadbalancerFrontendRuleMatchersHeaderArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersHeaderArray and LoadbalancerFrontendRuleMatchersHeaderArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersHeaderArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersHeaderArray{ LoadbalancerFrontendRuleMatchersHeaderArgs{...} }
type LoadbalancerFrontendRuleMatchersHeaderArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersHeaderArrayOutput() LoadbalancerFrontendRuleMatchersHeaderArrayOutput
	ToLoadbalancerFrontendRuleMatchersHeaderArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersHeaderArrayOutput
}

type LoadbalancerFrontendRuleMatchersHeaderArray []LoadbalancerFrontendRuleMatchersHeaderInput

func (LoadbalancerFrontendRuleMatchersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersHeader)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersHeaderArray) ToLoadbalancerFrontendRuleMatchersHeaderArrayOutput() LoadbalancerFrontendRuleMatchersHeaderArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersHeaderArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersHeaderArray) ToLoadbalancerFrontendRuleMatchersHeaderArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersHeaderArrayOutput)
}

type LoadbalancerFrontendRuleMatchersHeaderOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHeader)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersHeaderOutput) ToLoadbalancerFrontendRuleMatchersHeaderOutput() LoadbalancerFrontendRuleMatchersHeaderOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHeaderOutput) ToLoadbalancerFrontendRuleMatchersHeaderOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHeaderOutput {
	return o
}

// Ignore case, default `false`.
func (o LoadbalancerFrontendRuleMatchersHeaderOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHeader) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersHeaderOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHeader) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
func (o LoadbalancerFrontendRuleMatchersHeaderOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHeader) string { return v.Method }).(pulumi.StringOutput)
}

// Name of the argument.
func (o LoadbalancerFrontendRuleMatchersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleMatchersHeaderArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersHeader)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersHeaderArrayOutput) ToLoadbalancerFrontendRuleMatchersHeaderArrayOutput() LoadbalancerFrontendRuleMatchersHeaderArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHeaderArrayOutput) ToLoadbalancerFrontendRuleMatchersHeaderArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHeaderArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHeaderArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersHeader {
		return vs[0].([]LoadbalancerFrontendRuleMatchersHeader)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersHeaderOutput)
}

type LoadbalancerFrontendRuleMatchersHost struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// String value.
	Value string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersHostInput is an input type that accepts LoadbalancerFrontendRuleMatchersHostArgs and LoadbalancerFrontendRuleMatchersHostOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersHostInput` via:
//
//	LoadbalancerFrontendRuleMatchersHostArgs{...}
type LoadbalancerFrontendRuleMatchersHostInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersHostOutput() LoadbalancerFrontendRuleMatchersHostOutput
	ToLoadbalancerFrontendRuleMatchersHostOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersHostOutput
}

type LoadbalancerFrontendRuleMatchersHostArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// String value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHost)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersHostArgs) ToLoadbalancerFrontendRuleMatchersHostOutput() LoadbalancerFrontendRuleMatchersHostOutput {
	return i.ToLoadbalancerFrontendRuleMatchersHostOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersHostArgs) ToLoadbalancerFrontendRuleMatchersHostOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersHostOutput)
}

// LoadbalancerFrontendRuleMatchersHostArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersHostArray and LoadbalancerFrontendRuleMatchersHostArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersHostArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersHostArray{ LoadbalancerFrontendRuleMatchersHostArgs{...} }
type LoadbalancerFrontendRuleMatchersHostArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersHostArrayOutput() LoadbalancerFrontendRuleMatchersHostArrayOutput
	ToLoadbalancerFrontendRuleMatchersHostArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersHostArrayOutput
}

type LoadbalancerFrontendRuleMatchersHostArray []LoadbalancerFrontendRuleMatchersHostInput

func (LoadbalancerFrontendRuleMatchersHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersHost)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersHostArray) ToLoadbalancerFrontendRuleMatchersHostArrayOutput() LoadbalancerFrontendRuleMatchersHostArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersHostArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersHostArray) ToLoadbalancerFrontendRuleMatchersHostArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersHostArrayOutput)
}

type LoadbalancerFrontendRuleMatchersHostOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHost)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersHostOutput) ToLoadbalancerFrontendRuleMatchersHostOutput() LoadbalancerFrontendRuleMatchersHostOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHostOutput) ToLoadbalancerFrontendRuleMatchersHostOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHostOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersHostOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHost) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersHostOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHost) string { return v.Value }).(pulumi.StringOutput)
}

type LoadbalancerFrontendRuleMatchersHostArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersHost)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersHostArrayOutput) ToLoadbalancerFrontendRuleMatchersHostArrayOutput() LoadbalancerFrontendRuleMatchersHostArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHostArrayOutput) ToLoadbalancerFrontendRuleMatchersHostArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHostArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHostArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersHost {
		return vs[0].([]LoadbalancerFrontendRuleMatchersHost)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersHostOutput)
}

type LoadbalancerFrontendRuleMatchersHttpMethod struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// String value (`GET`, `HEAD`, `POST`, `PUT`, `PATCH`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`).
	Value string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersHttpMethodInput is an input type that accepts LoadbalancerFrontendRuleMatchersHttpMethodArgs and LoadbalancerFrontendRuleMatchersHttpMethodOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersHttpMethodInput` via:
//
//	LoadbalancerFrontendRuleMatchersHttpMethodArgs{...}
type LoadbalancerFrontendRuleMatchersHttpMethodInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersHttpMethodOutput() LoadbalancerFrontendRuleMatchersHttpMethodOutput
	ToLoadbalancerFrontendRuleMatchersHttpMethodOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersHttpMethodOutput
}

type LoadbalancerFrontendRuleMatchersHttpMethodArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// String value (`GET`, `HEAD`, `POST`, `PUT`, `PATCH`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`).
	Value pulumi.StringInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersHttpMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHttpMethod)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersHttpMethodArgs) ToLoadbalancerFrontendRuleMatchersHttpMethodOutput() LoadbalancerFrontendRuleMatchersHttpMethodOutput {
	return i.ToLoadbalancerFrontendRuleMatchersHttpMethodOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersHttpMethodArgs) ToLoadbalancerFrontendRuleMatchersHttpMethodOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHttpMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersHttpMethodOutput)
}

// LoadbalancerFrontendRuleMatchersHttpMethodArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersHttpMethodArray and LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersHttpMethodArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersHttpMethodArray{ LoadbalancerFrontendRuleMatchersHttpMethodArgs{...} }
type LoadbalancerFrontendRuleMatchersHttpMethodArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutput() LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput
	ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput
}

type LoadbalancerFrontendRuleMatchersHttpMethodArray []LoadbalancerFrontendRuleMatchersHttpMethodInput

func (LoadbalancerFrontendRuleMatchersHttpMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersHttpMethod)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersHttpMethodArray) ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutput() LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersHttpMethodArray) ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput)
}

type LoadbalancerFrontendRuleMatchersHttpMethodOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersHttpMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHttpMethod)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersHttpMethodOutput) ToLoadbalancerFrontendRuleMatchersHttpMethodOutput() LoadbalancerFrontendRuleMatchersHttpMethodOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHttpMethodOutput) ToLoadbalancerFrontendRuleMatchersHttpMethodOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHttpMethodOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersHttpMethodOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHttpMethod) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// String value (`GET`, `HEAD`, `POST`, `PUT`, `PATCH`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`).
func (o LoadbalancerFrontendRuleMatchersHttpMethodOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersHttpMethod) string { return v.Value }).(pulumi.StringOutput)
}

type LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersHttpMethod)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput) ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutput() LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput) ToLoadbalancerFrontendRuleMatchersHttpMethodArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersHttpMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersHttpMethod {
		return vs[0].([]LoadbalancerFrontendRuleMatchersHttpMethod)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersHttpMethodOutput)
}

type LoadbalancerFrontendRuleMatchersNumMembersUp struct {
	// The name of the `backend` which members will be monitored.
	BackendName string `pulumi:"backendName"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
	Method string `pulumi:"method"`
	// Integer value.
	Value int `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersNumMembersUpInput is an input type that accepts LoadbalancerFrontendRuleMatchersNumMembersUpArgs and LoadbalancerFrontendRuleMatchersNumMembersUpOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersNumMembersUpInput` via:
//
//	LoadbalancerFrontendRuleMatchersNumMembersUpArgs{...}
type LoadbalancerFrontendRuleMatchersNumMembersUpInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersNumMembersUpOutput() LoadbalancerFrontendRuleMatchersNumMembersUpOutput
	ToLoadbalancerFrontendRuleMatchersNumMembersUpOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersNumMembersUpOutput
}

type LoadbalancerFrontendRuleMatchersNumMembersUpArgs struct {
	// The name of the `backend` which members will be monitored.
	BackendName pulumi.StringInput `pulumi:"backendName"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
	Method pulumi.StringInput `pulumi:"method"`
	// Integer value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersNumMembersUpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersNumMembersUp)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersNumMembersUpArgs) ToLoadbalancerFrontendRuleMatchersNumMembersUpOutput() LoadbalancerFrontendRuleMatchersNumMembersUpOutput {
	return i.ToLoadbalancerFrontendRuleMatchersNumMembersUpOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersNumMembersUpArgs) ToLoadbalancerFrontendRuleMatchersNumMembersUpOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersNumMembersUpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersNumMembersUpOutput)
}

// LoadbalancerFrontendRuleMatchersNumMembersUpArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersNumMembersUpArray and LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersNumMembersUpArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersNumMembersUpArray{ LoadbalancerFrontendRuleMatchersNumMembersUpArgs{...} }
type LoadbalancerFrontendRuleMatchersNumMembersUpArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput() LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput
	ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput
}

type LoadbalancerFrontendRuleMatchersNumMembersUpArray []LoadbalancerFrontendRuleMatchersNumMembersUpInput

func (LoadbalancerFrontendRuleMatchersNumMembersUpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersNumMembersUp)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersNumMembersUpArray) ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput() LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersNumMembersUpArray) ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput)
}

type LoadbalancerFrontendRuleMatchersNumMembersUpOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersNumMembersUpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersNumMembersUp)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersNumMembersUpOutput) ToLoadbalancerFrontendRuleMatchersNumMembersUpOutput() LoadbalancerFrontendRuleMatchersNumMembersUpOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersNumMembersUpOutput) ToLoadbalancerFrontendRuleMatchersNumMembersUpOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersNumMembersUpOutput {
	return o
}

// The name of the `backend` which members will be monitored.
func (o LoadbalancerFrontendRuleMatchersNumMembersUpOutput) BackendName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersNumMembersUp) string { return v.BackendName }).(pulumi.StringOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersNumMembersUpOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersNumMembersUp) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
func (o LoadbalancerFrontendRuleMatchersNumMembersUpOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersNumMembersUp) string { return v.Method }).(pulumi.StringOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersNumMembersUpOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersNumMembersUp) int { return v.Value }).(pulumi.IntOutput)
}

type LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersNumMembersUp)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput) ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput() LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput) ToLoadbalancerFrontendRuleMatchersNumMembersUpArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersNumMembersUpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersNumMembersUp {
		return vs[0].([]LoadbalancerFrontendRuleMatchersNumMembersUp)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersNumMembersUpOutput)
}

type LoadbalancerFrontendRuleMatchersPath struct {
	// Ignore case, default `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method string `pulumi:"method"`
	// String value.
	Value *string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersPathInput is an input type that accepts LoadbalancerFrontendRuleMatchersPathArgs and LoadbalancerFrontendRuleMatchersPathOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersPathInput` via:
//
//	LoadbalancerFrontendRuleMatchersPathArgs{...}
type LoadbalancerFrontendRuleMatchersPathInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersPathOutput() LoadbalancerFrontendRuleMatchersPathOutput
	ToLoadbalancerFrontendRuleMatchersPathOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersPathOutput
}

type LoadbalancerFrontendRuleMatchersPathArgs struct {
	// Ignore case, default `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method pulumi.StringInput `pulumi:"method"`
	// String value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersPath)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersPathArgs) ToLoadbalancerFrontendRuleMatchersPathOutput() LoadbalancerFrontendRuleMatchersPathOutput {
	return i.ToLoadbalancerFrontendRuleMatchersPathOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersPathArgs) ToLoadbalancerFrontendRuleMatchersPathOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersPathOutput)
}

// LoadbalancerFrontendRuleMatchersPathArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersPathArray and LoadbalancerFrontendRuleMatchersPathArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersPathArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersPathArray{ LoadbalancerFrontendRuleMatchersPathArgs{...} }
type LoadbalancerFrontendRuleMatchersPathArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersPathArrayOutput() LoadbalancerFrontendRuleMatchersPathArrayOutput
	ToLoadbalancerFrontendRuleMatchersPathArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersPathArrayOutput
}

type LoadbalancerFrontendRuleMatchersPathArray []LoadbalancerFrontendRuleMatchersPathInput

func (LoadbalancerFrontendRuleMatchersPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersPath)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersPathArray) ToLoadbalancerFrontendRuleMatchersPathArrayOutput() LoadbalancerFrontendRuleMatchersPathArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersPathArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersPathArray) ToLoadbalancerFrontendRuleMatchersPathArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersPathArrayOutput)
}

type LoadbalancerFrontendRuleMatchersPathOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersPath)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersPathOutput) ToLoadbalancerFrontendRuleMatchersPathOutput() LoadbalancerFrontendRuleMatchersPathOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersPathOutput) ToLoadbalancerFrontendRuleMatchersPathOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPathOutput {
	return o
}

// Ignore case, default `false`.
func (o LoadbalancerFrontendRuleMatchersPathOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersPath) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersPathOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersPath) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
func (o LoadbalancerFrontendRuleMatchersPathOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersPath) string { return v.Method }).(pulumi.StringOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersPathOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersPath) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleMatchersPathArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersPath)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersPathArrayOutput) ToLoadbalancerFrontendRuleMatchersPathArrayOutput() LoadbalancerFrontendRuleMatchersPathArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersPathArrayOutput) ToLoadbalancerFrontendRuleMatchersPathArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersPathArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersPathArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersPath {
		return vs[0].([]LoadbalancerFrontendRuleMatchersPath)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersPathOutput)
}

type LoadbalancerFrontendRuleMatchersSrcIp struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// IP address. CIDR masks are supported, e.g. `192.168.0.0/24`.
	Value string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersSrcIpInput is an input type that accepts LoadbalancerFrontendRuleMatchersSrcIpArgs and LoadbalancerFrontendRuleMatchersSrcIpOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersSrcIpInput` via:
//
//	LoadbalancerFrontendRuleMatchersSrcIpArgs{...}
type LoadbalancerFrontendRuleMatchersSrcIpInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersSrcIpOutput() LoadbalancerFrontendRuleMatchersSrcIpOutput
	ToLoadbalancerFrontendRuleMatchersSrcIpOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersSrcIpOutput
}

type LoadbalancerFrontendRuleMatchersSrcIpArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// IP address. CIDR masks are supported, e.g. `192.168.0.0/24`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersSrcIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcIp)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersSrcIpArgs) ToLoadbalancerFrontendRuleMatchersSrcIpOutput() LoadbalancerFrontendRuleMatchersSrcIpOutput {
	return i.ToLoadbalancerFrontendRuleMatchersSrcIpOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersSrcIpArgs) ToLoadbalancerFrontendRuleMatchersSrcIpOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersSrcIpOutput)
}

// LoadbalancerFrontendRuleMatchersSrcIpArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersSrcIpArray and LoadbalancerFrontendRuleMatchersSrcIpArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersSrcIpArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersSrcIpArray{ LoadbalancerFrontendRuleMatchersSrcIpArgs{...} }
type LoadbalancerFrontendRuleMatchersSrcIpArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutput() LoadbalancerFrontendRuleMatchersSrcIpArrayOutput
	ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersSrcIpArrayOutput
}

type LoadbalancerFrontendRuleMatchersSrcIpArray []LoadbalancerFrontendRuleMatchersSrcIpInput

func (LoadbalancerFrontendRuleMatchersSrcIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersSrcIp)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersSrcIpArray) ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutput() LoadbalancerFrontendRuleMatchersSrcIpArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersSrcIpArray) ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersSrcIpArrayOutput)
}

type LoadbalancerFrontendRuleMatchersSrcIpOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersSrcIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcIp)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersSrcIpOutput) ToLoadbalancerFrontendRuleMatchersSrcIpOutput() LoadbalancerFrontendRuleMatchersSrcIpOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcIpOutput) ToLoadbalancerFrontendRuleMatchersSrcIpOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcIpOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersSrcIpOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcIp) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// IP address. CIDR masks are supported, e.g. `192.168.0.0/24`.
func (o LoadbalancerFrontendRuleMatchersSrcIpOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcIp) string { return v.Value }).(pulumi.StringOutput)
}

type LoadbalancerFrontendRuleMatchersSrcIpArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersSrcIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersSrcIp)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersSrcIpArrayOutput) ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutput() LoadbalancerFrontendRuleMatchersSrcIpArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcIpArrayOutput) ToLoadbalancerFrontendRuleMatchersSrcIpArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcIpArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcIpArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersSrcIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersSrcIp {
		return vs[0].([]LoadbalancerFrontendRuleMatchersSrcIp)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersSrcIpOutput)
}

type LoadbalancerFrontendRuleMatchersSrcPort struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
	Method string `pulumi:"method"`
	// Integer value.
	Value int `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersSrcPortInput is an input type that accepts LoadbalancerFrontendRuleMatchersSrcPortArgs and LoadbalancerFrontendRuleMatchersSrcPortOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersSrcPortInput` via:
//
//	LoadbalancerFrontendRuleMatchersSrcPortArgs{...}
type LoadbalancerFrontendRuleMatchersSrcPortInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersSrcPortOutput() LoadbalancerFrontendRuleMatchersSrcPortOutput
	ToLoadbalancerFrontendRuleMatchersSrcPortOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersSrcPortOutput
}

type LoadbalancerFrontendRuleMatchersSrcPortArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
	Method pulumi.StringInput `pulumi:"method"`
	// Integer value.
	Value pulumi.IntInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersSrcPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPort)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersSrcPortArgs) ToLoadbalancerFrontendRuleMatchersSrcPortOutput() LoadbalancerFrontendRuleMatchersSrcPortOutput {
	return i.ToLoadbalancerFrontendRuleMatchersSrcPortOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersSrcPortArgs) ToLoadbalancerFrontendRuleMatchersSrcPortOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersSrcPortOutput)
}

// LoadbalancerFrontendRuleMatchersSrcPortArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersSrcPortArray and LoadbalancerFrontendRuleMatchersSrcPortArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersSrcPortArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersSrcPortArray{ LoadbalancerFrontendRuleMatchersSrcPortArgs{...} }
type LoadbalancerFrontendRuleMatchersSrcPortArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutput() LoadbalancerFrontendRuleMatchersSrcPortArrayOutput
	ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersSrcPortArrayOutput
}

type LoadbalancerFrontendRuleMatchersSrcPortArray []LoadbalancerFrontendRuleMatchersSrcPortInput

func (LoadbalancerFrontendRuleMatchersSrcPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersSrcPort)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersSrcPortArray) ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutput() LoadbalancerFrontendRuleMatchersSrcPortArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersSrcPortArray) ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersSrcPortArrayOutput)
}

type LoadbalancerFrontendRuleMatchersSrcPortOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersSrcPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPort)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersSrcPortOutput) ToLoadbalancerFrontendRuleMatchersSrcPortOutput() LoadbalancerFrontendRuleMatchersSrcPortOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcPortOutput) ToLoadbalancerFrontendRuleMatchersSrcPortOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersSrcPortOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcPort) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`equal`, `greater`, `greaterOrEqual`, `less`, `lessOrEqual`).
func (o LoadbalancerFrontendRuleMatchersSrcPortOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcPort) string { return v.Method }).(pulumi.StringOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersSrcPortOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcPort) int { return v.Value }).(pulumi.IntOutput)
}

type LoadbalancerFrontendRuleMatchersSrcPortArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersSrcPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersSrcPort)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersSrcPortArrayOutput) ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutput() LoadbalancerFrontendRuleMatchersSrcPortArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcPortArrayOutput) ToLoadbalancerFrontendRuleMatchersSrcPortArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcPortArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersSrcPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersSrcPort {
		return vs[0].([]LoadbalancerFrontendRuleMatchersSrcPort)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersSrcPortOutput)
}

type LoadbalancerFrontendRuleMatchersSrcPortRange struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Integer value.
	RangeEnd int `pulumi:"rangeEnd"`
	// Integer value.
	RangeStart int `pulumi:"rangeStart"`
}

// LoadbalancerFrontendRuleMatchersSrcPortRangeInput is an input type that accepts LoadbalancerFrontendRuleMatchersSrcPortRangeArgs and LoadbalancerFrontendRuleMatchersSrcPortRangeOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersSrcPortRangeInput` via:
//
//	LoadbalancerFrontendRuleMatchersSrcPortRangeArgs{...}
type LoadbalancerFrontendRuleMatchersSrcPortRangeInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutput() LoadbalancerFrontendRuleMatchersSrcPortRangeOutput
	ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersSrcPortRangeOutput
}

type LoadbalancerFrontendRuleMatchersSrcPortRangeArgs struct {
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Integer value.
	RangeEnd pulumi.IntInput `pulumi:"rangeEnd"`
	// Integer value.
	RangeStart pulumi.IntInput `pulumi:"rangeStart"`
}

func (LoadbalancerFrontendRuleMatchersSrcPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPortRange)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersSrcPortRangeArgs) ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutput() LoadbalancerFrontendRuleMatchersSrcPortRangeOutput {
	return i.ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersSrcPortRangeArgs) ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersSrcPortRangeOutput)
}

// LoadbalancerFrontendRuleMatchersSrcPortRangeArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersSrcPortRangeArray and LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersSrcPortRangeArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersSrcPortRangeArray{ LoadbalancerFrontendRuleMatchersSrcPortRangeArgs{...} }
type LoadbalancerFrontendRuleMatchersSrcPortRangeArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput() LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput
	ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput
}

type LoadbalancerFrontendRuleMatchersSrcPortRangeArray []LoadbalancerFrontendRuleMatchersSrcPortRangeInput

func (LoadbalancerFrontendRuleMatchersSrcPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersSrcPortRange)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersSrcPortRangeArray) ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput() LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersSrcPortRangeArray) ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput)
}

type LoadbalancerFrontendRuleMatchersSrcPortRangeOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersSrcPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPortRange)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersSrcPortRangeOutput) ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutput() LoadbalancerFrontendRuleMatchersSrcPortRangeOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcPortRangeOutput) ToLoadbalancerFrontendRuleMatchersSrcPortRangeOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortRangeOutput {
	return o
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersSrcPortRangeOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcPortRange) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersSrcPortRangeOutput) RangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcPortRange) int { return v.RangeEnd }).(pulumi.IntOutput)
}

// Integer value.
func (o LoadbalancerFrontendRuleMatchersSrcPortRangeOutput) RangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersSrcPortRange) int { return v.RangeStart }).(pulumi.IntOutput)
}

type LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersSrcPortRange)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput) ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput() LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput) ToLoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersSrcPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersSrcPortRange {
		return vs[0].([]LoadbalancerFrontendRuleMatchersSrcPortRange)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersSrcPortRangeOutput)
}

type LoadbalancerFrontendRuleMatchersUrl struct {
	// Ignore case, default `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method string `pulumi:"method"`
	// String value.
	Value *string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersUrlInput is an input type that accepts LoadbalancerFrontendRuleMatchersUrlArgs and LoadbalancerFrontendRuleMatchersUrlOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersUrlInput` via:
//
//	LoadbalancerFrontendRuleMatchersUrlArgs{...}
type LoadbalancerFrontendRuleMatchersUrlInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersUrlOutput() LoadbalancerFrontendRuleMatchersUrlOutput
	ToLoadbalancerFrontendRuleMatchersUrlOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersUrlOutput
}

type LoadbalancerFrontendRuleMatchersUrlArgs struct {
	// Ignore case, default `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method pulumi.StringInput `pulumi:"method"`
	// String value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrl)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersUrlArgs) ToLoadbalancerFrontendRuleMatchersUrlOutput() LoadbalancerFrontendRuleMatchersUrlOutput {
	return i.ToLoadbalancerFrontendRuleMatchersUrlOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersUrlArgs) ToLoadbalancerFrontendRuleMatchersUrlOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersUrlOutput)
}

// LoadbalancerFrontendRuleMatchersUrlArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersUrlArray and LoadbalancerFrontendRuleMatchersUrlArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersUrlArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersUrlArray{ LoadbalancerFrontendRuleMatchersUrlArgs{...} }
type LoadbalancerFrontendRuleMatchersUrlArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersUrlArrayOutput() LoadbalancerFrontendRuleMatchersUrlArrayOutput
	ToLoadbalancerFrontendRuleMatchersUrlArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersUrlArrayOutput
}

type LoadbalancerFrontendRuleMatchersUrlArray []LoadbalancerFrontendRuleMatchersUrlInput

func (LoadbalancerFrontendRuleMatchersUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersUrl)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersUrlArray) ToLoadbalancerFrontendRuleMatchersUrlArrayOutput() LoadbalancerFrontendRuleMatchersUrlArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersUrlArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersUrlArray) ToLoadbalancerFrontendRuleMatchersUrlArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersUrlArrayOutput)
}

type LoadbalancerFrontendRuleMatchersUrlOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrl)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersUrlOutput) ToLoadbalancerFrontendRuleMatchersUrlOutput() LoadbalancerFrontendRuleMatchersUrlOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlOutput) ToLoadbalancerFrontendRuleMatchersUrlOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlOutput {
	return o
}

// Ignore case, default `false`.
func (o LoadbalancerFrontendRuleMatchersUrlOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrl) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersUrlOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrl) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
func (o LoadbalancerFrontendRuleMatchersUrlOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrl) string { return v.Method }).(pulumi.StringOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersUrlOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrl) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleMatchersUrlArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersUrl)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersUrlArrayOutput) ToLoadbalancerFrontendRuleMatchersUrlArrayOutput() LoadbalancerFrontendRuleMatchersUrlArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlArrayOutput) ToLoadbalancerFrontendRuleMatchersUrlArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersUrl {
		return vs[0].([]LoadbalancerFrontendRuleMatchersUrl)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersUrlOutput)
}

type LoadbalancerFrontendRuleMatchersUrlParam struct {
	// Ignore case, default `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method string `pulumi:"method"`
	// Name of the argument.
	Name string `pulumi:"name"`
	// String value.
	Value *string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersUrlParamInput is an input type that accepts LoadbalancerFrontendRuleMatchersUrlParamArgs and LoadbalancerFrontendRuleMatchersUrlParamOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersUrlParamInput` via:
//
//	LoadbalancerFrontendRuleMatchersUrlParamArgs{...}
type LoadbalancerFrontendRuleMatchersUrlParamInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersUrlParamOutput() LoadbalancerFrontendRuleMatchersUrlParamOutput
	ToLoadbalancerFrontendRuleMatchersUrlParamOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersUrlParamOutput
}

type LoadbalancerFrontendRuleMatchersUrlParamArgs struct {
	// Ignore case, default `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method pulumi.StringInput `pulumi:"method"`
	// Name of the argument.
	Name pulumi.StringInput `pulumi:"name"`
	// String value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersUrlParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlParam)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersUrlParamArgs) ToLoadbalancerFrontendRuleMatchersUrlParamOutput() LoadbalancerFrontendRuleMatchersUrlParamOutput {
	return i.ToLoadbalancerFrontendRuleMatchersUrlParamOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersUrlParamArgs) ToLoadbalancerFrontendRuleMatchersUrlParamOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersUrlParamOutput)
}

// LoadbalancerFrontendRuleMatchersUrlParamArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersUrlParamArray and LoadbalancerFrontendRuleMatchersUrlParamArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersUrlParamArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersUrlParamArray{ LoadbalancerFrontendRuleMatchersUrlParamArgs{...} }
type LoadbalancerFrontendRuleMatchersUrlParamArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutput() LoadbalancerFrontendRuleMatchersUrlParamArrayOutput
	ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersUrlParamArrayOutput
}

type LoadbalancerFrontendRuleMatchersUrlParamArray []LoadbalancerFrontendRuleMatchersUrlParamInput

func (LoadbalancerFrontendRuleMatchersUrlParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersUrlParam)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersUrlParamArray) ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutput() LoadbalancerFrontendRuleMatchersUrlParamArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersUrlParamArray) ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersUrlParamArrayOutput)
}

type LoadbalancerFrontendRuleMatchersUrlParamOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersUrlParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlParam)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) ToLoadbalancerFrontendRuleMatchersUrlParamOutput() LoadbalancerFrontendRuleMatchersUrlParamOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) ToLoadbalancerFrontendRuleMatchersUrlParamOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlParamOutput {
	return o
}

// Ignore case, default `false`.
func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlParam) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlParam) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlParam) string { return v.Method }).(pulumi.StringOutput)
}

// Name of the argument.
func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlParam) string { return v.Name }).(pulumi.StringOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersUrlParamOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlParam) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleMatchersUrlParamArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersUrlParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersUrlParam)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersUrlParamArrayOutput) ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutput() LoadbalancerFrontendRuleMatchersUrlParamArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlParamArrayOutput) ToLoadbalancerFrontendRuleMatchersUrlParamArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlParamArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlParamArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersUrlParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersUrlParam {
		return vs[0].([]LoadbalancerFrontendRuleMatchersUrlParam)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersUrlParamOutput)
}

type LoadbalancerFrontendRuleMatchersUrlQuery struct {
	// Ignore case, default `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse *bool `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method string `pulumi:"method"`
	// String value.
	Value *string `pulumi:"value"`
}

// LoadbalancerFrontendRuleMatchersUrlQueryInput is an input type that accepts LoadbalancerFrontendRuleMatchersUrlQueryArgs and LoadbalancerFrontendRuleMatchersUrlQueryOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersUrlQueryInput` via:
//
//	LoadbalancerFrontendRuleMatchersUrlQueryArgs{...}
type LoadbalancerFrontendRuleMatchersUrlQueryInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersUrlQueryOutput() LoadbalancerFrontendRuleMatchersUrlQueryOutput
	ToLoadbalancerFrontendRuleMatchersUrlQueryOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersUrlQueryOutput
}

type LoadbalancerFrontendRuleMatchersUrlQueryArgs struct {
	// Ignore case, default `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Sets if the condition should be inverted. Works similar to logical NOT operator.
	Inverse pulumi.BoolPtrInput `pulumi:"inverse"`
	// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
	Method pulumi.StringInput `pulumi:"method"`
	// String value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (LoadbalancerFrontendRuleMatchersUrlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlQuery)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersUrlQueryArgs) ToLoadbalancerFrontendRuleMatchersUrlQueryOutput() LoadbalancerFrontendRuleMatchersUrlQueryOutput {
	return i.ToLoadbalancerFrontendRuleMatchersUrlQueryOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersUrlQueryArgs) ToLoadbalancerFrontendRuleMatchersUrlQueryOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersUrlQueryOutput)
}

// LoadbalancerFrontendRuleMatchersUrlQueryArrayInput is an input type that accepts LoadbalancerFrontendRuleMatchersUrlQueryArray and LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendRuleMatchersUrlQueryArrayInput` via:
//
//	LoadbalancerFrontendRuleMatchersUrlQueryArray{ LoadbalancerFrontendRuleMatchersUrlQueryArgs{...} }
type LoadbalancerFrontendRuleMatchersUrlQueryArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutput() LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput
	ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutputWithContext(context.Context) LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput
}

type LoadbalancerFrontendRuleMatchersUrlQueryArray []LoadbalancerFrontendRuleMatchersUrlQueryInput

func (LoadbalancerFrontendRuleMatchersUrlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersUrlQuery)(nil)).Elem()
}

func (i LoadbalancerFrontendRuleMatchersUrlQueryArray) ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutput() LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput {
	return i.ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendRuleMatchersUrlQueryArray) ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput)
}

type LoadbalancerFrontendRuleMatchersUrlQueryOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersUrlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlQuery)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersUrlQueryOutput) ToLoadbalancerFrontendRuleMatchersUrlQueryOutput() LoadbalancerFrontendRuleMatchersUrlQueryOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlQueryOutput) ToLoadbalancerFrontendRuleMatchersUrlQueryOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlQueryOutput {
	return o
}

// Ignore case, default `false`.
func (o LoadbalancerFrontendRuleMatchersUrlQueryOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlQuery) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Sets if the condition should be inverted. Works similar to logical NOT operator.
func (o LoadbalancerFrontendRuleMatchersUrlQueryOutput) Inverse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlQuery) *bool { return v.Inverse }).(pulumi.BoolPtrOutput)
}

// Match method (`exact`, `substring`, `regexp`, `starts`, `ends`, `domain`, `ip`, `exists`). Matcher with `exists` and `ip` methods must be used without `value` and `ignoreCase` fields.
func (o LoadbalancerFrontendRuleMatchersUrlQueryOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlQuery) string { return v.Method }).(pulumi.StringOutput)
}

// String value.
func (o LoadbalancerFrontendRuleMatchersUrlQueryOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendRuleMatchersUrlQuery) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendRuleMatchersUrlQuery)(nil)).Elem()
}

func (o LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput) ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutput() LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput) ToLoadbalancerFrontendRuleMatchersUrlQueryArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput {
	return o
}

func (o LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendRuleMatchersUrlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendRuleMatchersUrlQuery {
		return vs[0].([]LoadbalancerFrontendRuleMatchersUrlQuery)[vs[1].(int)]
	}).(LoadbalancerFrontendRuleMatchersUrlQueryOutput)
}

type LoadbalancerNetwork struct {
	// DNS name of the load balancer network
	DnsName *string `pulumi:"dnsName"`
	// Network family. Currently only `IPv4` is supported.
	Family string `pulumi:"family"`
	// Network identifier.
	Id *string `pulumi:"id"`
	// The name of the network must be unique within the service.
	Name string `pulumi:"name"`
	// Private network UUID. Required for private networks and must reside in loadbalancer zone. For public network the field should be omitted.
	Network *string `pulumi:"network"`
	// The type of the network. Only one public network can be attached and at least one private network must be attached.
	Type string `pulumi:"type"`
}

// LoadbalancerNetworkInput is an input type that accepts LoadbalancerNetworkArgs and LoadbalancerNetworkOutput values.
// You can construct a concrete instance of `LoadbalancerNetworkInput` via:
//
//	LoadbalancerNetworkArgs{...}
type LoadbalancerNetworkInput interface {
	pulumi.Input

	ToLoadbalancerNetworkOutput() LoadbalancerNetworkOutput
	ToLoadbalancerNetworkOutputWithContext(context.Context) LoadbalancerNetworkOutput
}

type LoadbalancerNetworkArgs struct {
	// DNS name of the load balancer network
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// Network family. Currently only `IPv4` is supported.
	Family pulumi.StringInput `pulumi:"family"`
	// Network identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the network must be unique within the service.
	Name pulumi.StringInput `pulumi:"name"`
	// Private network UUID. Required for private networks and must reside in loadbalancer zone. For public network the field should be omitted.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// The type of the network. Only one public network can be attached and at least one private network must be attached.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadbalancerNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNetwork)(nil)).Elem()
}

func (i LoadbalancerNetworkArgs) ToLoadbalancerNetworkOutput() LoadbalancerNetworkOutput {
	return i.ToLoadbalancerNetworkOutputWithContext(context.Background())
}

func (i LoadbalancerNetworkArgs) ToLoadbalancerNetworkOutputWithContext(ctx context.Context) LoadbalancerNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNetworkOutput)
}

// LoadbalancerNetworkArrayInput is an input type that accepts LoadbalancerNetworkArray and LoadbalancerNetworkArrayOutput values.
// You can construct a concrete instance of `LoadbalancerNetworkArrayInput` via:
//
//	LoadbalancerNetworkArray{ LoadbalancerNetworkArgs{...} }
type LoadbalancerNetworkArrayInput interface {
	pulumi.Input

	ToLoadbalancerNetworkArrayOutput() LoadbalancerNetworkArrayOutput
	ToLoadbalancerNetworkArrayOutputWithContext(context.Context) LoadbalancerNetworkArrayOutput
}

type LoadbalancerNetworkArray []LoadbalancerNetworkInput

func (LoadbalancerNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNetwork)(nil)).Elem()
}

func (i LoadbalancerNetworkArray) ToLoadbalancerNetworkArrayOutput() LoadbalancerNetworkArrayOutput {
	return i.ToLoadbalancerNetworkArrayOutputWithContext(context.Background())
}

func (i LoadbalancerNetworkArray) ToLoadbalancerNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNetworkArrayOutput)
}

type LoadbalancerNetworkOutput struct{ *pulumi.OutputState }

func (LoadbalancerNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNetwork)(nil)).Elem()
}

func (o LoadbalancerNetworkOutput) ToLoadbalancerNetworkOutput() LoadbalancerNetworkOutput {
	return o
}

func (o LoadbalancerNetworkOutput) ToLoadbalancerNetworkOutputWithContext(ctx context.Context) LoadbalancerNetworkOutput {
	return o
}

// DNS name of the load balancer network
func (o LoadbalancerNetworkOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNetwork) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// Network family. Currently only `IPv4` is supported.
func (o LoadbalancerNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// Network identifier.
func (o LoadbalancerNetworkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNetwork) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the network must be unique within the service.
func (o LoadbalancerNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Private network UUID. Required for private networks and must reside in loadbalancer zone. For public network the field should be omitted.
func (o LoadbalancerNetworkOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNetwork) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// The type of the network. Only one public network can be attached and at least one private network must be attached.
func (o LoadbalancerNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerNetwork) string { return v.Type }).(pulumi.StringOutput)
}

type LoadbalancerNetworkArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNetwork)(nil)).Elem()
}

func (o LoadbalancerNetworkArrayOutput) ToLoadbalancerNetworkArrayOutput() LoadbalancerNetworkArrayOutput {
	return o
}

func (o LoadbalancerNetworkArrayOutput) ToLoadbalancerNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerNetworkArrayOutput {
	return o
}

func (o LoadbalancerNetworkArrayOutput) Index(i pulumi.IntInput) LoadbalancerNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerNetwork {
		return vs[0].([]LoadbalancerNetwork)[vs[1].(int)]
	}).(LoadbalancerNetworkOutput)
}

type LoadbalancerNode struct {
	Networks []LoadbalancerNodeNetwork `pulumi:"networks"`
	// Node's operational state. Managed by the system.
	OperationalState *string `pulumi:"operationalState"`
}

// LoadbalancerNodeInput is an input type that accepts LoadbalancerNodeArgs and LoadbalancerNodeOutput values.
// You can construct a concrete instance of `LoadbalancerNodeInput` via:
//
//	LoadbalancerNodeArgs{...}
type LoadbalancerNodeInput interface {
	pulumi.Input

	ToLoadbalancerNodeOutput() LoadbalancerNodeOutput
	ToLoadbalancerNodeOutputWithContext(context.Context) LoadbalancerNodeOutput
}

type LoadbalancerNodeArgs struct {
	Networks LoadbalancerNodeNetworkArrayInput `pulumi:"networks"`
	// Node's operational state. Managed by the system.
	OperationalState pulumi.StringPtrInput `pulumi:"operationalState"`
}

func (LoadbalancerNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNode)(nil)).Elem()
}

func (i LoadbalancerNodeArgs) ToLoadbalancerNodeOutput() LoadbalancerNodeOutput {
	return i.ToLoadbalancerNodeOutputWithContext(context.Background())
}

func (i LoadbalancerNodeArgs) ToLoadbalancerNodeOutputWithContext(ctx context.Context) LoadbalancerNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNodeOutput)
}

// LoadbalancerNodeArrayInput is an input type that accepts LoadbalancerNodeArray and LoadbalancerNodeArrayOutput values.
// You can construct a concrete instance of `LoadbalancerNodeArrayInput` via:
//
//	LoadbalancerNodeArray{ LoadbalancerNodeArgs{...} }
type LoadbalancerNodeArrayInput interface {
	pulumi.Input

	ToLoadbalancerNodeArrayOutput() LoadbalancerNodeArrayOutput
	ToLoadbalancerNodeArrayOutputWithContext(context.Context) LoadbalancerNodeArrayOutput
}

type LoadbalancerNodeArray []LoadbalancerNodeInput

func (LoadbalancerNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNode)(nil)).Elem()
}

func (i LoadbalancerNodeArray) ToLoadbalancerNodeArrayOutput() LoadbalancerNodeArrayOutput {
	return i.ToLoadbalancerNodeArrayOutputWithContext(context.Background())
}

func (i LoadbalancerNodeArray) ToLoadbalancerNodeArrayOutputWithContext(ctx context.Context) LoadbalancerNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNodeArrayOutput)
}

type LoadbalancerNodeOutput struct{ *pulumi.OutputState }

func (LoadbalancerNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNode)(nil)).Elem()
}

func (o LoadbalancerNodeOutput) ToLoadbalancerNodeOutput() LoadbalancerNodeOutput {
	return o
}

func (o LoadbalancerNodeOutput) ToLoadbalancerNodeOutputWithContext(ctx context.Context) LoadbalancerNodeOutput {
	return o
}

func (o LoadbalancerNodeOutput) Networks() LoadbalancerNodeNetworkArrayOutput {
	return o.ApplyT(func(v LoadbalancerNode) []LoadbalancerNodeNetwork { return v.Networks }).(LoadbalancerNodeNetworkArrayOutput)
}

// Node's operational state. Managed by the system.
func (o LoadbalancerNodeOutput) OperationalState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNode) *string { return v.OperationalState }).(pulumi.StringPtrOutput)
}

type LoadbalancerNodeArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNode)(nil)).Elem()
}

func (o LoadbalancerNodeArrayOutput) ToLoadbalancerNodeArrayOutput() LoadbalancerNodeArrayOutput {
	return o
}

func (o LoadbalancerNodeArrayOutput) ToLoadbalancerNodeArrayOutputWithContext(ctx context.Context) LoadbalancerNodeArrayOutput {
	return o
}

func (o LoadbalancerNodeArrayOutput) Index(i pulumi.IntInput) LoadbalancerNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerNode {
		return vs[0].([]LoadbalancerNode)[vs[1].(int)]
	}).(LoadbalancerNodeOutput)
}

type LoadbalancerNodeNetwork struct {
	IpAddresses []LoadbalancerNodeNetworkIpAddress `pulumi:"ipAddresses"`
	// The name of the network.
	Name *string `pulumi:"name"`
	// The type of the network.
	Type *string `pulumi:"type"`
}

// LoadbalancerNodeNetworkInput is an input type that accepts LoadbalancerNodeNetworkArgs and LoadbalancerNodeNetworkOutput values.
// You can construct a concrete instance of `LoadbalancerNodeNetworkInput` via:
//
//	LoadbalancerNodeNetworkArgs{...}
type LoadbalancerNodeNetworkInput interface {
	pulumi.Input

	ToLoadbalancerNodeNetworkOutput() LoadbalancerNodeNetworkOutput
	ToLoadbalancerNodeNetworkOutputWithContext(context.Context) LoadbalancerNodeNetworkOutput
}

type LoadbalancerNodeNetworkArgs struct {
	IpAddresses LoadbalancerNodeNetworkIpAddressArrayInput `pulumi:"ipAddresses"`
	// The name of the network.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the network.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LoadbalancerNodeNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNodeNetwork)(nil)).Elem()
}

func (i LoadbalancerNodeNetworkArgs) ToLoadbalancerNodeNetworkOutput() LoadbalancerNodeNetworkOutput {
	return i.ToLoadbalancerNodeNetworkOutputWithContext(context.Background())
}

func (i LoadbalancerNodeNetworkArgs) ToLoadbalancerNodeNetworkOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNodeNetworkOutput)
}

// LoadbalancerNodeNetworkArrayInput is an input type that accepts LoadbalancerNodeNetworkArray and LoadbalancerNodeNetworkArrayOutput values.
// You can construct a concrete instance of `LoadbalancerNodeNetworkArrayInput` via:
//
//	LoadbalancerNodeNetworkArray{ LoadbalancerNodeNetworkArgs{...} }
type LoadbalancerNodeNetworkArrayInput interface {
	pulumi.Input

	ToLoadbalancerNodeNetworkArrayOutput() LoadbalancerNodeNetworkArrayOutput
	ToLoadbalancerNodeNetworkArrayOutputWithContext(context.Context) LoadbalancerNodeNetworkArrayOutput
}

type LoadbalancerNodeNetworkArray []LoadbalancerNodeNetworkInput

func (LoadbalancerNodeNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNodeNetwork)(nil)).Elem()
}

func (i LoadbalancerNodeNetworkArray) ToLoadbalancerNodeNetworkArrayOutput() LoadbalancerNodeNetworkArrayOutput {
	return i.ToLoadbalancerNodeNetworkArrayOutputWithContext(context.Background())
}

func (i LoadbalancerNodeNetworkArray) ToLoadbalancerNodeNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNodeNetworkArrayOutput)
}

type LoadbalancerNodeNetworkOutput struct{ *pulumi.OutputState }

func (LoadbalancerNodeNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNodeNetwork)(nil)).Elem()
}

func (o LoadbalancerNodeNetworkOutput) ToLoadbalancerNodeNetworkOutput() LoadbalancerNodeNetworkOutput {
	return o
}

func (o LoadbalancerNodeNetworkOutput) ToLoadbalancerNodeNetworkOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkOutput {
	return o
}

func (o LoadbalancerNodeNetworkOutput) IpAddresses() LoadbalancerNodeNetworkIpAddressArrayOutput {
	return o.ApplyT(func(v LoadbalancerNodeNetwork) []LoadbalancerNodeNetworkIpAddress { return v.IpAddresses }).(LoadbalancerNodeNetworkIpAddressArrayOutput)
}

// The name of the network.
func (o LoadbalancerNodeNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNodeNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the network.
func (o LoadbalancerNodeNetworkOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNodeNetwork) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LoadbalancerNodeNetworkArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerNodeNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNodeNetwork)(nil)).Elem()
}

func (o LoadbalancerNodeNetworkArrayOutput) ToLoadbalancerNodeNetworkArrayOutput() LoadbalancerNodeNetworkArrayOutput {
	return o
}

func (o LoadbalancerNodeNetworkArrayOutput) ToLoadbalancerNodeNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkArrayOutput {
	return o
}

func (o LoadbalancerNodeNetworkArrayOutput) Index(i pulumi.IntInput) LoadbalancerNodeNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerNodeNetwork {
		return vs[0].([]LoadbalancerNodeNetwork)[vs[1].(int)]
	}).(LoadbalancerNodeNetworkOutput)
}

type LoadbalancerNodeNetworkIpAddress struct {
	// Node's IP address.
	Address *string `pulumi:"address"`
	// Does IP address listen network connections.
	Listen *bool `pulumi:"listen"`
}

// LoadbalancerNodeNetworkIpAddressInput is an input type that accepts LoadbalancerNodeNetworkIpAddressArgs and LoadbalancerNodeNetworkIpAddressOutput values.
// You can construct a concrete instance of `LoadbalancerNodeNetworkIpAddressInput` via:
//
//	LoadbalancerNodeNetworkIpAddressArgs{...}
type LoadbalancerNodeNetworkIpAddressInput interface {
	pulumi.Input

	ToLoadbalancerNodeNetworkIpAddressOutput() LoadbalancerNodeNetworkIpAddressOutput
	ToLoadbalancerNodeNetworkIpAddressOutputWithContext(context.Context) LoadbalancerNodeNetworkIpAddressOutput
}

type LoadbalancerNodeNetworkIpAddressArgs struct {
	// Node's IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Does IP address listen network connections.
	Listen pulumi.BoolPtrInput `pulumi:"listen"`
}

func (LoadbalancerNodeNetworkIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNodeNetworkIpAddress)(nil)).Elem()
}

func (i LoadbalancerNodeNetworkIpAddressArgs) ToLoadbalancerNodeNetworkIpAddressOutput() LoadbalancerNodeNetworkIpAddressOutput {
	return i.ToLoadbalancerNodeNetworkIpAddressOutputWithContext(context.Background())
}

func (i LoadbalancerNodeNetworkIpAddressArgs) ToLoadbalancerNodeNetworkIpAddressOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNodeNetworkIpAddressOutput)
}

// LoadbalancerNodeNetworkIpAddressArrayInput is an input type that accepts LoadbalancerNodeNetworkIpAddressArray and LoadbalancerNodeNetworkIpAddressArrayOutput values.
// You can construct a concrete instance of `LoadbalancerNodeNetworkIpAddressArrayInput` via:
//
//	LoadbalancerNodeNetworkIpAddressArray{ LoadbalancerNodeNetworkIpAddressArgs{...} }
type LoadbalancerNodeNetworkIpAddressArrayInput interface {
	pulumi.Input

	ToLoadbalancerNodeNetworkIpAddressArrayOutput() LoadbalancerNodeNetworkIpAddressArrayOutput
	ToLoadbalancerNodeNetworkIpAddressArrayOutputWithContext(context.Context) LoadbalancerNodeNetworkIpAddressArrayOutput
}

type LoadbalancerNodeNetworkIpAddressArray []LoadbalancerNodeNetworkIpAddressInput

func (LoadbalancerNodeNetworkIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNodeNetworkIpAddress)(nil)).Elem()
}

func (i LoadbalancerNodeNetworkIpAddressArray) ToLoadbalancerNodeNetworkIpAddressArrayOutput() LoadbalancerNodeNetworkIpAddressArrayOutput {
	return i.ToLoadbalancerNodeNetworkIpAddressArrayOutputWithContext(context.Background())
}

func (i LoadbalancerNodeNetworkIpAddressArray) ToLoadbalancerNodeNetworkIpAddressArrayOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerNodeNetworkIpAddressArrayOutput)
}

type LoadbalancerNodeNetworkIpAddressOutput struct{ *pulumi.OutputState }

func (LoadbalancerNodeNetworkIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerNodeNetworkIpAddress)(nil)).Elem()
}

func (o LoadbalancerNodeNetworkIpAddressOutput) ToLoadbalancerNodeNetworkIpAddressOutput() LoadbalancerNodeNetworkIpAddressOutput {
	return o
}

func (o LoadbalancerNodeNetworkIpAddressOutput) ToLoadbalancerNodeNetworkIpAddressOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkIpAddressOutput {
	return o
}

// Node's IP address.
func (o LoadbalancerNodeNetworkIpAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerNodeNetworkIpAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Does IP address listen network connections.
func (o LoadbalancerNodeNetworkIpAddressOutput) Listen() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerNodeNetworkIpAddress) *bool { return v.Listen }).(pulumi.BoolPtrOutput)
}

type LoadbalancerNodeNetworkIpAddressArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerNodeNetworkIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerNodeNetworkIpAddress)(nil)).Elem()
}

func (o LoadbalancerNodeNetworkIpAddressArrayOutput) ToLoadbalancerNodeNetworkIpAddressArrayOutput() LoadbalancerNodeNetworkIpAddressArrayOutput {
	return o
}

func (o LoadbalancerNodeNetworkIpAddressArrayOutput) ToLoadbalancerNodeNetworkIpAddressArrayOutputWithContext(ctx context.Context) LoadbalancerNodeNetworkIpAddressArrayOutput {
	return o
}

func (o LoadbalancerNodeNetworkIpAddressArrayOutput) Index(i pulumi.IntInput) LoadbalancerNodeNetworkIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerNodeNetworkIpAddress {
		return vs[0].([]LoadbalancerNodeNetworkIpAddress)[vs[1].(int)]
	}).(LoadbalancerNodeNetworkIpAddressOutput)
}

type ManagedDatabaseMysqlComponent struct {
	// Type of the component
	Component *string `pulumi:"component"`
	// Hostname of the component
	Host *string `pulumi:"host"`
	// Port number of the component
	Port *int `pulumi:"port"`
	// Component network route type
	Route *string `pulumi:"route"`
	// Usage of the component
	Usage *string `pulumi:"usage"`
}

// ManagedDatabaseMysqlComponentInput is an input type that accepts ManagedDatabaseMysqlComponentArgs and ManagedDatabaseMysqlComponentOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlComponentInput` via:
//
//	ManagedDatabaseMysqlComponentArgs{...}
type ManagedDatabaseMysqlComponentInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlComponentOutput() ManagedDatabaseMysqlComponentOutput
	ToManagedDatabaseMysqlComponentOutputWithContext(context.Context) ManagedDatabaseMysqlComponentOutput
}

type ManagedDatabaseMysqlComponentArgs struct {
	// Type of the component
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Hostname of the component
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Port number of the component
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Component network route type
	Route pulumi.StringPtrInput `pulumi:"route"`
	// Usage of the component
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (ManagedDatabaseMysqlComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlComponent)(nil)).Elem()
}

func (i ManagedDatabaseMysqlComponentArgs) ToManagedDatabaseMysqlComponentOutput() ManagedDatabaseMysqlComponentOutput {
	return i.ToManagedDatabaseMysqlComponentOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlComponentArgs) ToManagedDatabaseMysqlComponentOutputWithContext(ctx context.Context) ManagedDatabaseMysqlComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlComponentOutput)
}

// ManagedDatabaseMysqlComponentArrayInput is an input type that accepts ManagedDatabaseMysqlComponentArray and ManagedDatabaseMysqlComponentArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlComponentArrayInput` via:
//
//	ManagedDatabaseMysqlComponentArray{ ManagedDatabaseMysqlComponentArgs{...} }
type ManagedDatabaseMysqlComponentArrayInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlComponentArrayOutput() ManagedDatabaseMysqlComponentArrayOutput
	ToManagedDatabaseMysqlComponentArrayOutputWithContext(context.Context) ManagedDatabaseMysqlComponentArrayOutput
}

type ManagedDatabaseMysqlComponentArray []ManagedDatabaseMysqlComponentInput

func (ManagedDatabaseMysqlComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseMysqlComponent)(nil)).Elem()
}

func (i ManagedDatabaseMysqlComponentArray) ToManagedDatabaseMysqlComponentArrayOutput() ManagedDatabaseMysqlComponentArrayOutput {
	return i.ToManagedDatabaseMysqlComponentArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlComponentArray) ToManagedDatabaseMysqlComponentArrayOutputWithContext(ctx context.Context) ManagedDatabaseMysqlComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlComponentArrayOutput)
}

type ManagedDatabaseMysqlComponentOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlComponent)(nil)).Elem()
}

func (o ManagedDatabaseMysqlComponentOutput) ToManagedDatabaseMysqlComponentOutput() ManagedDatabaseMysqlComponentOutput {
	return o
}

func (o ManagedDatabaseMysqlComponentOutput) ToManagedDatabaseMysqlComponentOutputWithContext(ctx context.Context) ManagedDatabaseMysqlComponentOutput {
	return o
}

// Type of the component
func (o ManagedDatabaseMysqlComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Hostname of the component
func (o ManagedDatabaseMysqlComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Port number of the component
func (o ManagedDatabaseMysqlComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Component network route type
func (o ManagedDatabaseMysqlComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// Usage of the component
func (o ManagedDatabaseMysqlComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseMysqlComponentArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseMysqlComponent)(nil)).Elem()
}

func (o ManagedDatabaseMysqlComponentArrayOutput) ToManagedDatabaseMysqlComponentArrayOutput() ManagedDatabaseMysqlComponentArrayOutput {
	return o
}

func (o ManagedDatabaseMysqlComponentArrayOutput) ToManagedDatabaseMysqlComponentArrayOutputWithContext(ctx context.Context) ManagedDatabaseMysqlComponentArrayOutput {
	return o
}

func (o ManagedDatabaseMysqlComponentArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseMysqlComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseMysqlComponent {
		return vs[0].([]ManagedDatabaseMysqlComponent)[vs[1].(int)]
	}).(ManagedDatabaseMysqlComponentOutput)
}

type ManagedDatabaseMysqlNetwork struct {
	// Network family. Currently only `IPv4` is supported.
	Family string `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name string `pulumi:"name"`
	// The type of the network. Must be private.
	Type string `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid string `pulumi:"uuid"`
}

// ManagedDatabaseMysqlNetworkInput is an input type that accepts ManagedDatabaseMysqlNetworkArgs and ManagedDatabaseMysqlNetworkOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlNetworkInput` via:
//
//	ManagedDatabaseMysqlNetworkArgs{...}
type ManagedDatabaseMysqlNetworkInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlNetworkOutput() ManagedDatabaseMysqlNetworkOutput
	ToManagedDatabaseMysqlNetworkOutputWithContext(context.Context) ManagedDatabaseMysqlNetworkOutput
}

type ManagedDatabaseMysqlNetworkArgs struct {
	// Network family. Currently only `IPv4` is supported.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the network. Must be private.
	Type pulumi.StringInput `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ManagedDatabaseMysqlNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlNetwork)(nil)).Elem()
}

func (i ManagedDatabaseMysqlNetworkArgs) ToManagedDatabaseMysqlNetworkOutput() ManagedDatabaseMysqlNetworkOutput {
	return i.ToManagedDatabaseMysqlNetworkOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlNetworkArgs) ToManagedDatabaseMysqlNetworkOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlNetworkOutput)
}

// ManagedDatabaseMysqlNetworkArrayInput is an input type that accepts ManagedDatabaseMysqlNetworkArray and ManagedDatabaseMysqlNetworkArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlNetworkArrayInput` via:
//
//	ManagedDatabaseMysqlNetworkArray{ ManagedDatabaseMysqlNetworkArgs{...} }
type ManagedDatabaseMysqlNetworkArrayInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlNetworkArrayOutput() ManagedDatabaseMysqlNetworkArrayOutput
	ToManagedDatabaseMysqlNetworkArrayOutputWithContext(context.Context) ManagedDatabaseMysqlNetworkArrayOutput
}

type ManagedDatabaseMysqlNetworkArray []ManagedDatabaseMysqlNetworkInput

func (ManagedDatabaseMysqlNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseMysqlNetwork)(nil)).Elem()
}

func (i ManagedDatabaseMysqlNetworkArray) ToManagedDatabaseMysqlNetworkArrayOutput() ManagedDatabaseMysqlNetworkArrayOutput {
	return i.ToManagedDatabaseMysqlNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlNetworkArray) ToManagedDatabaseMysqlNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlNetworkArrayOutput)
}

type ManagedDatabaseMysqlNetworkOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlNetwork)(nil)).Elem()
}

func (o ManagedDatabaseMysqlNetworkOutput) ToManagedDatabaseMysqlNetworkOutput() ManagedDatabaseMysqlNetworkOutput {
	return o
}

func (o ManagedDatabaseMysqlNetworkOutput) ToManagedDatabaseMysqlNetworkOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNetworkOutput {
	return o
}

// Network family. Currently only `IPv4` is supported.
func (o ManagedDatabaseMysqlNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// The name of the network. Must be unique within the service.
func (o ManagedDatabaseMysqlNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the network. Must be private.
func (o ManagedDatabaseMysqlNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// Private network UUID. Must reside in the same zone as the database.
func (o ManagedDatabaseMysqlNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type ManagedDatabaseMysqlNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseMysqlNetwork)(nil)).Elem()
}

func (o ManagedDatabaseMysqlNetworkArrayOutput) ToManagedDatabaseMysqlNetworkArrayOutput() ManagedDatabaseMysqlNetworkArrayOutput {
	return o
}

func (o ManagedDatabaseMysqlNetworkArrayOutput) ToManagedDatabaseMysqlNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNetworkArrayOutput {
	return o
}

func (o ManagedDatabaseMysqlNetworkArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseMysqlNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseMysqlNetwork {
		return vs[0].([]ManagedDatabaseMysqlNetwork)[vs[1].(int)]
	}).(ManagedDatabaseMysqlNetworkOutput)
}

type ManagedDatabaseMysqlNodeState struct {
	// Name plus a node iteration
	Name *string `pulumi:"name"`
	// Role of the node
	Role *string `pulumi:"role"`
	// State of the node
	State *string `pulumi:"state"`
}

// ManagedDatabaseMysqlNodeStateInput is an input type that accepts ManagedDatabaseMysqlNodeStateArgs and ManagedDatabaseMysqlNodeStateOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlNodeStateInput` via:
//
//	ManagedDatabaseMysqlNodeStateArgs{...}
type ManagedDatabaseMysqlNodeStateInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlNodeStateOutput() ManagedDatabaseMysqlNodeStateOutput
	ToManagedDatabaseMysqlNodeStateOutputWithContext(context.Context) ManagedDatabaseMysqlNodeStateOutput
}

type ManagedDatabaseMysqlNodeStateArgs struct {
	// Name plus a node iteration
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Role of the node
	Role pulumi.StringPtrInput `pulumi:"role"`
	// State of the node
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedDatabaseMysqlNodeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlNodeState)(nil)).Elem()
}

func (i ManagedDatabaseMysqlNodeStateArgs) ToManagedDatabaseMysqlNodeStateOutput() ManagedDatabaseMysqlNodeStateOutput {
	return i.ToManagedDatabaseMysqlNodeStateOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlNodeStateArgs) ToManagedDatabaseMysqlNodeStateOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNodeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlNodeStateOutput)
}

// ManagedDatabaseMysqlNodeStateArrayInput is an input type that accepts ManagedDatabaseMysqlNodeStateArray and ManagedDatabaseMysqlNodeStateArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlNodeStateArrayInput` via:
//
//	ManagedDatabaseMysqlNodeStateArray{ ManagedDatabaseMysqlNodeStateArgs{...} }
type ManagedDatabaseMysqlNodeStateArrayInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlNodeStateArrayOutput() ManagedDatabaseMysqlNodeStateArrayOutput
	ToManagedDatabaseMysqlNodeStateArrayOutputWithContext(context.Context) ManagedDatabaseMysqlNodeStateArrayOutput
}

type ManagedDatabaseMysqlNodeStateArray []ManagedDatabaseMysqlNodeStateInput

func (ManagedDatabaseMysqlNodeStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseMysqlNodeState)(nil)).Elem()
}

func (i ManagedDatabaseMysqlNodeStateArray) ToManagedDatabaseMysqlNodeStateArrayOutput() ManagedDatabaseMysqlNodeStateArrayOutput {
	return i.ToManagedDatabaseMysqlNodeStateArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlNodeStateArray) ToManagedDatabaseMysqlNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNodeStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlNodeStateArrayOutput)
}

type ManagedDatabaseMysqlNodeStateOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlNodeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlNodeState)(nil)).Elem()
}

func (o ManagedDatabaseMysqlNodeStateOutput) ToManagedDatabaseMysqlNodeStateOutput() ManagedDatabaseMysqlNodeStateOutput {
	return o
}

func (o ManagedDatabaseMysqlNodeStateOutput) ToManagedDatabaseMysqlNodeStateOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNodeStateOutput {
	return o
}

// Name plus a node iteration
func (o ManagedDatabaseMysqlNodeStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNodeState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Role of the node
func (o ManagedDatabaseMysqlNodeStateOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNodeState) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// State of the node
func (o ManagedDatabaseMysqlNodeStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlNodeState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseMysqlNodeStateArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlNodeStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseMysqlNodeState)(nil)).Elem()
}

func (o ManagedDatabaseMysqlNodeStateArrayOutput) ToManagedDatabaseMysqlNodeStateArrayOutput() ManagedDatabaseMysqlNodeStateArrayOutput {
	return o
}

func (o ManagedDatabaseMysqlNodeStateArrayOutput) ToManagedDatabaseMysqlNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabaseMysqlNodeStateArrayOutput {
	return o
}

func (o ManagedDatabaseMysqlNodeStateArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseMysqlNodeStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseMysqlNodeState {
		return vs[0].([]ManagedDatabaseMysqlNodeState)[vs[1].(int)]
	}).(ManagedDatabaseMysqlNodeStateOutput)
}

type ManagedDatabaseMysqlProperties struct {
	// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
	AdminPassword *string `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a new service is being created.
	AdminUsername *string `pulumi:"adminUsername"`
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter *bool `pulumi:"automaticUtilityNetworkIpFilter"`
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupHour *int `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupMinute *int `pulumi:"backupMinute"`
	// The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
	BinlogRetentionPeriod *int `pulumi:"binlogRetentionPeriod"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	ConnectTimeout *int `pulumi:"connectTimeout"`
	// Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
	DefaultTimeZone *string `pulumi:"defaultTimeZone"`
	// The maximum permitted result length in bytes for the GROUP_CONCAT() function.
	GroupConcatMaxLen *int `pulumi:"groupConcatMaxLen"`
	// The time, in seconds, before cached statistics expire.
	InformationSchemaStatsExpiry *int `pulumi:"informationSchemaStatsExpiry"`
	// Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
	InnodbChangeBufferMaxSize *int `pulumi:"innodbChangeBufferMaxSize"`
	// Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
	InnodbFlushNeighbors *int `pulumi:"innodbFlushNeighbors"`
	// Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
	InnodbFtMinTokenSize *int `pulumi:"innodbFtMinTokenSize"`
	// This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
	InnodbFtServerStopwordTable *string `pulumi:"innodbFtServerStopwordTable"`
	// The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
	InnodbLockWaitTimeout *int `pulumi:"innodbLockWaitTimeout"`
	// The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
	InnodbLogBufferSize *int `pulumi:"innodbLogBufferSize"`
	// The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
	InnodbOnlineAlterLogMaxSize *int `pulumi:"innodbOnlineAlterLogMaxSize"`
	// When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
	InnodbPrintAllDeadlocks *bool `pulumi:"innodbPrintAllDeadlocks"`
	// The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
	InnodbReadIoThreads *int `pulumi:"innodbReadIoThreads"`
	// When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
	InnodbRollbackOnTimeout *bool `pulumi:"innodbRollbackOnTimeout"`
	// Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
	InnodbThreadConcurrency *int `pulumi:"innodbThreadConcurrency"`
	// The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
	InnodbWriteIoThreads *int `pulumi:"innodbWriteIoThreads"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	InteractiveTimeout *int `pulumi:"interactiveTimeout"`
	// The storage engine for in-memory internal temporary tables.
	InternalTmpMemStorageEngine *string `pulumi:"internalTmpMemStorageEngine"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters []string `pulumi:"ipFilters"`
	// The slowQueryLogs work as SQL statements that take more than longQueryTime seconds to execute. Default is 10s.
	LongQueryTime *float64 `pulumi:"longQueryTime"`
	// Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
	MaxAllowedPacket *int `pulumi:"maxAllowedPacket"`
	// Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
	MaxHeapTableSize *int `pulumi:"maxHeapTableSize"`
	// Migrate data from existing server.
	Migration *ManagedDatabaseMysqlPropertiesMigration `pulumi:"migration"`
	// Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
	NetBufferLength *int `pulumi:"netBufferLength"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	NetReadTimeout *int `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	NetWriteTimeout *int `pulumi:"netWriteTimeout"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess *bool `pulumi:"publicAccess"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog *bool `pulumi:"serviceLog"`
	// Slow query log enables capturing of slow queries. Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off.
	SlowQueryLog *bool `pulumi:"slowQueryLog"`
	// Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
	SortBufferSize *int `pulumi:"sortBufferSize"`
	// Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
	SqlMode *string `pulumi:"sqlMode"`
	// Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
	SqlRequirePrimaryKey *bool `pulumi:"sqlRequirePrimaryKey"`
	// Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
	TmpTableSize *int `pulumi:"tmpTableSize"`
	// MySQL major version.
	Version *string `pulumi:"version"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	WaitTimeout *int `pulumi:"waitTimeout"`
}

// ManagedDatabaseMysqlPropertiesInput is an input type that accepts ManagedDatabaseMysqlPropertiesArgs and ManagedDatabaseMysqlPropertiesOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlPropertiesInput` via:
//
//	ManagedDatabaseMysqlPropertiesArgs{...}
type ManagedDatabaseMysqlPropertiesInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlPropertiesOutput() ManagedDatabaseMysqlPropertiesOutput
	ToManagedDatabaseMysqlPropertiesOutputWithContext(context.Context) ManagedDatabaseMysqlPropertiesOutput
}

type ManagedDatabaseMysqlPropertiesArgs struct {
	// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a new service is being created.
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter pulumi.BoolPtrInput `pulumi:"automaticUtilityNetworkIpFilter"`
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupHour pulumi.IntPtrInput `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupMinute pulumi.IntPtrInput `pulumi:"backupMinute"`
	// The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
	BinlogRetentionPeriod pulumi.IntPtrInput `pulumi:"binlogRetentionPeriod"`
	// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
	ConnectTimeout pulumi.IntPtrInput `pulumi:"connectTimeout"`
	// Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
	DefaultTimeZone pulumi.StringPtrInput `pulumi:"defaultTimeZone"`
	// The maximum permitted result length in bytes for the GROUP_CONCAT() function.
	GroupConcatMaxLen pulumi.IntPtrInput `pulumi:"groupConcatMaxLen"`
	// The time, in seconds, before cached statistics expire.
	InformationSchemaStatsExpiry pulumi.IntPtrInput `pulumi:"informationSchemaStatsExpiry"`
	// Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
	InnodbChangeBufferMaxSize pulumi.IntPtrInput `pulumi:"innodbChangeBufferMaxSize"`
	// Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
	InnodbFlushNeighbors pulumi.IntPtrInput `pulumi:"innodbFlushNeighbors"`
	// Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
	InnodbFtMinTokenSize pulumi.IntPtrInput `pulumi:"innodbFtMinTokenSize"`
	// This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
	InnodbFtServerStopwordTable pulumi.StringPtrInput `pulumi:"innodbFtServerStopwordTable"`
	// The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
	InnodbLockWaitTimeout pulumi.IntPtrInput `pulumi:"innodbLockWaitTimeout"`
	// The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
	InnodbLogBufferSize pulumi.IntPtrInput `pulumi:"innodbLogBufferSize"`
	// The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
	InnodbOnlineAlterLogMaxSize pulumi.IntPtrInput `pulumi:"innodbOnlineAlterLogMaxSize"`
	// When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
	InnodbPrintAllDeadlocks pulumi.BoolPtrInput `pulumi:"innodbPrintAllDeadlocks"`
	// The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
	InnodbReadIoThreads pulumi.IntPtrInput `pulumi:"innodbReadIoThreads"`
	// When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
	InnodbRollbackOnTimeout pulumi.BoolPtrInput `pulumi:"innodbRollbackOnTimeout"`
	// Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
	InnodbThreadConcurrency pulumi.IntPtrInput `pulumi:"innodbThreadConcurrency"`
	// The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
	InnodbWriteIoThreads pulumi.IntPtrInput `pulumi:"innodbWriteIoThreads"`
	// The number of seconds the server waits for activity on an interactive connection before closing it.
	InteractiveTimeout pulumi.IntPtrInput `pulumi:"interactiveTimeout"`
	// The storage engine for in-memory internal temporary tables.
	InternalTmpMemStorageEngine pulumi.StringPtrInput `pulumi:"internalTmpMemStorageEngine"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// The slowQueryLogs work as SQL statements that take more than longQueryTime seconds to execute. Default is 10s.
	LongQueryTime pulumi.Float64PtrInput `pulumi:"longQueryTime"`
	// Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
	MaxAllowedPacket pulumi.IntPtrInput `pulumi:"maxAllowedPacket"`
	// Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
	MaxHeapTableSize pulumi.IntPtrInput `pulumi:"maxHeapTableSize"`
	// Migrate data from existing server.
	Migration ManagedDatabaseMysqlPropertiesMigrationPtrInput `pulumi:"migration"`
	// Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
	NetBufferLength pulumi.IntPtrInput `pulumi:"netBufferLength"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	NetReadTimeout pulumi.IntPtrInput `pulumi:"netReadTimeout"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	NetWriteTimeout pulumi.IntPtrInput `pulumi:"netWriteTimeout"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess pulumi.BoolPtrInput `pulumi:"publicAccess"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog pulumi.BoolPtrInput `pulumi:"serviceLog"`
	// Slow query log enables capturing of slow queries. Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off.
	SlowQueryLog pulumi.BoolPtrInput `pulumi:"slowQueryLog"`
	// Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
	SortBufferSize pulumi.IntPtrInput `pulumi:"sortBufferSize"`
	// Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
	SqlMode pulumi.StringPtrInput `pulumi:"sqlMode"`
	// Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
	SqlRequirePrimaryKey pulumi.BoolPtrInput `pulumi:"sqlRequirePrimaryKey"`
	// Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
	TmpTableSize pulumi.IntPtrInput `pulumi:"tmpTableSize"`
	// MySQL major version.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// The number of seconds the server waits for activity on a noninteractive connection before closing it.
	WaitTimeout pulumi.IntPtrInput `pulumi:"waitTimeout"`
}

func (ManagedDatabaseMysqlPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlProperties)(nil)).Elem()
}

func (i ManagedDatabaseMysqlPropertiesArgs) ToManagedDatabaseMysqlPropertiesOutput() ManagedDatabaseMysqlPropertiesOutput {
	return i.ToManagedDatabaseMysqlPropertiesOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlPropertiesArgs) ToManagedDatabaseMysqlPropertiesOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlPropertiesOutput)
}

func (i ManagedDatabaseMysqlPropertiesArgs) ToManagedDatabaseMysqlPropertiesPtrOutput() ManagedDatabaseMysqlPropertiesPtrOutput {
	return i.ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlPropertiesArgs) ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlPropertiesOutput).ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(ctx)
}

// ManagedDatabaseMysqlPropertiesPtrInput is an input type that accepts ManagedDatabaseMysqlPropertiesArgs, ManagedDatabaseMysqlPropertiesPtr and ManagedDatabaseMysqlPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlPropertiesPtrInput` via:
//
//	        ManagedDatabaseMysqlPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseMysqlPropertiesPtrInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlPropertiesPtrOutput() ManagedDatabaseMysqlPropertiesPtrOutput
	ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(context.Context) ManagedDatabaseMysqlPropertiesPtrOutput
}

type managedDatabaseMysqlPropertiesPtrType ManagedDatabaseMysqlPropertiesArgs

func ManagedDatabaseMysqlPropertiesPtr(v *ManagedDatabaseMysqlPropertiesArgs) ManagedDatabaseMysqlPropertiesPtrInput {
	return (*managedDatabaseMysqlPropertiesPtrType)(v)
}

func (*managedDatabaseMysqlPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseMysqlProperties)(nil)).Elem()
}

func (i *managedDatabaseMysqlPropertiesPtrType) ToManagedDatabaseMysqlPropertiesPtrOutput() ManagedDatabaseMysqlPropertiesPtrOutput {
	return i.ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseMysqlPropertiesPtrType) ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlPropertiesPtrOutput)
}

type ManagedDatabaseMysqlPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlProperties)(nil)).Elem()
}

func (o ManagedDatabaseMysqlPropertiesOutput) ToManagedDatabaseMysqlPropertiesOutput() ManagedDatabaseMysqlPropertiesOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesOutput) ToManagedDatabaseMysqlPropertiesOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesOutput) ToManagedDatabaseMysqlPropertiesPtrOutput() ManagedDatabaseMysqlPropertiesPtrOutput {
	return o.ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseMysqlPropertiesOutput) ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseMysqlProperties) *ManagedDatabaseMysqlProperties {
		return &v
	}).(ManagedDatabaseMysqlPropertiesPtrOutput)
}

// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
func (o ManagedDatabaseMysqlPropertiesOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a new service is being created.
func (o ManagedDatabaseMysqlPropertiesOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabaseMysqlPropertiesOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.AutomaticUtilityNetworkIpFilter }).(pulumi.BoolPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabaseMysqlPropertiesOutput) BackupHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.BackupHour }).(pulumi.IntPtrOutput)
}

// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabaseMysqlPropertiesOutput) BackupMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.BackupMinute }).(pulumi.IntPtrOutput)
}

// The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
func (o ManagedDatabaseMysqlPropertiesOutput) BinlogRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.BinlogRetentionPeriod }).(pulumi.IntPtrOutput)
}

// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
func (o ManagedDatabaseMysqlPropertiesOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.ConnectTimeout }).(pulumi.IntPtrOutput)
}

// Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
func (o ManagedDatabaseMysqlPropertiesOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.DefaultTimeZone }).(pulumi.StringPtrOutput)
}

// The maximum permitted result length in bytes for the GROUP_CONCAT() function.
func (o ManagedDatabaseMysqlPropertiesOutput) GroupConcatMaxLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.GroupConcatMaxLen }).(pulumi.IntPtrOutput)
}

// The time, in seconds, before cached statistics expire.
func (o ManagedDatabaseMysqlPropertiesOutput) InformationSchemaStatsExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InformationSchemaStatsExpiry }).(pulumi.IntPtrOutput)
}

// Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbChangeBufferMaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbChangeBufferMaxSize }).(pulumi.IntPtrOutput)
}

// Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbFlushNeighbors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbFlushNeighbors }).(pulumi.IntPtrOutput)
}

// Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbFtMinTokenSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbFtMinTokenSize }).(pulumi.IntPtrOutput)
}

// This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.InnodbFtServerStopwordTable }).(pulumi.StringPtrOutput)
}

// The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbLockWaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbLockWaitTimeout }).(pulumi.IntPtrOutput)
}

// The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbLogBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbLogBufferSize }).(pulumi.IntPtrOutput)
}

// The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbOnlineAlterLogMaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbOnlineAlterLogMaxSize }).(pulumi.IntPtrOutput)
}

// When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbPrintAllDeadlocks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.InnodbPrintAllDeadlocks }).(pulumi.BoolPtrOutput)
}

// The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbReadIoThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbReadIoThreads }).(pulumi.IntPtrOutput)
}

// When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbRollbackOnTimeout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.InnodbRollbackOnTimeout }).(pulumi.BoolPtrOutput)
}

// Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbThreadConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbThreadConcurrency }).(pulumi.IntPtrOutput)
}

// The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesOutput) InnodbWriteIoThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InnodbWriteIoThreads }).(pulumi.IntPtrOutput)
}

// The number of seconds the server waits for activity on an interactive connection before closing it.
func (o ManagedDatabaseMysqlPropertiesOutput) InteractiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.InteractiveTimeout }).(pulumi.IntPtrOutput)
}

// The storage engine for in-memory internal temporary tables.
func (o ManagedDatabaseMysqlPropertiesOutput) InternalTmpMemStorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.InternalTmpMemStorageEngine }).(pulumi.StringPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabaseMysqlPropertiesOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// The slowQueryLogs work as SQL statements that take more than longQueryTime seconds to execute. Default is 10s.
func (o ManagedDatabaseMysqlPropertiesOutput) LongQueryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *float64 { return v.LongQueryTime }).(pulumi.Float64PtrOutput)
}

// Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
func (o ManagedDatabaseMysqlPropertiesOutput) MaxAllowedPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.MaxAllowedPacket }).(pulumi.IntPtrOutput)
}

// Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
func (o ManagedDatabaseMysqlPropertiesOutput) MaxHeapTableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.MaxHeapTableSize }).(pulumi.IntPtrOutput)
}

// Migrate data from existing server.
func (o ManagedDatabaseMysqlPropertiesOutput) Migration() ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *ManagedDatabaseMysqlPropertiesMigration { return v.Migration }).(ManagedDatabaseMysqlPropertiesMigrationPtrOutput)
}

// Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesOutput) NetBufferLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.NetBufferLength }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for more data from a connection before aborting the read.
func (o ManagedDatabaseMysqlPropertiesOutput) NetReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.NetReadTimeout }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for a block to be written to a connection before aborting the write.
func (o ManagedDatabaseMysqlPropertiesOutput) NetWriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.NetWriteTimeout }).(pulumi.IntPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabaseMysqlPropertiesOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.PublicAccess }).(pulumi.BoolPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabaseMysqlPropertiesOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.ServiceLog }).(pulumi.BoolPtrOutput)
}

// Slow query log enables capturing of slow queries. Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off.
func (o ManagedDatabaseMysqlPropertiesOutput) SlowQueryLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.SlowQueryLog }).(pulumi.BoolPtrOutput)
}

// Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
func (o ManagedDatabaseMysqlPropertiesOutput) SortBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.SortBufferSize }).(pulumi.IntPtrOutput)
}

// Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
func (o ManagedDatabaseMysqlPropertiesOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.SqlMode }).(pulumi.StringPtrOutput)
}

// Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
func (o ManagedDatabaseMysqlPropertiesOutput) SqlRequirePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *bool { return v.SqlRequirePrimaryKey }).(pulumi.BoolPtrOutput)
}

// Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
func (o ManagedDatabaseMysqlPropertiesOutput) TmpTableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.TmpTableSize }).(pulumi.IntPtrOutput)
}

// MySQL major version.
func (o ManagedDatabaseMysqlPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on a noninteractive connection before closing it.
func (o ManagedDatabaseMysqlPropertiesOutput) WaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlProperties) *int { return v.WaitTimeout }).(pulumi.IntPtrOutput)
}

type ManagedDatabaseMysqlPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseMysqlProperties)(nil)).Elem()
}

func (o ManagedDatabaseMysqlPropertiesPtrOutput) ToManagedDatabaseMysqlPropertiesPtrOutput() ManagedDatabaseMysqlPropertiesPtrOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesPtrOutput) ToManagedDatabaseMysqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesPtrOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesPtrOutput) Elem() ManagedDatabaseMysqlPropertiesOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) ManagedDatabaseMysqlProperties {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseMysqlProperties
		return ret
	}).(ManagedDatabaseMysqlPropertiesOutput)
}

// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a new service is being created.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutomaticUtilityNetworkIpFilter
	}).(pulumi.BoolPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) BackupHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BackupHour
	}).(pulumi.IntPtrOutput)
}

// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) BackupMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BackupMinute
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) BinlogRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BinlogRetentionPeriod
	}).(pulumi.IntPtrOutput)
}

// The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) ConnectTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.IntPtrOutput)
}

// Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) DefaultTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTimeZone
	}).(pulumi.StringPtrOutput)
}

// The maximum permitted result length in bytes for the GROUP_CONCAT() function.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) GroupConcatMaxLen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.GroupConcatMaxLen
	}).(pulumi.IntPtrOutput)
}

// The time, in seconds, before cached statistics expire.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InformationSchemaStatsExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InformationSchemaStatsExpiry
	}).(pulumi.IntPtrOutput)
}

// Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbChangeBufferMaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbChangeBufferMaxSize
	}).(pulumi.IntPtrOutput)
}

// Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed, 1 - flush contiguous dirty pages in the same extent, 2 - flush dirty pages in the same extent.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbFlushNeighbors() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbFlushNeighbors
	}).(pulumi.IntPtrOutput)
}

// Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbFtMinTokenSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbFtMinTokenSize
	}).(pulumi.IntPtrOutput)
}

// This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbFtServerStopwordTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.InnodbFtServerStopwordTable
	}).(pulumi.StringPtrOutput)
}

// The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbLockWaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbLockWaitTimeout
	}).(pulumi.IntPtrOutput)
}

// The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbLogBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbLogBufferSize
	}).(pulumi.IntPtrOutput)
}

// The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbOnlineAlterLogMaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbOnlineAlterLogMaxSize
	}).(pulumi.IntPtrOutput)
}

// When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbPrintAllDeadlocks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbPrintAllDeadlocks
	}).(pulumi.BoolPtrOutput)
}

// The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbReadIoThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbReadIoThreads
	}).(pulumi.IntPtrOutput)
}

// When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbRollbackOnTimeout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.InnodbRollbackOnTimeout
	}).(pulumi.BoolPtrOutput)
}

// Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbThreadConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbThreadConcurrency
	}).(pulumi.IntPtrOutput)
}

// The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InnodbWriteIoThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InnodbWriteIoThreads
	}).(pulumi.IntPtrOutput)
}

// The number of seconds the server waits for activity on an interactive connection before closing it.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InteractiveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.InteractiveTimeout
	}).(pulumi.IntPtrOutput)
}

// The storage engine for in-memory internal temporary tables.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) InternalTmpMemStorageEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.InternalTmpMemStorageEngine
	}).(pulumi.StringPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// The slowQueryLogs work as SQL statements that take more than longQueryTime seconds to execute. Default is 10s.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) LongQueryTime() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.LongQueryTime
	}).(pulumi.Float64PtrOutput)
}

// Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
func (o ManagedDatabaseMysqlPropertiesPtrOutput) MaxAllowedPacket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxAllowedPacket
	}).(pulumi.IntPtrOutput)
}

// Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
func (o ManagedDatabaseMysqlPropertiesPtrOutput) MaxHeapTableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxHeapTableSize
	}).(pulumi.IntPtrOutput)
}

// Migrate data from existing server.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) Migration() ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *ManagedDatabaseMysqlPropertiesMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(ManagedDatabaseMysqlPropertiesMigrationPtrOutput)
}

// Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) NetBufferLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.NetBufferLength
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for more data from a connection before aborting the read.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) NetReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.NetReadTimeout
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait for a block to be written to a connection before aborting the write.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) NetWriteTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.NetWriteTimeout
	}).(pulumi.IntPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(pulumi.BoolPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceLog
	}).(pulumi.BoolPtrOutput)
}

// Slow query log enables capturing of slow queries. Setting slowQueryLog to false also truncates the mysql.slow_log table. Default is off.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) SlowQueryLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.SlowQueryLog
	}).(pulumi.BoolPtrOutput)
}

// Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
func (o ManagedDatabaseMysqlPropertiesPtrOutput) SortBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.SortBufferSize
	}).(pulumi.IntPtrOutput)
}

// Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) SqlMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.SqlMode
	}).(pulumi.StringPtrOutput)
}

// Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) SqlRequirePrimaryKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.SqlRequirePrimaryKey
	}).(pulumi.BoolPtrOutput)
}

// Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
func (o ManagedDatabaseMysqlPropertiesPtrOutput) TmpTableSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.TmpTableSize
	}).(pulumi.IntPtrOutput)
}

// MySQL major version.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the server waits for activity on a noninteractive connection before closing it.
func (o ManagedDatabaseMysqlPropertiesPtrOutput) WaitTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.WaitTimeout
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabaseMysqlPropertiesMigration struct {
	// Database name for bootstrapping the initial connection.
	Dbname *string `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from.
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
	Method *string `pulumi:"method"`
	// Password for authentication with the server where to migrate data from.
	Password *string `pulumi:"password"`
	// Port number of the server where to migrate data from.
	Port *int `pulumi:"port"`
	// The server where to migrate data from is secured with SSL.
	Ssl *bool `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username *string `pulumi:"username"`
}

// ManagedDatabaseMysqlPropertiesMigrationInput is an input type that accepts ManagedDatabaseMysqlPropertiesMigrationArgs and ManagedDatabaseMysqlPropertiesMigrationOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlPropertiesMigrationInput` via:
//
//	ManagedDatabaseMysqlPropertiesMigrationArgs{...}
type ManagedDatabaseMysqlPropertiesMigrationInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlPropertiesMigrationOutput() ManagedDatabaseMysqlPropertiesMigrationOutput
	ToManagedDatabaseMysqlPropertiesMigrationOutputWithContext(context.Context) ManagedDatabaseMysqlPropertiesMigrationOutput
}

type ManagedDatabaseMysqlPropertiesMigrationArgs struct {
	// Database name for bootstrapping the initial connection.
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Password for authentication with the server where to migrate data from.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number of the server where to migrate data from.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL.
	Ssl pulumi.BoolPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ManagedDatabaseMysqlPropertiesMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlPropertiesMigration)(nil)).Elem()
}

func (i ManagedDatabaseMysqlPropertiesMigrationArgs) ToManagedDatabaseMysqlPropertiesMigrationOutput() ManagedDatabaseMysqlPropertiesMigrationOutput {
	return i.ToManagedDatabaseMysqlPropertiesMigrationOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlPropertiesMigrationArgs) ToManagedDatabaseMysqlPropertiesMigrationOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlPropertiesMigrationOutput)
}

func (i ManagedDatabaseMysqlPropertiesMigrationArgs) ToManagedDatabaseMysqlPropertiesMigrationPtrOutput() ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return i.ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseMysqlPropertiesMigrationArgs) ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlPropertiesMigrationOutput).ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(ctx)
}

// ManagedDatabaseMysqlPropertiesMigrationPtrInput is an input type that accepts ManagedDatabaseMysqlPropertiesMigrationArgs, ManagedDatabaseMysqlPropertiesMigrationPtr and ManagedDatabaseMysqlPropertiesMigrationPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseMysqlPropertiesMigrationPtrInput` via:
//
//	        ManagedDatabaseMysqlPropertiesMigrationArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseMysqlPropertiesMigrationPtrInput interface {
	pulumi.Input

	ToManagedDatabaseMysqlPropertiesMigrationPtrOutput() ManagedDatabaseMysqlPropertiesMigrationPtrOutput
	ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(context.Context) ManagedDatabaseMysqlPropertiesMigrationPtrOutput
}

type managedDatabaseMysqlPropertiesMigrationPtrType ManagedDatabaseMysqlPropertiesMigrationArgs

func ManagedDatabaseMysqlPropertiesMigrationPtr(v *ManagedDatabaseMysqlPropertiesMigrationArgs) ManagedDatabaseMysqlPropertiesMigrationPtrInput {
	return (*managedDatabaseMysqlPropertiesMigrationPtrType)(v)
}

func (*managedDatabaseMysqlPropertiesMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseMysqlPropertiesMigration)(nil)).Elem()
}

func (i *managedDatabaseMysqlPropertiesMigrationPtrType) ToManagedDatabaseMysqlPropertiesMigrationPtrOutput() ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return i.ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseMysqlPropertiesMigrationPtrType) ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseMysqlPropertiesMigrationPtrOutput)
}

type ManagedDatabaseMysqlPropertiesMigrationOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlPropertiesMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseMysqlPropertiesMigration)(nil)).Elem()
}

func (o ManagedDatabaseMysqlPropertiesMigrationOutput) ToManagedDatabaseMysqlPropertiesMigrationOutput() ManagedDatabaseMysqlPropertiesMigrationOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesMigrationOutput) ToManagedDatabaseMysqlPropertiesMigrationOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesMigrationOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesMigrationOutput) ToManagedDatabaseMysqlPropertiesMigrationPtrOutput() ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return o.ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseMysqlPropertiesMigrationOutput) ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseMysqlPropertiesMigration) *ManagedDatabaseMysqlPropertiesMigration {
		return &v
	}).(ManagedDatabaseMysqlPropertiesMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection.
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The server where to migrate data from is secured with SSL.
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

// User name for authentication with the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseMysqlPropertiesMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseMysqlPropertiesMigrationPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseMysqlPropertiesMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseMysqlPropertiesMigration)(nil)).Elem()
}

func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) ToManagedDatabaseMysqlPropertiesMigrationPtrOutput() ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) ToManagedDatabaseMysqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseMysqlPropertiesMigrationPtrOutput {
	return o
}

func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Elem() ManagedDatabaseMysqlPropertiesMigrationOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) ManagedDatabaseMysqlPropertiesMigration {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseMysqlPropertiesMigration
		return ret
	}).(ManagedDatabaseMysqlPropertiesMigrationOutput)
}

// Database name for bootstrapping the initial connection.
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The server where to migrate data from is secured with SSL.
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *bool {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.BoolPtrOutput)
}

// User name for authentication with the server where to migrate data from.
func (o ManagedDatabaseMysqlPropertiesMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseMysqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchComponent struct {
	// Type of the component
	Component *string `pulumi:"component"`
	// Hostname of the component
	Host *string `pulumi:"host"`
	// Port number of the component
	Port *int `pulumi:"port"`
	// Component network route type
	Route *string `pulumi:"route"`
	// Usage of the component
	Usage *string `pulumi:"usage"`
}

// ManagedDatabaseOpensearchComponentInput is an input type that accepts ManagedDatabaseOpensearchComponentArgs and ManagedDatabaseOpensearchComponentOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchComponentInput` via:
//
//	ManagedDatabaseOpensearchComponentArgs{...}
type ManagedDatabaseOpensearchComponentInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchComponentOutput() ManagedDatabaseOpensearchComponentOutput
	ToManagedDatabaseOpensearchComponentOutputWithContext(context.Context) ManagedDatabaseOpensearchComponentOutput
}

type ManagedDatabaseOpensearchComponentArgs struct {
	// Type of the component
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Hostname of the component
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Port number of the component
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Component network route type
	Route pulumi.StringPtrInput `pulumi:"route"`
	// Usage of the component
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (ManagedDatabaseOpensearchComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchComponent)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchComponentArgs) ToManagedDatabaseOpensearchComponentOutput() ManagedDatabaseOpensearchComponentOutput {
	return i.ToManagedDatabaseOpensearchComponentOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchComponentArgs) ToManagedDatabaseOpensearchComponentOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchComponentOutput)
}

// ManagedDatabaseOpensearchComponentArrayInput is an input type that accepts ManagedDatabaseOpensearchComponentArray and ManagedDatabaseOpensearchComponentArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchComponentArrayInput` via:
//
//	ManagedDatabaseOpensearchComponentArray{ ManagedDatabaseOpensearchComponentArgs{...} }
type ManagedDatabaseOpensearchComponentArrayInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchComponentArrayOutput() ManagedDatabaseOpensearchComponentArrayOutput
	ToManagedDatabaseOpensearchComponentArrayOutputWithContext(context.Context) ManagedDatabaseOpensearchComponentArrayOutput
}

type ManagedDatabaseOpensearchComponentArray []ManagedDatabaseOpensearchComponentInput

func (ManagedDatabaseOpensearchComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseOpensearchComponent)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchComponentArray) ToManagedDatabaseOpensearchComponentArrayOutput() ManagedDatabaseOpensearchComponentArrayOutput {
	return i.ToManagedDatabaseOpensearchComponentArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchComponentArray) ToManagedDatabaseOpensearchComponentArrayOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchComponentArrayOutput)
}

type ManagedDatabaseOpensearchComponentOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchComponent)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchComponentOutput) ToManagedDatabaseOpensearchComponentOutput() ManagedDatabaseOpensearchComponentOutput {
	return o
}

func (o ManagedDatabaseOpensearchComponentOutput) ToManagedDatabaseOpensearchComponentOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchComponentOutput {
	return o
}

// Type of the component
func (o ManagedDatabaseOpensearchComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Hostname of the component
func (o ManagedDatabaseOpensearchComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Port number of the component
func (o ManagedDatabaseOpensearchComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Component network route type
func (o ManagedDatabaseOpensearchComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// Usage of the component
func (o ManagedDatabaseOpensearchComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchComponentArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseOpensearchComponent)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchComponentArrayOutput) ToManagedDatabaseOpensearchComponentArrayOutput() ManagedDatabaseOpensearchComponentArrayOutput {
	return o
}

func (o ManagedDatabaseOpensearchComponentArrayOutput) ToManagedDatabaseOpensearchComponentArrayOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchComponentArrayOutput {
	return o
}

func (o ManagedDatabaseOpensearchComponentArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseOpensearchComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseOpensearchComponent {
		return vs[0].([]ManagedDatabaseOpensearchComponent)[vs[1].(int)]
	}).(ManagedDatabaseOpensearchComponentOutput)
}

type ManagedDatabaseOpensearchNetwork struct {
	// Network family. Currently only `IPv4` is supported.
	Family string `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name string `pulumi:"name"`
	// The type of the network. Must be private.
	Type string `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid string `pulumi:"uuid"`
}

// ManagedDatabaseOpensearchNetworkInput is an input type that accepts ManagedDatabaseOpensearchNetworkArgs and ManagedDatabaseOpensearchNetworkOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchNetworkInput` via:
//
//	ManagedDatabaseOpensearchNetworkArgs{...}
type ManagedDatabaseOpensearchNetworkInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchNetworkOutput() ManagedDatabaseOpensearchNetworkOutput
	ToManagedDatabaseOpensearchNetworkOutputWithContext(context.Context) ManagedDatabaseOpensearchNetworkOutput
}

type ManagedDatabaseOpensearchNetworkArgs struct {
	// Network family. Currently only `IPv4` is supported.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the network. Must be private.
	Type pulumi.StringInput `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ManagedDatabaseOpensearchNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchNetwork)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchNetworkArgs) ToManagedDatabaseOpensearchNetworkOutput() ManagedDatabaseOpensearchNetworkOutput {
	return i.ToManagedDatabaseOpensearchNetworkOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchNetworkArgs) ToManagedDatabaseOpensearchNetworkOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchNetworkOutput)
}

// ManagedDatabaseOpensearchNetworkArrayInput is an input type that accepts ManagedDatabaseOpensearchNetworkArray and ManagedDatabaseOpensearchNetworkArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchNetworkArrayInput` via:
//
//	ManagedDatabaseOpensearchNetworkArray{ ManagedDatabaseOpensearchNetworkArgs{...} }
type ManagedDatabaseOpensearchNetworkArrayInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchNetworkArrayOutput() ManagedDatabaseOpensearchNetworkArrayOutput
	ToManagedDatabaseOpensearchNetworkArrayOutputWithContext(context.Context) ManagedDatabaseOpensearchNetworkArrayOutput
}

type ManagedDatabaseOpensearchNetworkArray []ManagedDatabaseOpensearchNetworkInput

func (ManagedDatabaseOpensearchNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseOpensearchNetwork)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchNetworkArray) ToManagedDatabaseOpensearchNetworkArrayOutput() ManagedDatabaseOpensearchNetworkArrayOutput {
	return i.ToManagedDatabaseOpensearchNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchNetworkArray) ToManagedDatabaseOpensearchNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchNetworkArrayOutput)
}

type ManagedDatabaseOpensearchNetworkOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchNetwork)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchNetworkOutput) ToManagedDatabaseOpensearchNetworkOutput() ManagedDatabaseOpensearchNetworkOutput {
	return o
}

func (o ManagedDatabaseOpensearchNetworkOutput) ToManagedDatabaseOpensearchNetworkOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNetworkOutput {
	return o
}

// Network family. Currently only `IPv4` is supported.
func (o ManagedDatabaseOpensearchNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// The name of the network. Must be unique within the service.
func (o ManagedDatabaseOpensearchNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the network. Must be private.
func (o ManagedDatabaseOpensearchNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// Private network UUID. Must reside in the same zone as the database.
func (o ManagedDatabaseOpensearchNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type ManagedDatabaseOpensearchNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseOpensearchNetwork)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchNetworkArrayOutput) ToManagedDatabaseOpensearchNetworkArrayOutput() ManagedDatabaseOpensearchNetworkArrayOutput {
	return o
}

func (o ManagedDatabaseOpensearchNetworkArrayOutput) ToManagedDatabaseOpensearchNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNetworkArrayOutput {
	return o
}

func (o ManagedDatabaseOpensearchNetworkArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseOpensearchNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseOpensearchNetwork {
		return vs[0].([]ManagedDatabaseOpensearchNetwork)[vs[1].(int)]
	}).(ManagedDatabaseOpensearchNetworkOutput)
}

type ManagedDatabaseOpensearchNodeState struct {
	// Name plus a node iteration
	Name *string `pulumi:"name"`
	// Role of the node
	Role *string `pulumi:"role"`
	// State of the node
	State *string `pulumi:"state"`
}

// ManagedDatabaseOpensearchNodeStateInput is an input type that accepts ManagedDatabaseOpensearchNodeStateArgs and ManagedDatabaseOpensearchNodeStateOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchNodeStateInput` via:
//
//	ManagedDatabaseOpensearchNodeStateArgs{...}
type ManagedDatabaseOpensearchNodeStateInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchNodeStateOutput() ManagedDatabaseOpensearchNodeStateOutput
	ToManagedDatabaseOpensearchNodeStateOutputWithContext(context.Context) ManagedDatabaseOpensearchNodeStateOutput
}

type ManagedDatabaseOpensearchNodeStateArgs struct {
	// Name plus a node iteration
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Role of the node
	Role pulumi.StringPtrInput `pulumi:"role"`
	// State of the node
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedDatabaseOpensearchNodeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchNodeState)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchNodeStateArgs) ToManagedDatabaseOpensearchNodeStateOutput() ManagedDatabaseOpensearchNodeStateOutput {
	return i.ToManagedDatabaseOpensearchNodeStateOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchNodeStateArgs) ToManagedDatabaseOpensearchNodeStateOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNodeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchNodeStateOutput)
}

// ManagedDatabaseOpensearchNodeStateArrayInput is an input type that accepts ManagedDatabaseOpensearchNodeStateArray and ManagedDatabaseOpensearchNodeStateArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchNodeStateArrayInput` via:
//
//	ManagedDatabaseOpensearchNodeStateArray{ ManagedDatabaseOpensearchNodeStateArgs{...} }
type ManagedDatabaseOpensearchNodeStateArrayInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchNodeStateArrayOutput() ManagedDatabaseOpensearchNodeStateArrayOutput
	ToManagedDatabaseOpensearchNodeStateArrayOutputWithContext(context.Context) ManagedDatabaseOpensearchNodeStateArrayOutput
}

type ManagedDatabaseOpensearchNodeStateArray []ManagedDatabaseOpensearchNodeStateInput

func (ManagedDatabaseOpensearchNodeStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseOpensearchNodeState)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchNodeStateArray) ToManagedDatabaseOpensearchNodeStateArrayOutput() ManagedDatabaseOpensearchNodeStateArrayOutput {
	return i.ToManagedDatabaseOpensearchNodeStateArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchNodeStateArray) ToManagedDatabaseOpensearchNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNodeStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchNodeStateArrayOutput)
}

type ManagedDatabaseOpensearchNodeStateOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchNodeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchNodeState)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchNodeStateOutput) ToManagedDatabaseOpensearchNodeStateOutput() ManagedDatabaseOpensearchNodeStateOutput {
	return o
}

func (o ManagedDatabaseOpensearchNodeStateOutput) ToManagedDatabaseOpensearchNodeStateOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNodeStateOutput {
	return o
}

// Name plus a node iteration
func (o ManagedDatabaseOpensearchNodeStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNodeState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Role of the node
func (o ManagedDatabaseOpensearchNodeStateOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNodeState) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// State of the node
func (o ManagedDatabaseOpensearchNodeStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchNodeState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchNodeStateArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchNodeStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseOpensearchNodeState)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchNodeStateArrayOutput) ToManagedDatabaseOpensearchNodeStateArrayOutput() ManagedDatabaseOpensearchNodeStateArrayOutput {
	return o
}

func (o ManagedDatabaseOpensearchNodeStateArrayOutput) ToManagedDatabaseOpensearchNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchNodeStateArrayOutput {
	return o
}

func (o ManagedDatabaseOpensearchNodeStateArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseOpensearchNodeStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseOpensearchNodeState {
		return vs[0].([]ManagedDatabaseOpensearchNodeState)[vs[1].(int)]
	}).(ManagedDatabaseOpensearchNodeStateOutput)
}

type ManagedDatabaseOpensearchProperties struct {
	// action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
	ActionAutoCreateIndexEnabled *bool `pulumi:"actionAutoCreateIndexEnabled"`
	// Require explicit index names when deleting.
	ActionDestructiveRequiresName *bool `pulumi:"actionDestructiveRequiresName"`
	// Opensearch Security Plugin Settings.
	AuthFailureListeners *ManagedDatabaseOpensearchPropertiesAuthFailureListeners `pulumi:"authFailureListeners"`
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter *bool `pulumi:"automaticUtilityNetworkIpFilter"`
	// Controls the number of shards allowed in the cluster per data node.
	ClusterMaxShardsPerNode *int `pulumi:"clusterMaxShardsPerNode"`
	// Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
	ClusterRoutingAllocationNodeConcurrentRecoveries *int `pulumi:"clusterRoutingAllocationNodeConcurrentRecoveries"`
	// Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain *string `pulumi:"customDomain"`
	// Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
	EmailSenderName *string `pulumi:"emailSenderName"`
	// Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
	EmailSenderPassword *string `pulumi:"emailSenderPassword"`
	// Sender username for Opensearch alerts.
	EmailSenderUsername *string `pulumi:"emailSenderUsername"`
	// Enable/Disable security audit.
	EnableSecurityAudit *bool `pulumi:"enableSecurityAudit"`
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
	HttpMaxContentLength *int `pulumi:"httpMaxContentLength"`
	// The max size of allowed headers, in bytes.
	HttpMaxHeaderSize *int `pulumi:"httpMaxHeaderSize"`
	// The max length of an HTTP URL, in bytes.
	HttpMaxInitialLineLength *int `pulumi:"httpMaxInitialLineLength"`
	// Index patterns.
	IndexPatterns []string `pulumi:"indexPatterns"`
	// Template settings for all new indexes.
	IndexTemplate *ManagedDatabaseOpensearchPropertiesIndexTemplate `pulumi:"indexTemplate"`
	// Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
	IndicesFielddataCacheSize *int `pulumi:"indicesFielddataCacheSize"`
	// Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
	IndicesMemoryIndexBufferSize *int `pulumi:"indicesMemoryIndexBufferSize"`
	// Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
	IndicesMemoryMaxIndexBufferSize *int `pulumi:"indicesMemoryMaxIndexBufferSize"`
	// Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
	IndicesMemoryMinIndexBufferSize *int `pulumi:"indicesMemoryMinIndexBufferSize"`
	// Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
	IndicesQueriesCacheSize *int `pulumi:"indicesQueriesCacheSize"`
	// Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
	IndicesQueryBoolMaxClauseCount *int `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
	IndicesRecoveryMaxBytesPerSec *int `pulumi:"indicesRecoveryMaxBytesPerSec"`
	// Number of file chunks sent in parallel for each recovery. Defaults to 2.
	IndicesRecoveryMaxConcurrentFileChunks *int `pulumi:"indicesRecoveryMaxConcurrentFileChunks"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters []string `pulumi:"ipFilters"`
	// Specifies whether ISM is enabled or not.
	IsmEnabled *bool `pulumi:"ismEnabled"`
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
	IsmHistoryEnabled *bool `pulumi:"ismHistoryEnabled"`
	// The maximum age before rolling over the audit history index in hours.
	IsmHistoryMaxAge *int `pulumi:"ismHistoryMaxAge"`
	// The maximum number of documents before rolling over the audit history index.
	IsmHistoryMaxDocs *int `pulumi:"ismHistoryMaxDocs"`
	// The time between rollover checks for the audit history index in hours.
	IsmHistoryRolloverCheckPeriod *int `pulumi:"ismHistoryRolloverCheckPeriod"`
	// How long audit history indices are kept in days.
	IsmHistoryRolloverRetentionPeriod *int `pulumi:"ismHistoryRolloverRetentionPeriod"`
	// Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
	KeepIndexRefreshInterval *bool `pulumi:"keepIndexRefreshInterval"`
	// Enable or disable KNN memory circuit breaker. Defaults to true.
	KnnMemoryCircuitBreakerEnabled *bool `pulumi:"knnMemoryCircuitBreakerEnabled"`
	// Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
	KnnMemoryCircuitBreakerLimit *int `pulumi:"knnMemoryCircuitBreakerLimit"`
	// OpenSearch OpenID Connect Configuration.
	Openid *ManagedDatabaseOpensearchPropertiesOpenid `pulumi:"openid"`
	// OpenSearch Dashboards settings.
	OpensearchDashboards *ManagedDatabaseOpensearchPropertiesOpensearchDashboards `pulumi:"opensearchDashboards"`
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
	OverrideMainResponseVersion *bool `pulumi:"overrideMainResponseVersion"`
	// Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
	PluginsAlertingFilterByBackendRoles *bool `pulumi:"pluginsAlertingFilterByBackendRoles"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess *bool `pulumi:"publicAccess"`
	// Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists []string `pulumi:"reindexRemoteWhitelists"`
	// OpenSearch SAML configuration.
	Saml *ManagedDatabaseOpensearchPropertiesSaml `pulumi:"saml"`
	// Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
	ScriptMaxCompilationsRate *string `pulumi:"scriptMaxCompilationsRate"`
	// Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
	SearchMaxBuckets *int `pulumi:"searchMaxBuckets"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog *bool `pulumi:"serviceLog"`
	// analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolAnalyzeQueueSize *int `pulumi:"threadPoolAnalyzeQueueSize"`
	// analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize *int `pulumi:"threadPoolAnalyzeSize"`
	// force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize *int `pulumi:"threadPoolForceMergeSize"`
	// get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolGetQueueSize *int `pulumi:"threadPoolGetQueueSize"`
	// get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize *int `pulumi:"threadPoolGetSize"`
	// search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolSearchQueueSize *int `pulumi:"threadPoolSearchQueueSize"`
	// search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize *int `pulumi:"threadPoolSearchSize"`
	// search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolSearchThrottledQueueSize *int `pulumi:"threadPoolSearchThrottledQueueSize"`
	// search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize *int `pulumi:"threadPoolSearchThrottledSize"`
	// write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolWriteQueueSize *int `pulumi:"threadPoolWriteQueueSize"`
	// write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize *int `pulumi:"threadPoolWriteSize"`
	// OpenSearch major version.
	Version *string `pulumi:"version"`
}

// ManagedDatabaseOpensearchPropertiesInput is an input type that accepts ManagedDatabaseOpensearchPropertiesArgs and ManagedDatabaseOpensearchPropertiesOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesInput` via:
//
//	ManagedDatabaseOpensearchPropertiesArgs{...}
type ManagedDatabaseOpensearchPropertiesInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesOutput() ManagedDatabaseOpensearchPropertiesOutput
	ToManagedDatabaseOpensearchPropertiesOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesOutput
}

type ManagedDatabaseOpensearchPropertiesArgs struct {
	// action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
	ActionAutoCreateIndexEnabled pulumi.BoolPtrInput `pulumi:"actionAutoCreateIndexEnabled"`
	// Require explicit index names when deleting.
	ActionDestructiveRequiresName pulumi.BoolPtrInput `pulumi:"actionDestructiveRequiresName"`
	// Opensearch Security Plugin Settings.
	AuthFailureListeners ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrInput `pulumi:"authFailureListeners"`
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter pulumi.BoolPtrInput `pulumi:"automaticUtilityNetworkIpFilter"`
	// Controls the number of shards allowed in the cluster per data node.
	ClusterMaxShardsPerNode pulumi.IntPtrInput `pulumi:"clusterMaxShardsPerNode"`
	// Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
	ClusterRoutingAllocationNodeConcurrentRecoveries pulumi.IntPtrInput `pulumi:"clusterRoutingAllocationNodeConcurrentRecoveries"`
	// Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
	CustomDomain pulumi.StringPtrInput `pulumi:"customDomain"`
	// Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
	EmailSenderName pulumi.StringPtrInput `pulumi:"emailSenderName"`
	// Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
	EmailSenderPassword pulumi.StringPtrInput `pulumi:"emailSenderPassword"`
	// Sender username for Opensearch alerts.
	EmailSenderUsername pulumi.StringPtrInput `pulumi:"emailSenderUsername"`
	// Enable/Disable security audit.
	EnableSecurityAudit pulumi.BoolPtrInput `pulumi:"enableSecurityAudit"`
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
	HttpMaxContentLength pulumi.IntPtrInput `pulumi:"httpMaxContentLength"`
	// The max size of allowed headers, in bytes.
	HttpMaxHeaderSize pulumi.IntPtrInput `pulumi:"httpMaxHeaderSize"`
	// The max length of an HTTP URL, in bytes.
	HttpMaxInitialLineLength pulumi.IntPtrInput `pulumi:"httpMaxInitialLineLength"`
	// Index patterns.
	IndexPatterns pulumi.StringArrayInput `pulumi:"indexPatterns"`
	// Template settings for all new indexes.
	IndexTemplate ManagedDatabaseOpensearchPropertiesIndexTemplatePtrInput `pulumi:"indexTemplate"`
	// Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
	IndicesFielddataCacheSize pulumi.IntPtrInput `pulumi:"indicesFielddataCacheSize"`
	// Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
	IndicesMemoryIndexBufferSize pulumi.IntPtrInput `pulumi:"indicesMemoryIndexBufferSize"`
	// Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
	IndicesMemoryMaxIndexBufferSize pulumi.IntPtrInput `pulumi:"indicesMemoryMaxIndexBufferSize"`
	// Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
	IndicesMemoryMinIndexBufferSize pulumi.IntPtrInput `pulumi:"indicesMemoryMinIndexBufferSize"`
	// Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
	IndicesQueriesCacheSize pulumi.IntPtrInput `pulumi:"indicesQueriesCacheSize"`
	// Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
	IndicesQueryBoolMaxClauseCount pulumi.IntPtrInput `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
	IndicesRecoveryMaxBytesPerSec pulumi.IntPtrInput `pulumi:"indicesRecoveryMaxBytesPerSec"`
	// Number of file chunks sent in parallel for each recovery. Defaults to 2.
	IndicesRecoveryMaxConcurrentFileChunks pulumi.IntPtrInput `pulumi:"indicesRecoveryMaxConcurrentFileChunks"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Specifies whether ISM is enabled or not.
	IsmEnabled pulumi.BoolPtrInput `pulumi:"ismEnabled"`
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
	IsmHistoryEnabled pulumi.BoolPtrInput `pulumi:"ismHistoryEnabled"`
	// The maximum age before rolling over the audit history index in hours.
	IsmHistoryMaxAge pulumi.IntPtrInput `pulumi:"ismHistoryMaxAge"`
	// The maximum number of documents before rolling over the audit history index.
	IsmHistoryMaxDocs pulumi.IntPtrInput `pulumi:"ismHistoryMaxDocs"`
	// The time between rollover checks for the audit history index in hours.
	IsmHistoryRolloverCheckPeriod pulumi.IntPtrInput `pulumi:"ismHistoryRolloverCheckPeriod"`
	// How long audit history indices are kept in days.
	IsmHistoryRolloverRetentionPeriod pulumi.IntPtrInput `pulumi:"ismHistoryRolloverRetentionPeriod"`
	// Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
	KeepIndexRefreshInterval pulumi.BoolPtrInput `pulumi:"keepIndexRefreshInterval"`
	// Enable or disable KNN memory circuit breaker. Defaults to true.
	KnnMemoryCircuitBreakerEnabled pulumi.BoolPtrInput `pulumi:"knnMemoryCircuitBreakerEnabled"`
	// Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
	KnnMemoryCircuitBreakerLimit pulumi.IntPtrInput `pulumi:"knnMemoryCircuitBreakerLimit"`
	// OpenSearch OpenID Connect Configuration.
	Openid ManagedDatabaseOpensearchPropertiesOpenidPtrInput `pulumi:"openid"`
	// OpenSearch Dashboards settings.
	OpensearchDashboards ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrInput `pulumi:"opensearchDashboards"`
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
	OverrideMainResponseVersion pulumi.BoolPtrInput `pulumi:"overrideMainResponseVersion"`
	// Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
	PluginsAlertingFilterByBackendRoles pulumi.BoolPtrInput `pulumi:"pluginsAlertingFilterByBackendRoles"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess pulumi.BoolPtrInput `pulumi:"publicAccess"`
	// Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists pulumi.StringArrayInput `pulumi:"reindexRemoteWhitelists"`
	// OpenSearch SAML configuration.
	Saml ManagedDatabaseOpensearchPropertiesSamlPtrInput `pulumi:"saml"`
	// Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
	ScriptMaxCompilationsRate pulumi.StringPtrInput `pulumi:"scriptMaxCompilationsRate"`
	// Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
	SearchMaxBuckets pulumi.IntPtrInput `pulumi:"searchMaxBuckets"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog pulumi.BoolPtrInput `pulumi:"serviceLog"`
	// analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolAnalyzeQueueSize pulumi.IntPtrInput `pulumi:"threadPoolAnalyzeQueueSize"`
	// analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize pulumi.IntPtrInput `pulumi:"threadPoolAnalyzeSize"`
	// force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize pulumi.IntPtrInput `pulumi:"threadPoolForceMergeSize"`
	// get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolGetQueueSize pulumi.IntPtrInput `pulumi:"threadPoolGetQueueSize"`
	// get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize pulumi.IntPtrInput `pulumi:"threadPoolGetSize"`
	// search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolSearchQueueSize pulumi.IntPtrInput `pulumi:"threadPoolSearchQueueSize"`
	// search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize pulumi.IntPtrInput `pulumi:"threadPoolSearchSize"`
	// search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolSearchThrottledQueueSize pulumi.IntPtrInput `pulumi:"threadPoolSearchThrottledQueueSize"`
	// search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize pulumi.IntPtrInput `pulumi:"threadPoolSearchThrottledSize"`
	// write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
	ThreadPoolWriteQueueSize pulumi.IntPtrInput `pulumi:"threadPoolWriteQueueSize"`
	// write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize pulumi.IntPtrInput `pulumi:"threadPoolWriteSize"`
	// OpenSearch major version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ManagedDatabaseOpensearchPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchProperties)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesArgs) ToManagedDatabaseOpensearchPropertiesOutput() ManagedDatabaseOpensearchPropertiesOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesArgs) ToManagedDatabaseOpensearchPropertiesOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOutput)
}

func (i ManagedDatabaseOpensearchPropertiesArgs) ToManagedDatabaseOpensearchPropertiesPtrOutput() ManagedDatabaseOpensearchPropertiesPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesArgs) ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOutput).ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesArgs, ManagedDatabaseOpensearchPropertiesPtr and ManagedDatabaseOpensearchPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesPtrOutput() ManagedDatabaseOpensearchPropertiesPtrOutput
	ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesPtrOutput
}

type managedDatabaseOpensearchPropertiesPtrType ManagedDatabaseOpensearchPropertiesArgs

func ManagedDatabaseOpensearchPropertiesPtr(v *ManagedDatabaseOpensearchPropertiesArgs) ManagedDatabaseOpensearchPropertiesPtrInput {
	return (*managedDatabaseOpensearchPropertiesPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchProperties)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesPtrType) ToManagedDatabaseOpensearchPropertiesPtrOutput() ManagedDatabaseOpensearchPropertiesPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesPtrType) ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchProperties)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesOutput) ToManagedDatabaseOpensearchPropertiesOutput() ManagedDatabaseOpensearchPropertiesOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOutput) ToManagedDatabaseOpensearchPropertiesOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOutput) ToManagedDatabaseOpensearchPropertiesPtrOutput() ManagedDatabaseOpensearchPropertiesPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesOutput) ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchProperties {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesPtrOutput)
}

// action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
func (o ManagedDatabaseOpensearchPropertiesOutput) ActionAutoCreateIndexEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.ActionAutoCreateIndexEnabled }).(pulumi.BoolPtrOutput)
}

// Require explicit index names when deleting.
func (o ManagedDatabaseOpensearchPropertiesOutput) ActionDestructiveRequiresName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.ActionDestructiveRequiresName }).(pulumi.BoolPtrOutput)
}

// Opensearch Security Plugin Settings.
func (o ManagedDatabaseOpensearchPropertiesOutput) AuthFailureListeners() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesAuthFailureListeners {
		return v.AuthFailureListeners
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabaseOpensearchPropertiesOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.AutomaticUtilityNetworkIpFilter }).(pulumi.BoolPtrOutput)
}

// Controls the number of shards allowed in the cluster per data node.
func (o ManagedDatabaseOpensearchPropertiesOutput) ClusterMaxShardsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ClusterMaxShardsPerNode }).(pulumi.IntPtrOutput)
}

// Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
func (o ManagedDatabaseOpensearchPropertiesOutput) ClusterRoutingAllocationNodeConcurrentRecoveries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int {
		return v.ClusterRoutingAllocationNodeConcurrentRecoveries
	}).(pulumi.IntPtrOutput)
}

// Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o ManagedDatabaseOpensearchPropertiesOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *string { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
func (o ManagedDatabaseOpensearchPropertiesOutput) EmailSenderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *string { return v.EmailSenderName }).(pulumi.StringPtrOutput)
}

// Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
func (o ManagedDatabaseOpensearchPropertiesOutput) EmailSenderPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *string { return v.EmailSenderPassword }).(pulumi.StringPtrOutput)
}

// Sender username for Opensearch alerts.
func (o ManagedDatabaseOpensearchPropertiesOutput) EmailSenderUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *string { return v.EmailSenderUsername }).(pulumi.StringPtrOutput)
}

// Enable/Disable security audit.
func (o ManagedDatabaseOpensearchPropertiesOutput) EnableSecurityAudit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.EnableSecurityAudit }).(pulumi.BoolPtrOutput)
}

// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
func (o ManagedDatabaseOpensearchPropertiesOutput) HttpMaxContentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.HttpMaxContentLength }).(pulumi.IntPtrOutput)
}

// The max size of allowed headers, in bytes.
func (o ManagedDatabaseOpensearchPropertiesOutput) HttpMaxHeaderSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.HttpMaxHeaderSize }).(pulumi.IntPtrOutput)
}

// The max length of an HTTP URL, in bytes.
func (o ManagedDatabaseOpensearchPropertiesOutput) HttpMaxInitialLineLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.HttpMaxInitialLineLength }).(pulumi.IntPtrOutput)
}

// Index patterns.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndexPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) []string { return v.IndexPatterns }).(pulumi.StringArrayOutput)
}

// Template settings for all new indexes.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndexTemplate() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesIndexTemplate {
		return v.IndexTemplate
	}).(ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput)
}

// Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesFielddataCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesFielddataCacheSize }).(pulumi.IntPtrOutput)
}

// Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesMemoryIndexBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesMemoryIndexBufferSize }).(pulumi.IntPtrOutput)
}

// Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesMemoryMaxIndexBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesMemoryMaxIndexBufferSize }).(pulumi.IntPtrOutput)
}

// Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesMemoryMinIndexBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesMemoryMinIndexBufferSize }).(pulumi.IntPtrOutput)
}

// Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesQueriesCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesQueriesCacheSize }).(pulumi.IntPtrOutput)
}

// Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesQueryBoolMaxClauseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesQueryBoolMaxClauseCount }).(pulumi.IntPtrOutput)
}

// Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesRecoveryMaxBytesPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesRecoveryMaxBytesPerSec }).(pulumi.IntPtrOutput)
}

// Number of file chunks sent in parallel for each recovery. Defaults to 2.
func (o ManagedDatabaseOpensearchPropertiesOutput) IndicesRecoveryMaxConcurrentFileChunks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IndicesRecoveryMaxConcurrentFileChunks }).(pulumi.IntPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabaseOpensearchPropertiesOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Specifies whether ISM is enabled or not.
func (o ManagedDatabaseOpensearchPropertiesOutput) IsmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.IsmEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
func (o ManagedDatabaseOpensearchPropertiesOutput) IsmHistoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.IsmHistoryEnabled }).(pulumi.BoolPtrOutput)
}

// The maximum age before rolling over the audit history index in hours.
func (o ManagedDatabaseOpensearchPropertiesOutput) IsmHistoryMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IsmHistoryMaxAge }).(pulumi.IntPtrOutput)
}

// The maximum number of documents before rolling over the audit history index.
func (o ManagedDatabaseOpensearchPropertiesOutput) IsmHistoryMaxDocs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IsmHistoryMaxDocs }).(pulumi.IntPtrOutput)
}

// The time between rollover checks for the audit history index in hours.
func (o ManagedDatabaseOpensearchPropertiesOutput) IsmHistoryRolloverCheckPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IsmHistoryRolloverCheckPeriod }).(pulumi.IntPtrOutput)
}

// How long audit history indices are kept in days.
func (o ManagedDatabaseOpensearchPropertiesOutput) IsmHistoryRolloverRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.IsmHistoryRolloverRetentionPeriod }).(pulumi.IntPtrOutput)
}

// Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
func (o ManagedDatabaseOpensearchPropertiesOutput) KeepIndexRefreshInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.KeepIndexRefreshInterval }).(pulumi.BoolPtrOutput)
}

// Enable or disable KNN memory circuit breaker. Defaults to true.
func (o ManagedDatabaseOpensearchPropertiesOutput) KnnMemoryCircuitBreakerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.KnnMemoryCircuitBreakerEnabled }).(pulumi.BoolPtrOutput)
}

// Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
func (o ManagedDatabaseOpensearchPropertiesOutput) KnnMemoryCircuitBreakerLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.KnnMemoryCircuitBreakerLimit }).(pulumi.IntPtrOutput)
}

// OpenSearch OpenID Connect Configuration.
func (o ManagedDatabaseOpensearchPropertiesOutput) Openid() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesOpenid {
		return v.Openid
	}).(ManagedDatabaseOpensearchPropertiesOpenidPtrOutput)
}

// OpenSearch Dashboards settings.
func (o ManagedDatabaseOpensearchPropertiesOutput) OpensearchDashboards() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesOpensearchDashboards {
		return v.OpensearchDashboards
	}).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput)
}

// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
func (o ManagedDatabaseOpensearchPropertiesOutput) OverrideMainResponseVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.OverrideMainResponseVersion }).(pulumi.BoolPtrOutput)
}

// Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
func (o ManagedDatabaseOpensearchPropertiesOutput) PluginsAlertingFilterByBackendRoles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.PluginsAlertingFilterByBackendRoles }).(pulumi.BoolPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabaseOpensearchPropertiesOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.PublicAccess }).(pulumi.BoolPtrOutput)
}

// Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
func (o ManagedDatabaseOpensearchPropertiesOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) []string { return v.ReindexRemoteWhitelists }).(pulumi.StringArrayOutput)
}

// OpenSearch SAML configuration.
func (o ManagedDatabaseOpensearchPropertiesOutput) Saml() ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesSaml { return v.Saml }).(ManagedDatabaseOpensearchPropertiesSamlPtrOutput)
}

// Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
func (o ManagedDatabaseOpensearchPropertiesOutput) ScriptMaxCompilationsRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *string { return v.ScriptMaxCompilationsRate }).(pulumi.StringPtrOutput)
}

// Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
func (o ManagedDatabaseOpensearchPropertiesOutput) SearchMaxBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.SearchMaxBuckets }).(pulumi.IntPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabaseOpensearchPropertiesOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *bool { return v.ServiceLog }).(pulumi.BoolPtrOutput)
}

// analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolAnalyzeQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolAnalyzeQueueSize }).(pulumi.IntPtrOutput)
}

// analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolAnalyzeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolAnalyzeSize }).(pulumi.IntPtrOutput)
}

// force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolForceMergeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolForceMergeSize }).(pulumi.IntPtrOutput)
}

// get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolGetQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolGetQueueSize }).(pulumi.IntPtrOutput)
}

// get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolGetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolGetSize }).(pulumi.IntPtrOutput)
}

// search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolSearchQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolSearchQueueSize }).(pulumi.IntPtrOutput)
}

// search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolSearchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolSearchSize }).(pulumi.IntPtrOutput)
}

// search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolSearchThrottledQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolSearchThrottledQueueSize }).(pulumi.IntPtrOutput)
}

// search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolSearchThrottledSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolSearchThrottledSize }).(pulumi.IntPtrOutput)
}

// write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolWriteQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolWriteQueueSize }).(pulumi.IntPtrOutput)
}

// write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesOutput) ThreadPoolWriteSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *int { return v.ThreadPoolWriteSize }).(pulumi.IntPtrOutput)
}

// OpenSearch major version.
func (o ManagedDatabaseOpensearchPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchProperties)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ToManagedDatabaseOpensearchPropertiesPtrOutput() ManagedDatabaseOpensearchPropertiesPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ToManagedDatabaseOpensearchPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) ManagedDatabaseOpensearchProperties {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchProperties
		return ret
	}).(ManagedDatabaseOpensearchPropertiesOutput)
}

// action.auto_create_index. Explicitly allow or block automatic creation of indices. Defaults to true.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ActionAutoCreateIndexEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ActionAutoCreateIndexEnabled
	}).(pulumi.BoolPtrOutput)
}

// Require explicit index names when deleting.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ActionDestructiveRequiresName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ActionDestructiveRequiresName
	}).(pulumi.BoolPtrOutput)
}

// Opensearch Security Plugin Settings.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) AuthFailureListeners() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesAuthFailureListeners {
		if v == nil {
			return nil
		}
		return v.AuthFailureListeners
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutomaticUtilityNetworkIpFilter
	}).(pulumi.BoolPtrOutput)
}

// Controls the number of shards allowed in the cluster per data node.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ClusterMaxShardsPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ClusterMaxShardsPerNode
	}).(pulumi.IntPtrOutput)
}

// Concurrent incoming/outgoing shard recoveries per node. How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ClusterRoutingAllocationNodeConcurrentRecoveries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ClusterRoutingAllocationNodeConcurrentRecoveries
	}).(pulumi.IntPtrOutput)
}

// Custom domain. Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *string {
		if v == nil {
			return nil
		}
		return v.CustomDomain
	}).(pulumi.StringPtrOutput)
}

// Sender name placeholder to be used in Opensearch Dashboards and Opensearch keystore. This should be identical to the Sender name defined in Opensearch dashboards.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) EmailSenderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *string {
		if v == nil {
			return nil
		}
		return v.EmailSenderName
	}).(pulumi.StringPtrOutput)
}

// Sender password for Opensearch alerts to authenticate with SMTP server. Sender password for Opensearch alerts to authenticate with SMTP server.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) EmailSenderPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *string {
		if v == nil {
			return nil
		}
		return v.EmailSenderPassword
	}).(pulumi.StringPtrOutput)
}

// Sender username for Opensearch alerts.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) EmailSenderUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *string {
		if v == nil {
			return nil
		}
		return v.EmailSenderUsername
	}).(pulumi.StringPtrOutput)
}

// Enable/Disable security audit.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) EnableSecurityAudit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSecurityAudit
	}).(pulumi.BoolPtrOutput)
}

// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) HttpMaxContentLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.HttpMaxContentLength
	}).(pulumi.IntPtrOutput)
}

// The max size of allowed headers, in bytes.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) HttpMaxHeaderSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.HttpMaxHeaderSize
	}).(pulumi.IntPtrOutput)
}

// The max length of an HTTP URL, in bytes.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) HttpMaxInitialLineLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.HttpMaxInitialLineLength
	}).(pulumi.IntPtrOutput)
}

// Index patterns.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndexPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) []string {
		if v == nil {
			return nil
		}
		return v.IndexPatterns
	}).(pulumi.StringArrayOutput)
}

// Template settings for all new indexes.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndexTemplate() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesIndexTemplate {
		if v == nil {
			return nil
		}
		return v.IndexTemplate
	}).(ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput)
}

// Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesFielddataCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesFielddataCacheSize
	}).(pulumi.IntPtrOutput)
}

// Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesMemoryIndexBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryIndexBufferSize
	}).(pulumi.IntPtrOutput)
}

// Absolute value. Default is unbound. Doesn't work without indices.memory.index_buffer_size. Maximum amount of heap used for query cache, an absolute indices.memory.index_buffer_size maximum hard limit.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesMemoryMaxIndexBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryMaxIndexBufferSize
	}).(pulumi.IntPtrOutput)
}

// Absolute value. Default is 48mb. Doesn't work without indices.memory.index_buffer_size. Minimum amount of heap used for query cache, an absolute indices.memory.index_buffer_size minimal hard limit.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesMemoryMinIndexBufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesMemoryMinIndexBufferSize
	}).(pulumi.IntPtrOutput)
}

// Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesQueriesCacheSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesQueriesCacheSize
	}).(pulumi.IntPtrOutput)
}

// Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesQueryBoolMaxClauseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesQueryBoolMaxClauseCount
	}).(pulumi.IntPtrOutput)
}

// Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesRecoveryMaxBytesPerSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesRecoveryMaxBytesPerSec
	}).(pulumi.IntPtrOutput)
}

// Number of file chunks sent in parallel for each recovery. Defaults to 2.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IndicesRecoveryMaxConcurrentFileChunks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IndicesRecoveryMaxConcurrentFileChunks
	}).(pulumi.IntPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Specifies whether ISM is enabled or not.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IsmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsmEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IsmHistoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsmHistoryEnabled
	}).(pulumi.BoolPtrOutput)
}

// The maximum age before rolling over the audit history index in hours.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IsmHistoryMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IsmHistoryMaxAge
	}).(pulumi.IntPtrOutput)
}

// The maximum number of documents before rolling over the audit history index.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IsmHistoryMaxDocs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IsmHistoryMaxDocs
	}).(pulumi.IntPtrOutput)
}

// The time between rollover checks for the audit history index in hours.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IsmHistoryRolloverCheckPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IsmHistoryRolloverCheckPeriod
	}).(pulumi.IntPtrOutput)
}

// How long audit history indices are kept in days.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) IsmHistoryRolloverRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.IsmHistoryRolloverRetentionPeriod
	}).(pulumi.IntPtrOutput)
}

// Don't reset index.refresh_interval to the default value. Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) KeepIndexRefreshInterval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.KeepIndexRefreshInterval
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable KNN memory circuit breaker. Defaults to true.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) KnnMemoryCircuitBreakerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.KnnMemoryCircuitBreakerEnabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum amount of memory that can be used for KNN index. Defaults to 50% of the JVM heap size.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) KnnMemoryCircuitBreakerLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.KnnMemoryCircuitBreakerLimit
	}).(pulumi.IntPtrOutput)
}

// OpenSearch OpenID Connect Configuration.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) Openid() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesOpenid {
		if v == nil {
			return nil
		}
		return v.Openid
	}).(ManagedDatabaseOpensearchPropertiesOpenidPtrOutput)
}

// OpenSearch Dashboards settings.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) OpensearchDashboards() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesOpensearchDashboards {
		if v == nil {
			return nil
		}
		return v.OpensearchDashboards
	}).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput)
}

// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) OverrideMainResponseVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideMainResponseVersion
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable filtering of alerting by backend roles. Requires Security plugin. Defaults to false.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) PluginsAlertingFilterByBackendRoles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PluginsAlertingFilterByBackendRoles
	}).(pulumi.BoolPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(pulumi.BoolPtrOutput)
}

// Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) []string {
		if v == nil {
			return nil
		}
		return v.ReindexRemoteWhitelists
	}).(pulumi.StringArrayOutput)
}

// OpenSearch SAML configuration.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) Saml() ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *ManagedDatabaseOpensearchPropertiesSaml {
		if v == nil {
			return nil
		}
		return v.Saml
	}).(ManagedDatabaseOpensearchPropertiesSamlPtrOutput)
}

// Script max compilation rate - circuit breaker to prevent/minimize OOMs. Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ScriptMaxCompilationsRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *string {
		if v == nil {
			return nil
		}
		return v.ScriptMaxCompilationsRate
	}).(pulumi.StringPtrOutput)
}

// Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) SearchMaxBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.SearchMaxBuckets
	}).(pulumi.IntPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceLog
	}).(pulumi.BoolPtrOutput)
}

// analyze thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolAnalyzeQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeQueueSize
	}).(pulumi.IntPtrOutput)
}

// analyze thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolAnalyzeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolAnalyzeSize
	}).(pulumi.IntPtrOutput)
}

// force_merge thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolForceMergeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolForceMergeSize
	}).(pulumi.IntPtrOutput)
}

// get thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolGetQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetQueueSize
	}).(pulumi.IntPtrOutput)
}

// get thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolGetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolGetSize
	}).(pulumi.IntPtrOutput)
}

// search thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolSearchQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchQueueSize
	}).(pulumi.IntPtrOutput)
}

// search thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolSearchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchSize
	}).(pulumi.IntPtrOutput)
}

// search_throttled thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolSearchThrottledQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledQueueSize
	}).(pulumi.IntPtrOutput)
}

// search_throttled thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolSearchThrottledSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolSearchThrottledSize
	}).(pulumi.IntPtrOutput)
}

// write thread pool queue size. Size for the thread pool queue. See documentation for exact details.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolWriteQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteQueueSize
	}).(pulumi.IntPtrOutput)
}

// write thread pool size. Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) ThreadPoolWriteSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *int {
		if v == nil {
			return nil
		}
		return v.ThreadPoolWriteSize
	}).(pulumi.IntPtrOutput)
}

// OpenSearch major version.
func (o ManagedDatabaseOpensearchPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListeners struct {
	InternalAuthenticationBackendLimiting *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting `pulumi:"internalAuthenticationBackendLimiting"`
	// IP address rate limiting settings.
	IpRateLimiting *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting `pulumi:"ipRateLimiting"`
}

// ManagedDatabaseOpensearchPropertiesAuthFailureListenersInput is an input type that accepts ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs and ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesAuthFailureListenersInput` via:
//
//	ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs{...}
type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput
	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs struct {
	InternalAuthenticationBackendLimiting ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrInput `pulumi:"internalAuthenticationBackendLimiting"`
	// IP address rate limiting settings.
	IpRateLimiting ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrInput `pulumi:"ipRateLimiting"`
}

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListeners)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput)
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput).ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs, ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtr and ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput
	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput
}

type managedDatabaseOpensearchPropertiesAuthFailureListenersPtrType ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs

func ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtr(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs) ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrInput {
	return (*managedDatabaseOpensearchPropertiesAuthFailureListenersPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesAuthFailureListenersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesAuthFailureListeners)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesAuthFailureListenersPtrType) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesAuthFailureListenersPtrType) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListeners)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesAuthFailureListeners) *ManagedDatabaseOpensearchPropertiesAuthFailureListeners {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput)
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) InternalAuthenticationBackendLimiting() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListeners) *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting {
		return v.InternalAuthenticationBackendLimiting
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput)
}

// IP address rate limiting settings.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput) IpRateLimiting() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListeners) *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting {
		return v.IpRateLimiting
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesAuthFailureListeners)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListeners) ManagedDatabaseOpensearchPropertiesAuthFailureListeners {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesAuthFailureListeners
		return ret
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput)
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput) InternalAuthenticationBackendLimiting() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListeners) *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting {
		if v == nil {
			return nil
		}
		return v.InternalAuthenticationBackendLimiting
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput)
}

// IP address rate limiting settings.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput) IpRateLimiting() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListeners) *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting {
		if v == nil {
			return nil
		}
		return v.IpRateLimiting
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting struct {
	// The number of login attempts allowed before login is blocked.
	AllowedTries *int `pulumi:"allowedTries"`
	// The internal backend. Enter `internal`.
	AuthenticationBackend *string `pulumi:"authenticationBackend"`
	// The duration of time that login remains blocked after a failed login.
	BlockExpirySeconds *int `pulumi:"blockExpirySeconds"`
	// The maximum number of blocked IP addresses.
	MaxBlockedClients *int `pulumi:"maxBlockedClients"`
	// The maximum number of tracked IP addresses that have failed login.
	MaxTrackedClients *int `pulumi:"maxTrackedClients"`
	// The window of time in which the value for `allowedTries` is enforced.
	TimeWindowSeconds *int `pulumi:"timeWindowSeconds"`
	// The type of rate limiting.
	Type *string `pulumi:"type"`
}

// ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingInput is an input type that accepts ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs and ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingInput` via:
//
//	ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs{...}
type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput
	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs struct {
	// The number of login attempts allowed before login is blocked.
	AllowedTries pulumi.IntPtrInput `pulumi:"allowedTries"`
	// The internal backend. Enter `internal`.
	AuthenticationBackend pulumi.StringPtrInput `pulumi:"authenticationBackend"`
	// The duration of time that login remains blocked after a failed login.
	BlockExpirySeconds pulumi.IntPtrInput `pulumi:"blockExpirySeconds"`
	// The maximum number of blocked IP addresses.
	MaxBlockedClients pulumi.IntPtrInput `pulumi:"maxBlockedClients"`
	// The maximum number of tracked IP addresses that have failed login.
	MaxTrackedClients pulumi.IntPtrInput `pulumi:"maxTrackedClients"`
	// The window of time in which the value for `allowedTries` is enforced.
	TimeWindowSeconds pulumi.IntPtrInput `pulumi:"timeWindowSeconds"`
	// The type of rate limiting.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput)
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput).ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs, ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtr and ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput
	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput
}

type managedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrType ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs

func ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtr(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrInput {
	return (*managedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrType) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrType) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput)
}

// The number of login attempts allowed before login is blocked.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) AllowedTries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		return v.AllowedTries
	}).(pulumi.IntPtrOutput)
}

// The internal backend. Enter `internal`.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) AuthenticationBackend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *string {
		return v.AuthenticationBackend
	}).(pulumi.StringPtrOutput)
}

// The duration of time that login remains blocked after a failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) BlockExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		return v.BlockExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum number of blocked IP addresses.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) MaxBlockedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		return v.MaxBlockedClients
	}).(pulumi.IntPtrOutput)
}

// The maximum number of tracked IP addresses that have failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) MaxTrackedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		return v.MaxTrackedClients
	}).(pulumi.IntPtrOutput)
}

// The window of time in which the value for `allowedTries` is enforced.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) TimeWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		return v.TimeWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// The type of rate limiting.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *string {
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting
		return ret
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput)
}

// The number of login attempts allowed before login is blocked.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) AllowedTries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		if v == nil {
			return nil
		}
		return v.AllowedTries
	}).(pulumi.IntPtrOutput)
}

// The internal backend. Enter `internal`.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) AuthenticationBackend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationBackend
	}).(pulumi.StringPtrOutput)
}

// The duration of time that login remains blocked after a failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) BlockExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		if v == nil {
			return nil
		}
		return v.BlockExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum number of blocked IP addresses.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) MaxBlockedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		if v == nil {
			return nil
		}
		return v.MaxBlockedClients
	}).(pulumi.IntPtrOutput)
}

// The maximum number of tracked IP addresses that have failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) MaxTrackedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		if v == nil {
			return nil
		}
		return v.MaxTrackedClients
	}).(pulumi.IntPtrOutput)
}

// The window of time in which the value for `allowedTries` is enforced.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) TimeWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *int {
		if v == nil {
			return nil
		}
		return v.TimeWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// The type of rate limiting.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimiting) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting struct {
	// The number of login attempts allowed before login is blocked.
	AllowedTries *int `pulumi:"allowedTries"`
	// The duration of time that login remains blocked after a failed login.
	BlockExpirySeconds *int `pulumi:"blockExpirySeconds"`
	// The maximum number of blocked IP addresses.
	MaxBlockedClients *int `pulumi:"maxBlockedClients"`
	// The maximum number of tracked IP addresses that have failed login.
	MaxTrackedClients *int `pulumi:"maxTrackedClients"`
	// The window of time in which the value for `allowedTries` is enforced.
	TimeWindowSeconds *int `pulumi:"timeWindowSeconds"`
	// The type of rate limiting.
	Type *string `pulumi:"type"`
}

// ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingInput is an input type that accepts ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs and ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingInput` via:
//
//	ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs{...}
type ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput
	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs struct {
	// The number of login attempts allowed before login is blocked.
	AllowedTries pulumi.IntPtrInput `pulumi:"allowedTries"`
	// The duration of time that login remains blocked after a failed login.
	BlockExpirySeconds pulumi.IntPtrInput `pulumi:"blockExpirySeconds"`
	// The maximum number of blocked IP addresses.
	MaxBlockedClients pulumi.IntPtrInput `pulumi:"maxBlockedClients"`
	// The maximum number of tracked IP addresses that have failed login.
	MaxTrackedClients pulumi.IntPtrInput `pulumi:"maxTrackedClients"`
	// The window of time in which the value for `allowedTries` is enforced.
	TimeWindowSeconds pulumi.IntPtrInput `pulumi:"timeWindowSeconds"`
	// The type of rate limiting.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput)
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput).ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs, ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtr and ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput
	ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput
}

type managedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrType ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs

func ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtr(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrInput {
	return (*managedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrType) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrType) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput)
}

// The number of login attempts allowed before login is blocked.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) AllowedTries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		return v.AllowedTries
	}).(pulumi.IntPtrOutput)
}

// The duration of time that login remains blocked after a failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) BlockExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		return v.BlockExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum number of blocked IP addresses.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) MaxBlockedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		return v.MaxBlockedClients
	}).(pulumi.IntPtrOutput)
}

// The maximum number of tracked IP addresses that have failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) MaxTrackedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		return v.MaxTrackedClients
	}).(pulumi.IntPtrOutput)
}

// The window of time in which the value for `allowedTries` is enforced.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) TimeWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		return v.TimeWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// The type of rate limiting.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) ToManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting
		return ret
	}).(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput)
}

// The number of login attempts allowed before login is blocked.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) AllowedTries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		if v == nil {
			return nil
		}
		return v.AllowedTries
	}).(pulumi.IntPtrOutput)
}

// The duration of time that login remains blocked after a failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) BlockExpirySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		if v == nil {
			return nil
		}
		return v.BlockExpirySeconds
	}).(pulumi.IntPtrOutput)
}

// The maximum number of blocked IP addresses.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) MaxBlockedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		if v == nil {
			return nil
		}
		return v.MaxBlockedClients
	}).(pulumi.IntPtrOutput)
}

// The maximum number of tracked IP addresses that have failed login.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) MaxTrackedClients() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		if v == nil {
			return nil
		}
		return v.MaxTrackedClients
	}).(pulumi.IntPtrOutput)
}

// The window of time in which the value for `allowedTries` is enforced.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) TimeWindowSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *int {
		if v == nil {
			return nil
		}
		return v.TimeWindowSeconds
	}).(pulumi.IntPtrOutput)
}

// The type of rate limiting.
func (o ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimiting) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesIndexTemplate struct {
	// index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
	MappingNestedObjectsLimit *int `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has.
	NumberOfReplicas *int `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have.
	NumberOfShards *int `pulumi:"numberOfShards"`
}

// ManagedDatabaseOpensearchPropertiesIndexTemplateInput is an input type that accepts ManagedDatabaseOpensearchPropertiesIndexTemplateArgs and ManagedDatabaseOpensearchPropertiesIndexTemplateOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesIndexTemplateInput` via:
//
//	ManagedDatabaseOpensearchPropertiesIndexTemplateArgs{...}
type ManagedDatabaseOpensearchPropertiesIndexTemplateInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesIndexTemplateOutput() ManagedDatabaseOpensearchPropertiesIndexTemplateOutput
	ToManagedDatabaseOpensearchPropertiesIndexTemplateOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplateOutput
}

type ManagedDatabaseOpensearchPropertiesIndexTemplateArgs struct {
	// index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
	MappingNestedObjectsLimit pulumi.IntPtrInput `pulumi:"mappingNestedObjectsLimit"`
	// The number of replicas each primary shard has.
	NumberOfReplicas pulumi.IntPtrInput `pulumi:"numberOfReplicas"`
	// The number of primary shards that an index should have.
	NumberOfShards pulumi.IntPtrInput `pulumi:"numberOfShards"`
}

func (ManagedDatabaseOpensearchPropertiesIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesIndexTemplate)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesIndexTemplateArgs) ToManagedDatabaseOpensearchPropertiesIndexTemplateOutput() ManagedDatabaseOpensearchPropertiesIndexTemplateOutput {
	return i.ToManagedDatabaseOpensearchPropertiesIndexTemplateOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesIndexTemplateArgs) ToManagedDatabaseOpensearchPropertiesIndexTemplateOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesIndexTemplateOutput)
}

func (i ManagedDatabaseOpensearchPropertiesIndexTemplateArgs) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesIndexTemplateArgs) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesIndexTemplateOutput).ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesIndexTemplatePtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesIndexTemplateArgs, ManagedDatabaseOpensearchPropertiesIndexTemplatePtr and ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesIndexTemplatePtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesIndexTemplateArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesIndexTemplatePtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput
	ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput
}

type managedDatabaseOpensearchPropertiesIndexTemplatePtrType ManagedDatabaseOpensearchPropertiesIndexTemplateArgs

func ManagedDatabaseOpensearchPropertiesIndexTemplatePtr(v *ManagedDatabaseOpensearchPropertiesIndexTemplateArgs) ManagedDatabaseOpensearchPropertiesIndexTemplatePtrInput {
	return (*managedDatabaseOpensearchPropertiesIndexTemplatePtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesIndexTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesIndexTemplate)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesIndexTemplatePtrType) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesIndexTemplatePtrType) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput)
}

type ManagedDatabaseOpensearchPropertiesIndexTemplateOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesIndexTemplate)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) ToManagedDatabaseOpensearchPropertiesIndexTemplateOutput() ManagedDatabaseOpensearchPropertiesIndexTemplateOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) ToManagedDatabaseOpensearchPropertiesIndexTemplateOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplateOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesIndexTemplate) *ManagedDatabaseOpensearchPropertiesIndexTemplate {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput)
}

// index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) MappingNestedObjectsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesIndexTemplate) *int { return v.MappingNestedObjectsLimit }).(pulumi.IntPtrOutput)
}

// The number of replicas each primary shard has.
func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesIndexTemplate) *int { return v.NumberOfReplicas }).(pulumi.IntPtrOutput)
}

// The number of primary shards that an index should have.
func (o ManagedDatabaseOpensearchPropertiesIndexTemplateOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesIndexTemplate) *int { return v.NumberOfShards }).(pulumi.IntPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesIndexTemplate)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput() ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) ToManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) Elem() ManagedDatabaseOpensearchPropertiesIndexTemplateOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesIndexTemplate) ManagedDatabaseOpensearchPropertiesIndexTemplate {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesIndexTemplate
		return ret
	}).(ManagedDatabaseOpensearchPropertiesIndexTemplateOutput)
}

// index.mapping.nested_objects.limit. The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
func (o ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) MappingNestedObjectsLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.MappingNestedObjectsLimit
	}).(pulumi.IntPtrOutput)
}

// The number of replicas each primary shard has.
func (o ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.IntPtrOutput)
}

// The number of primary shards that an index should have.
func (o ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesIndexTemplate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOpenid struct {
	// The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
	ClientId *string `pulumi:"clientId"`
	// The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
	ClientSecret *string `pulumi:"clientSecret"`
	// OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
	ConnectUrl *string `pulumi:"connectUrl"`
	// Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
	Enabled *bool `pulumi:"enabled"`
	// HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
	Header *string `pulumi:"header"`
	// The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
	JwtHeader *string `pulumi:"jwtHeader"`
	// URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
	JwtUrlParameter *string `pulumi:"jwtUrlParameter"`
	// The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
	RefreshRateLimitCount *int `pulumi:"refreshRateLimitCount"`
	// The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
	RefreshRateLimitTimeWindowMs *int `pulumi:"refreshRateLimitTimeWindowMs"`
	// The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
	RolesKey *string `pulumi:"rolesKey"`
	// The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
	Scope *string `pulumi:"scope"`
	// The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferredUsername claim. Optional.
	SubjectKey *string `pulumi:"subjectKey"`
}

// ManagedDatabaseOpensearchPropertiesOpenidInput is an input type that accepts ManagedDatabaseOpensearchPropertiesOpenidArgs and ManagedDatabaseOpensearchPropertiesOpenidOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesOpenidInput` via:
//
//	ManagedDatabaseOpensearchPropertiesOpenidArgs{...}
type ManagedDatabaseOpensearchPropertiesOpenidInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesOpenidOutput() ManagedDatabaseOpensearchPropertiesOpenidOutput
	ToManagedDatabaseOpensearchPropertiesOpenidOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesOpenidOutput
}

type ManagedDatabaseOpensearchPropertiesOpenidArgs struct {
	// The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
	ConnectUrl pulumi.StringPtrInput `pulumi:"connectUrl"`
	// Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
	JwtHeader pulumi.StringPtrInput `pulumi:"jwtHeader"`
	// URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
	JwtUrlParameter pulumi.StringPtrInput `pulumi:"jwtUrlParameter"`
	// The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
	RefreshRateLimitCount pulumi.IntPtrInput `pulumi:"refreshRateLimitCount"`
	// The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
	RefreshRateLimitTimeWindowMs pulumi.IntPtrInput `pulumi:"refreshRateLimitTimeWindowMs"`
	// The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
	RolesKey pulumi.StringPtrInput `pulumi:"rolesKey"`
	// The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferredUsername claim. Optional.
	SubjectKey pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (ManagedDatabaseOpensearchPropertiesOpenidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpenid)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesOpenidArgs) ToManagedDatabaseOpensearchPropertiesOpenidOutput() ManagedDatabaseOpensearchPropertiesOpenidOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOpenidOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesOpenidArgs) ToManagedDatabaseOpensearchPropertiesOpenidOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpenidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOpenidOutput)
}

func (i ManagedDatabaseOpensearchPropertiesOpenidArgs) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutput() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesOpenidArgs) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOpenidOutput).ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesOpenidPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesOpenidArgs, ManagedDatabaseOpensearchPropertiesOpenidPtr and ManagedDatabaseOpensearchPropertiesOpenidPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesOpenidPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesOpenidArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesOpenidPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesOpenidPtrOutput() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput
	ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesOpenidPtrOutput
}

type managedDatabaseOpensearchPropertiesOpenidPtrType ManagedDatabaseOpensearchPropertiesOpenidArgs

func ManagedDatabaseOpensearchPropertiesOpenidPtr(v *ManagedDatabaseOpensearchPropertiesOpenidArgs) ManagedDatabaseOpensearchPropertiesOpenidPtrInput {
	return (*managedDatabaseOpensearchPropertiesOpenidPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesOpenidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesOpenid)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesOpenidPtrType) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutput() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesOpenidPtrType) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOpenidPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOpenidOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesOpenidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpenid)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ToManagedDatabaseOpensearchPropertiesOpenidOutput() ManagedDatabaseOpensearchPropertiesOpenidOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ToManagedDatabaseOpensearchPropertiesOpenidOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpenidOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutput() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesOpenid) *ManagedDatabaseOpensearchPropertiesOpenid {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesOpenidPtrOutput)
}

// The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) ConnectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.ConnectUrl }).(pulumi.StringPtrOutput)
}

// Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) JwtHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.JwtHeader }).(pulumi.StringPtrOutput)
}

// URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) JwtUrlParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.JwtUrlParameter }).(pulumi.StringPtrOutput)
}

// The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) RefreshRateLimitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *int { return v.RefreshRateLimitCount }).(pulumi.IntPtrOutput)
}

// The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) RefreshRateLimitTimeWindowMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *int { return v.RefreshRateLimitTimeWindowMs }).(pulumi.IntPtrOutput)
}

// The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

// The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferredUsername claim. Optional.
func (o ManagedDatabaseOpensearchPropertiesOpenidOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpenid) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOpenidPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesOpenid)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutput() ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) ToManagedDatabaseOpensearchPropertiesOpenidPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpenidPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesOpenidOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) ManagedDatabaseOpensearchPropertiesOpenid {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesOpenid
		return ret
	}).(ManagedDatabaseOpensearchPropertiesOpenidOutput)
}

// The ID of the OpenID Connect client. The ID of the OpenID Connect client configured in your IdP. Required.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret of the OpenID Connect. The client secret of the OpenID Connect client configured in your IdP. Required.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// OpenID Connect metadata/configuration URL. The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) ConnectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.ConnectUrl
	}).(pulumi.StringPtrOutput)
}

// Enable or disable OpenSearch OpenID Connect authentication. Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP header name of the JWT token. HTTP header name of the JWT token. Optional. Default is Authorization.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// The HTTP header that stores the token. The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer <token>. Optional. Default is Authorization.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) JwtHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.JwtHeader
	}).(pulumi.StringPtrOutput)
}

// URL JWT token. If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) JwtUrlParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.JwtUrlParameter
	}).(pulumi.StringPtrOutput)
}

// The maximum number of unknown key IDs in the time frame. The maximum number of unknown key IDs in the time frame. Default is 10. Optional.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) RefreshRateLimitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *int {
		if v == nil {
			return nil
		}
		return v.RefreshRateLimitCount
	}).(pulumi.IntPtrOutput)
}

// The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds).
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) RefreshRateLimitTimeWindowMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *int {
		if v == nil {
			return nil
		}
		return v.RefreshRateLimitTimeWindowMs
	}).(pulumi.IntPtrOutput)
}

// The key in the JSON payload that stores the user’s roles. The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

// The scope of the identity token issued by the IdP. The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// The key in the JSON payload that stores the user’s name. The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferredUsername claim. Optional.
func (o ManagedDatabaseOpensearchPropertiesOpenidPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpenid) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOpensearchDashboards struct {
	// Enable or disable OpenSearch Dashboards.
	Enabled *bool `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the maxOldSpaceSize option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
	MaxOldSpaceSize *int `pulumi:"maxOldSpaceSize"`
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
	OpensearchRequestTimeout *int `pulumi:"opensearchRequestTimeout"`
}

// ManagedDatabaseOpensearchPropertiesOpensearchDashboardsInput is an input type that accepts ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs and ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesOpensearchDashboardsInput` via:
//
//	ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs{...}
type ManagedDatabaseOpensearchPropertiesOpensearchDashboardsInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput
	ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput
}

type ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs struct {
	// Enable or disable OpenSearch Dashboards.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the maxOldSpaceSize option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
	MaxOldSpaceSize pulumi.IntPtrInput `pulumi:"maxOldSpaceSize"`
	// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
	OpensearchRequestTimeout pulumi.IntPtrInput `pulumi:"opensearchRequestTimeout"`
}

func (ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpensearchDashboards)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput)
}

func (i ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput).ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs, ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtr and ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput
	ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput
}

type managedDatabaseOpensearchPropertiesOpensearchDashboardsPtrType ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs

func ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtr(v *ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrInput {
	return (*managedDatabaseOpensearchPropertiesOpensearchDashboardsPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesOpensearchDashboardsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesOpensearchDashboards)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesOpensearchDashboardsPtrType) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesOpensearchDashboardsPtrType) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpensearchDashboards)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *ManagedDatabaseOpensearchPropertiesOpensearchDashboards {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput)
}

// Enable or disable OpenSearch Dashboards.
func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the maxOldSpaceSize option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) MaxOldSpaceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *int { return v.MaxOldSpaceSize }).(pulumi.IntPtrOutput)
}

// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput) OpensearchRequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *int {
		return v.OpensearchRequestTimeout
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesOpensearchDashboards)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) ToManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpensearchDashboards) ManagedDatabaseOpensearchPropertiesOpensearchDashboards {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesOpensearchDashboards
		return ret
	}).(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput)
}

// Enable or disable OpenSearch Dashboards.
func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the maxOldSpaceSize option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch.
func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) MaxOldSpaceSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *int {
		if v == nil {
			return nil
		}
		return v.MaxOldSpaceSize
	}).(pulumi.IntPtrOutput)
}

// Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch.
func (o ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput) OpensearchRequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesOpensearchDashboards) *int {
		if v == nil {
			return nil
		}
		return v.OpensearchRequestTimeout
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesSaml struct {
	// Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
	Enabled *bool `pulumi:"enabled"`
	// Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
	IdpEntityId *string `pulumi:"idpEntityId"`
	// Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
	IdpMetadataUrl *string `pulumi:"idpMetadataUrl"`
	// PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
	IdpPemtrustedcasContent *string `pulumi:"idpPemtrustedcasContent"`
	// SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
	RolesKey *string `pulumi:"rolesKey"`
	// Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
	SpEntityId *string `pulumi:"spEntityId"`
	// SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
	SubjectKey *string `pulumi:"subjectKey"`
}

// ManagedDatabaseOpensearchPropertiesSamlInput is an input type that accepts ManagedDatabaseOpensearchPropertiesSamlArgs and ManagedDatabaseOpensearchPropertiesSamlOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesSamlInput` via:
//
//	ManagedDatabaseOpensearchPropertiesSamlArgs{...}
type ManagedDatabaseOpensearchPropertiesSamlInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesSamlOutput() ManagedDatabaseOpensearchPropertiesSamlOutput
	ToManagedDatabaseOpensearchPropertiesSamlOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesSamlOutput
}

type ManagedDatabaseOpensearchPropertiesSamlArgs struct {
	// Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
	IdpEntityId pulumi.StringPtrInput `pulumi:"idpEntityId"`
	// Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
	IdpMetadataUrl pulumi.StringPtrInput `pulumi:"idpMetadataUrl"`
	// PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
	IdpPemtrustedcasContent pulumi.StringPtrInput `pulumi:"idpPemtrustedcasContent"`
	// SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
	RolesKey pulumi.StringPtrInput `pulumi:"rolesKey"`
	// Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
	SpEntityId pulumi.StringPtrInput `pulumi:"spEntityId"`
	// SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
	SubjectKey pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (ManagedDatabaseOpensearchPropertiesSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesSaml)(nil)).Elem()
}

func (i ManagedDatabaseOpensearchPropertiesSamlArgs) ToManagedDatabaseOpensearchPropertiesSamlOutput() ManagedDatabaseOpensearchPropertiesSamlOutput {
	return i.ToManagedDatabaseOpensearchPropertiesSamlOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesSamlArgs) ToManagedDatabaseOpensearchPropertiesSamlOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesSamlOutput)
}

func (i ManagedDatabaseOpensearchPropertiesSamlArgs) ToManagedDatabaseOpensearchPropertiesSamlPtrOutput() ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseOpensearchPropertiesSamlArgs) ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesSamlOutput).ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(ctx)
}

// ManagedDatabaseOpensearchPropertiesSamlPtrInput is an input type that accepts ManagedDatabaseOpensearchPropertiesSamlArgs, ManagedDatabaseOpensearchPropertiesSamlPtr and ManagedDatabaseOpensearchPropertiesSamlPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseOpensearchPropertiesSamlPtrInput` via:
//
//	        ManagedDatabaseOpensearchPropertiesSamlArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseOpensearchPropertiesSamlPtrInput interface {
	pulumi.Input

	ToManagedDatabaseOpensearchPropertiesSamlPtrOutput() ManagedDatabaseOpensearchPropertiesSamlPtrOutput
	ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(context.Context) ManagedDatabaseOpensearchPropertiesSamlPtrOutput
}

type managedDatabaseOpensearchPropertiesSamlPtrType ManagedDatabaseOpensearchPropertiesSamlArgs

func ManagedDatabaseOpensearchPropertiesSamlPtr(v *ManagedDatabaseOpensearchPropertiesSamlArgs) ManagedDatabaseOpensearchPropertiesSamlPtrInput {
	return (*managedDatabaseOpensearchPropertiesSamlPtrType)(v)
}

func (*managedDatabaseOpensearchPropertiesSamlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesSaml)(nil)).Elem()
}

func (i *managedDatabaseOpensearchPropertiesSamlPtrType) ToManagedDatabaseOpensearchPropertiesSamlPtrOutput() ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return i.ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseOpensearchPropertiesSamlPtrType) ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseOpensearchPropertiesSamlPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesSamlOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesSaml)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesSamlOutput) ToManagedDatabaseOpensearchPropertiesSamlOutput() ManagedDatabaseOpensearchPropertiesSamlOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesSamlOutput) ToManagedDatabaseOpensearchPropertiesSamlOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesSamlOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesSamlOutput) ToManagedDatabaseOpensearchPropertiesSamlPtrOutput() ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return o.ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseOpensearchPropertiesSamlOutput) ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseOpensearchPropertiesSaml) *ManagedDatabaseOpensearchPropertiesSaml {
		return &v
	}).(ManagedDatabaseOpensearchPropertiesSamlPtrOutput)
}

// Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *string { return v.IdpEntityId }).(pulumi.StringPtrOutput)
}

// Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) IdpMetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *string { return v.IdpMetadataUrl }).(pulumi.StringPtrOutput)
}

// PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) IdpPemtrustedcasContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *string { return v.IdpPemtrustedcasContent }).(pulumi.StringPtrOutput)
}

// SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

// Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *string { return v.SpEntityId }).(pulumi.StringPtrOutput)
}

// SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
func (o ManagedDatabaseOpensearchPropertiesSamlOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseOpensearchPropertiesSaml) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseOpensearchPropertiesSamlPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseOpensearchPropertiesSamlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseOpensearchPropertiesSaml)(nil)).Elem()
}

func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) ToManagedDatabaseOpensearchPropertiesSamlPtrOutput() ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) ToManagedDatabaseOpensearchPropertiesSamlPtrOutputWithContext(ctx context.Context) ManagedDatabaseOpensearchPropertiesSamlPtrOutput {
	return o
}

func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) Elem() ManagedDatabaseOpensearchPropertiesSamlOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) ManagedDatabaseOpensearchPropertiesSaml {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseOpensearchPropertiesSaml
		return ret
	}).(ManagedDatabaseOpensearchPropertiesSamlOutput)
}

// Enable or disable OpenSearch SAML authentication. Enables or disables SAML-based authentication for OpenSearch. When enabled, users can authenticate using SAML with an Identity Provider.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Identity Provider Entity ID. The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) IdpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *string {
		if v == nil {
			return nil
		}
		return v.IdpEntityId
	}).(pulumi.StringPtrOutput)
}

// Identity Provider (IdP) SAML metadata URL. The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) IdpMetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *string {
		if v == nil {
			return nil
		}
		return v.IdpMetadataUrl
	}).(pulumi.StringPtrOutput)
}

// PEM-encoded root CA Content for SAML IdP server verification. This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) IdpPemtrustedcasContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *string {
		if v == nil {
			return nil
		}
		return v.IdpPemtrustedcasContent
	}).(pulumi.StringPtrOutput)
}

// SAML response role attribute. Optional. Specifies the attribute in the SAML response where role information is stored, if available. Role attributes are not required for SAML authentication, but can be included in SAML assertions by most Identity Providers (IdPs) to determine user access levels or permissions.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

// Service Provider Entity ID. The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) SpEntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *string {
		if v == nil {
			return nil
		}
		return v.SpEntityId
	}).(pulumi.StringPtrOutput)
}

// SAML response subject attribute. Optional. Specifies the attribute in the SAML response where the subject identifier is stored. If not configured, the NameID attribute is used by default.
func (o ManagedDatabaseOpensearchPropertiesSamlPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseOpensearchPropertiesSaml) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabasePostgresqlComponent struct {
	// Type of the component
	Component *string `pulumi:"component"`
	// Hostname of the component
	Host *string `pulumi:"host"`
	// Port number of the component
	Port *int `pulumi:"port"`
	// Component network route type
	Route *string `pulumi:"route"`
	// Usage of the component
	Usage *string `pulumi:"usage"`
}

// ManagedDatabasePostgresqlComponentInput is an input type that accepts ManagedDatabasePostgresqlComponentArgs and ManagedDatabasePostgresqlComponentOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlComponentInput` via:
//
//	ManagedDatabasePostgresqlComponentArgs{...}
type ManagedDatabasePostgresqlComponentInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlComponentOutput() ManagedDatabasePostgresqlComponentOutput
	ToManagedDatabasePostgresqlComponentOutputWithContext(context.Context) ManagedDatabasePostgresqlComponentOutput
}

type ManagedDatabasePostgresqlComponentArgs struct {
	// Type of the component
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Hostname of the component
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Port number of the component
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Component network route type
	Route pulumi.StringPtrInput `pulumi:"route"`
	// Usage of the component
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (ManagedDatabasePostgresqlComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlComponent)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlComponentArgs) ToManagedDatabasePostgresqlComponentOutput() ManagedDatabasePostgresqlComponentOutput {
	return i.ToManagedDatabasePostgresqlComponentOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlComponentArgs) ToManagedDatabasePostgresqlComponentOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlComponentOutput)
}

// ManagedDatabasePostgresqlComponentArrayInput is an input type that accepts ManagedDatabasePostgresqlComponentArray and ManagedDatabasePostgresqlComponentArrayOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlComponentArrayInput` via:
//
//	ManagedDatabasePostgresqlComponentArray{ ManagedDatabasePostgresqlComponentArgs{...} }
type ManagedDatabasePostgresqlComponentArrayInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlComponentArrayOutput() ManagedDatabasePostgresqlComponentArrayOutput
	ToManagedDatabasePostgresqlComponentArrayOutputWithContext(context.Context) ManagedDatabasePostgresqlComponentArrayOutput
}

type ManagedDatabasePostgresqlComponentArray []ManagedDatabasePostgresqlComponentInput

func (ManagedDatabasePostgresqlComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabasePostgresqlComponent)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlComponentArray) ToManagedDatabasePostgresqlComponentArrayOutput() ManagedDatabasePostgresqlComponentArrayOutput {
	return i.ToManagedDatabasePostgresqlComponentArrayOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlComponentArray) ToManagedDatabasePostgresqlComponentArrayOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlComponentArrayOutput)
}

type ManagedDatabasePostgresqlComponentOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlComponent)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlComponentOutput) ToManagedDatabasePostgresqlComponentOutput() ManagedDatabasePostgresqlComponentOutput {
	return o
}

func (o ManagedDatabasePostgresqlComponentOutput) ToManagedDatabasePostgresqlComponentOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlComponentOutput {
	return o
}

// Type of the component
func (o ManagedDatabasePostgresqlComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Hostname of the component
func (o ManagedDatabasePostgresqlComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Port number of the component
func (o ManagedDatabasePostgresqlComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Component network route type
func (o ManagedDatabasePostgresqlComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// Usage of the component
func (o ManagedDatabasePostgresqlComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type ManagedDatabasePostgresqlComponentArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabasePostgresqlComponent)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlComponentArrayOutput) ToManagedDatabasePostgresqlComponentArrayOutput() ManagedDatabasePostgresqlComponentArrayOutput {
	return o
}

func (o ManagedDatabasePostgresqlComponentArrayOutput) ToManagedDatabasePostgresqlComponentArrayOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlComponentArrayOutput {
	return o
}

func (o ManagedDatabasePostgresqlComponentArrayOutput) Index(i pulumi.IntInput) ManagedDatabasePostgresqlComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabasePostgresqlComponent {
		return vs[0].([]ManagedDatabasePostgresqlComponent)[vs[1].(int)]
	}).(ManagedDatabasePostgresqlComponentOutput)
}

type ManagedDatabasePostgresqlNetwork struct {
	// Network family. Currently only `IPv4` is supported.
	Family string `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name string `pulumi:"name"`
	// The type of the network. Must be private.
	Type string `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid string `pulumi:"uuid"`
}

// ManagedDatabasePostgresqlNetworkInput is an input type that accepts ManagedDatabasePostgresqlNetworkArgs and ManagedDatabasePostgresqlNetworkOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlNetworkInput` via:
//
//	ManagedDatabasePostgresqlNetworkArgs{...}
type ManagedDatabasePostgresqlNetworkInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlNetworkOutput() ManagedDatabasePostgresqlNetworkOutput
	ToManagedDatabasePostgresqlNetworkOutputWithContext(context.Context) ManagedDatabasePostgresqlNetworkOutput
}

type ManagedDatabasePostgresqlNetworkArgs struct {
	// Network family. Currently only `IPv4` is supported.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the network. Must be private.
	Type pulumi.StringInput `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ManagedDatabasePostgresqlNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlNetwork)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlNetworkArgs) ToManagedDatabasePostgresqlNetworkOutput() ManagedDatabasePostgresqlNetworkOutput {
	return i.ToManagedDatabasePostgresqlNetworkOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlNetworkArgs) ToManagedDatabasePostgresqlNetworkOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlNetworkOutput)
}

// ManagedDatabasePostgresqlNetworkArrayInput is an input type that accepts ManagedDatabasePostgresqlNetworkArray and ManagedDatabasePostgresqlNetworkArrayOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlNetworkArrayInput` via:
//
//	ManagedDatabasePostgresqlNetworkArray{ ManagedDatabasePostgresqlNetworkArgs{...} }
type ManagedDatabasePostgresqlNetworkArrayInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlNetworkArrayOutput() ManagedDatabasePostgresqlNetworkArrayOutput
	ToManagedDatabasePostgresqlNetworkArrayOutputWithContext(context.Context) ManagedDatabasePostgresqlNetworkArrayOutput
}

type ManagedDatabasePostgresqlNetworkArray []ManagedDatabasePostgresqlNetworkInput

func (ManagedDatabasePostgresqlNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabasePostgresqlNetwork)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlNetworkArray) ToManagedDatabasePostgresqlNetworkArrayOutput() ManagedDatabasePostgresqlNetworkArrayOutput {
	return i.ToManagedDatabasePostgresqlNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlNetworkArray) ToManagedDatabasePostgresqlNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlNetworkArrayOutput)
}

type ManagedDatabasePostgresqlNetworkOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlNetwork)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlNetworkOutput) ToManagedDatabasePostgresqlNetworkOutput() ManagedDatabasePostgresqlNetworkOutput {
	return o
}

func (o ManagedDatabasePostgresqlNetworkOutput) ToManagedDatabasePostgresqlNetworkOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNetworkOutput {
	return o
}

// Network family. Currently only `IPv4` is supported.
func (o ManagedDatabasePostgresqlNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// The name of the network. Must be unique within the service.
func (o ManagedDatabasePostgresqlNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the network. Must be private.
func (o ManagedDatabasePostgresqlNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// Private network UUID. Must reside in the same zone as the database.
func (o ManagedDatabasePostgresqlNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type ManagedDatabasePostgresqlNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabasePostgresqlNetwork)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlNetworkArrayOutput) ToManagedDatabasePostgresqlNetworkArrayOutput() ManagedDatabasePostgresqlNetworkArrayOutput {
	return o
}

func (o ManagedDatabasePostgresqlNetworkArrayOutput) ToManagedDatabasePostgresqlNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNetworkArrayOutput {
	return o
}

func (o ManagedDatabasePostgresqlNetworkArrayOutput) Index(i pulumi.IntInput) ManagedDatabasePostgresqlNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabasePostgresqlNetwork {
		return vs[0].([]ManagedDatabasePostgresqlNetwork)[vs[1].(int)]
	}).(ManagedDatabasePostgresqlNetworkOutput)
}

type ManagedDatabasePostgresqlNodeState struct {
	// Name plus a node iteration
	Name *string `pulumi:"name"`
	// Role of the node
	Role *string `pulumi:"role"`
	// State of the node
	State *string `pulumi:"state"`
}

// ManagedDatabasePostgresqlNodeStateInput is an input type that accepts ManagedDatabasePostgresqlNodeStateArgs and ManagedDatabasePostgresqlNodeStateOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlNodeStateInput` via:
//
//	ManagedDatabasePostgresqlNodeStateArgs{...}
type ManagedDatabasePostgresqlNodeStateInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlNodeStateOutput() ManagedDatabasePostgresqlNodeStateOutput
	ToManagedDatabasePostgresqlNodeStateOutputWithContext(context.Context) ManagedDatabasePostgresqlNodeStateOutput
}

type ManagedDatabasePostgresqlNodeStateArgs struct {
	// Name plus a node iteration
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Role of the node
	Role pulumi.StringPtrInput `pulumi:"role"`
	// State of the node
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedDatabasePostgresqlNodeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlNodeState)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlNodeStateArgs) ToManagedDatabasePostgresqlNodeStateOutput() ManagedDatabasePostgresqlNodeStateOutput {
	return i.ToManagedDatabasePostgresqlNodeStateOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlNodeStateArgs) ToManagedDatabasePostgresqlNodeStateOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNodeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlNodeStateOutput)
}

// ManagedDatabasePostgresqlNodeStateArrayInput is an input type that accepts ManagedDatabasePostgresqlNodeStateArray and ManagedDatabasePostgresqlNodeStateArrayOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlNodeStateArrayInput` via:
//
//	ManagedDatabasePostgresqlNodeStateArray{ ManagedDatabasePostgresqlNodeStateArgs{...} }
type ManagedDatabasePostgresqlNodeStateArrayInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlNodeStateArrayOutput() ManagedDatabasePostgresqlNodeStateArrayOutput
	ToManagedDatabasePostgresqlNodeStateArrayOutputWithContext(context.Context) ManagedDatabasePostgresqlNodeStateArrayOutput
}

type ManagedDatabasePostgresqlNodeStateArray []ManagedDatabasePostgresqlNodeStateInput

func (ManagedDatabasePostgresqlNodeStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabasePostgresqlNodeState)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlNodeStateArray) ToManagedDatabasePostgresqlNodeStateArrayOutput() ManagedDatabasePostgresqlNodeStateArrayOutput {
	return i.ToManagedDatabasePostgresqlNodeStateArrayOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlNodeStateArray) ToManagedDatabasePostgresqlNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNodeStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlNodeStateArrayOutput)
}

type ManagedDatabasePostgresqlNodeStateOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlNodeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlNodeState)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlNodeStateOutput) ToManagedDatabasePostgresqlNodeStateOutput() ManagedDatabasePostgresqlNodeStateOutput {
	return o
}

func (o ManagedDatabasePostgresqlNodeStateOutput) ToManagedDatabasePostgresqlNodeStateOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNodeStateOutput {
	return o
}

// Name plus a node iteration
func (o ManagedDatabasePostgresqlNodeStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNodeState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Role of the node
func (o ManagedDatabasePostgresqlNodeStateOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNodeState) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// State of the node
func (o ManagedDatabasePostgresqlNodeStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlNodeState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedDatabasePostgresqlNodeStateArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlNodeStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabasePostgresqlNodeState)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlNodeStateArrayOutput) ToManagedDatabasePostgresqlNodeStateArrayOutput() ManagedDatabasePostgresqlNodeStateArrayOutput {
	return o
}

func (o ManagedDatabasePostgresqlNodeStateArrayOutput) ToManagedDatabasePostgresqlNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlNodeStateArrayOutput {
	return o
}

func (o ManagedDatabasePostgresqlNodeStateArrayOutput) Index(i pulumi.IntInput) ManagedDatabasePostgresqlNodeStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabasePostgresqlNodeState {
		return vs[0].([]ManagedDatabasePostgresqlNodeState)[vs[1].(int)]
	}).(ManagedDatabasePostgresqlNodeStateOutput)
}

type ManagedDatabasePostgresqlProperties struct {
	// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
	AdminPassword *string `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a new service is being created.
	AdminUsername *string `pulumi:"adminUsername"`
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter *bool `pulumi:"automaticUtilityNetworkIpFilter"`
	// Specifies a fraction of the table size to add to autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
	AutovacuumAnalyzeScaleFactor *float64 `pulumi:"autovacuumAnalyzeScaleFactor"`
	// Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
	AutovacuumAnalyzeThreshold *int `pulumi:"autovacuumAnalyzeThreshold"`
	// Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
	AutovacuumFreezeMaxAge *int `pulumi:"autovacuumFreezeMaxAge"`
	// Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
	AutovacuumMaxWorkers *int `pulumi:"autovacuumMaxWorkers"`
	// Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.
	AutovacuumNaptime *int `pulumi:"autovacuumNaptime"`
	// Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be used. The default value is 20 milliseconds.
	AutovacuumVacuumCostDelay *int `pulumi:"autovacuumVacuumCostDelay"`
	// Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit value will be used.
	AutovacuumVacuumCostLimit *int `pulumi:"autovacuumVacuumCostLimit"`
	// Specifies a fraction of the table size to add to autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
	AutovacuumVacuumScaleFactor *float64 `pulumi:"autovacuumVacuumScaleFactor"`
	// Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
	AutovacuumVacuumThreshold *int `pulumi:"autovacuumVacuumThreshold"`
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupHour *int `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupMinute *int `pulumi:"backupMinute"`
	// Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.
	BgwriterDelay *int `pulumi:"bgwriterDelay"`
	// Whenever more than bgwriterFlushAfter bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.
	BgwriterFlushAfter *int `pulumi:"bgwriterFlushAfter"`
	// In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.
	BgwriterLruMaxpages *int `pulumi:"bgwriterLruMaxpages"`
	// The average recent need for new buffers is multiplied by bgwriterLruMultiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
	BgwriterLruMultiplier *float64 `pulumi:"bgwriterLruMultiplier"`
	// This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
	DeadlockTimeout *int `pulumi:"deadlockTimeout"`
	// Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
	DefaultToastCompression *string `pulumi:"defaultToastCompression"`
	// Time out sessions with open transactions after this number of milliseconds.
	IdleInTransactionSessionTimeout *int `pulumi:"idleInTransactionSessionTimeout"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters []string `pulumi:"ipFilters"`
	// Controls system-wide use of Just-in-Time Compilation (JIT).
	Jit *bool `pulumi:"jit"`
	// Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
	LogAutovacuumMinDuration *int `pulumi:"logAutovacuumMinDuration"`
	// Controls the amount of detail written in the server log for each message that is logged.
	LogErrorVerbosity *string `pulumi:"logErrorVerbosity"`
	// Choose from one of the available log formats.
	LogLinePrefix *string `pulumi:"logLinePrefix"`
	// Log statements that take more than this number of milliseconds to run, -1 disables.
	LogMinDurationStatement *int `pulumi:"logMinDurationStatement"`
	// Log statements for each temporary file created larger than this number of kilobytes, -1 disables.
	LogTempFiles *int `pulumi:"logTempFiles"`
	// PostgreSQL maximum number of files that can be open per process.
	MaxFilesPerProcess *int `pulumi:"maxFilesPerProcess"`
	// PostgreSQL maximum locks per transaction.
	MaxLocksPerTransaction *int `pulumi:"maxLocksPerTransaction"`
	// PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
	MaxLogicalReplicationWorkers *int `pulumi:"maxLogicalReplicationWorkers"`
	// Sets the maximum number of workers that the system can support for parallel queries.
	MaxParallelWorkers *int `pulumi:"maxParallelWorkers"`
	// Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
	MaxParallelWorkersPerGather *int `pulumi:"maxParallelWorkersPerGather"`
	// PostgreSQL maximum predicate locks per transaction.
	MaxPredLocksPerTransaction *int `pulumi:"maxPredLocksPerTransaction"`
	// PostgreSQL maximum prepared transactions.
	MaxPreparedTransactions *int `pulumi:"maxPreparedTransactions"`
	// PostgreSQL maximum replication slots.
	MaxReplicationSlots *int `pulumi:"maxReplicationSlots"`
	// PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). walKeepSize minimum WAL size setting takes precedence over this.
	MaxSlotWalKeepSize *int `pulumi:"maxSlotWalKeepSize"`
	// Maximum depth of the stack in bytes.
	MaxStackDepth *int `pulumi:"maxStackDepth"`
	// Max standby archive delay in milliseconds.
	MaxStandbyArchiveDelay *int `pulumi:"maxStandbyArchiveDelay"`
	// Max standby streaming delay in milliseconds.
	MaxStandbyStreamingDelay *int `pulumi:"maxStandbyStreamingDelay"`
	// PostgreSQL maximum WAL senders.
	MaxWalSenders *int `pulumi:"maxWalSenders"`
	// Sets the maximum number of background processes that the system can support.
	MaxWorkerProcesses *int `pulumi:"maxWorkerProcesses"`
	// Migrate data from existing server.
	Migration *ManagedDatabasePostgresqlPropertiesMigration `pulumi:"migration"`
	// Sets the time interval to run pg_partman's scheduled tasks.
	PgPartmanBgwInterval *int `pulumi:"pgPartmanBgwInterval"`
	// Controls which role to use for pg_partman's scheduled background tasks.
	PgPartmanBgwRole *string `pulumi:"pgPartmanBgwRole"`
	// Enable pgStatMonitor extension if available for the current cluster. Enable the pgStatMonitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pgStatStatements results for utility commands are unreliable.
	PgStatMonitorEnable *bool `pulumi:"pgStatMonitorEnable"`
	// Enables or disables query plan monitoring.
	PgStatMonitorPgsmEnableQueryPlan *bool `pulumi:"pgStatMonitorPgsmEnableQueryPlan"`
	// Sets the maximum number of buckets.
	PgStatMonitorPgsmMaxBuckets *int `pulumi:"pgStatMonitorPgsmMaxBuckets"`
	// Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.
	PgStatStatementsTrack *string `pulumi:"pgStatStatementsTrack"`
	// PGBouncer connection pooling settings. System-wide settings for pgbouncer.
	Pgbouncer *ManagedDatabasePostgresqlPropertiesPgbouncer `pulumi:"pgbouncer"`
	// PGLookout settings. System-wide settings for pglookout.
	Pglookout *ManagedDatabasePostgresqlPropertiesPglookout `pulumi:"pglookout"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess *bool `pulumi:"publicAccess"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog *bool `pulumi:"serviceLog"`
	// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the sharedBuffers configuration value.
	SharedBuffersPercentage *float64 `pulumi:"sharedBuffersPercentage"`
	// Synchronous replication type. Note that the service plan also needs to support synchronous replication.
	SynchronousReplication *string `pulumi:"synchronousReplication"`
	// PostgreSQL temporary file limit in KiB, -1 for unlimited.
	TempFileLimit *int `pulumi:"tempFileLimit"`
	// TimescaleDB extension configuration values. System-wide settings for the timescaledb extension.
	Timescaledb *ManagedDatabasePostgresqlPropertiesTimescaledb `pulumi:"timescaledb"`
	// PostgreSQL service timezone.
	Timezone *string `pulumi:"timezone"`
	// Specifies the number of bytes reserved to track the currently executing command for each active session.
	TrackActivityQuerySize *int `pulumi:"trackActivityQuerySize"`
	// Record commit time of transactions.
	TrackCommitTimestamp *string `pulumi:"trackCommitTimestamp"`
	// Enables tracking of function call counts and time used.
	TrackFunctions *string `pulumi:"trackFunctions"`
	// Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
	TrackIoTiming *string `pulumi:"trackIoTiming"`
	// Variant of the PostgreSQL service, may affect the features that are exposed by default.
	Variant *string `pulumi:"variant"`
	// PostgreSQL major version.
	Version *string `pulumi:"version"`
	// Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
	WalSenderTimeout *int `pulumi:"walSenderTimeout"`
	// WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.
	WalWriterDelay *int `pulumi:"walWriterDelay"`
	// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
	WorkMem *int `pulumi:"workMem"`
}

// ManagedDatabasePostgresqlPropertiesInput is an input type that accepts ManagedDatabasePostgresqlPropertiesArgs and ManagedDatabasePostgresqlPropertiesOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesInput` via:
//
//	ManagedDatabasePostgresqlPropertiesArgs{...}
type ManagedDatabasePostgresqlPropertiesInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesOutput() ManagedDatabasePostgresqlPropertiesOutput
	ToManagedDatabasePostgresqlPropertiesOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesOutput
}

type ManagedDatabasePostgresqlPropertiesArgs struct {
	// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Custom username for admin user. This must be set only when a new service is being created.
	AdminUsername pulumi.StringPtrInput `pulumi:"adminUsername"`
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter pulumi.BoolPtrInput `pulumi:"automaticUtilityNetworkIpFilter"`
	// Specifies a fraction of the table size to add to autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
	AutovacuumAnalyzeScaleFactor pulumi.Float64PtrInput `pulumi:"autovacuumAnalyzeScaleFactor"`
	// Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
	AutovacuumAnalyzeThreshold pulumi.IntPtrInput `pulumi:"autovacuumAnalyzeThreshold"`
	// Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
	AutovacuumFreezeMaxAge pulumi.IntPtrInput `pulumi:"autovacuumFreezeMaxAge"`
	// Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
	AutovacuumMaxWorkers pulumi.IntPtrInput `pulumi:"autovacuumMaxWorkers"`
	// Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.
	AutovacuumNaptime pulumi.IntPtrInput `pulumi:"autovacuumNaptime"`
	// Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be used. The default value is 20 milliseconds.
	AutovacuumVacuumCostDelay pulumi.IntPtrInput `pulumi:"autovacuumVacuumCostDelay"`
	// Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit value will be used.
	AutovacuumVacuumCostLimit pulumi.IntPtrInput `pulumi:"autovacuumVacuumCostLimit"`
	// Specifies a fraction of the table size to add to autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
	AutovacuumVacuumScaleFactor pulumi.Float64PtrInput `pulumi:"autovacuumVacuumScaleFactor"`
	// Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
	AutovacuumVacuumThreshold pulumi.IntPtrInput `pulumi:"autovacuumVacuumThreshold"`
	// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupHour pulumi.IntPtrInput `pulumi:"backupHour"`
	// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
	BackupMinute pulumi.IntPtrInput `pulumi:"backupMinute"`
	// Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.
	BgwriterDelay pulumi.IntPtrInput `pulumi:"bgwriterDelay"`
	// Whenever more than bgwriterFlushAfter bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.
	BgwriterFlushAfter pulumi.IntPtrInput `pulumi:"bgwriterFlushAfter"`
	// In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.
	BgwriterLruMaxpages pulumi.IntPtrInput `pulumi:"bgwriterLruMaxpages"`
	// The average recent need for new buffers is multiplied by bgwriterLruMultiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
	BgwriterLruMultiplier pulumi.Float64PtrInput `pulumi:"bgwriterLruMultiplier"`
	// This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
	DeadlockTimeout pulumi.IntPtrInput `pulumi:"deadlockTimeout"`
	// Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
	DefaultToastCompression pulumi.StringPtrInput `pulumi:"defaultToastCompression"`
	// Time out sessions with open transactions after this number of milliseconds.
	IdleInTransactionSessionTimeout pulumi.IntPtrInput `pulumi:"idleInTransactionSessionTimeout"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Controls system-wide use of Just-in-Time Compilation (JIT).
	Jit pulumi.BoolPtrInput `pulumi:"jit"`
	// Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
	LogAutovacuumMinDuration pulumi.IntPtrInput `pulumi:"logAutovacuumMinDuration"`
	// Controls the amount of detail written in the server log for each message that is logged.
	LogErrorVerbosity pulumi.StringPtrInput `pulumi:"logErrorVerbosity"`
	// Choose from one of the available log formats.
	LogLinePrefix pulumi.StringPtrInput `pulumi:"logLinePrefix"`
	// Log statements that take more than this number of milliseconds to run, -1 disables.
	LogMinDurationStatement pulumi.IntPtrInput `pulumi:"logMinDurationStatement"`
	// Log statements for each temporary file created larger than this number of kilobytes, -1 disables.
	LogTempFiles pulumi.IntPtrInput `pulumi:"logTempFiles"`
	// PostgreSQL maximum number of files that can be open per process.
	MaxFilesPerProcess pulumi.IntPtrInput `pulumi:"maxFilesPerProcess"`
	// PostgreSQL maximum locks per transaction.
	MaxLocksPerTransaction pulumi.IntPtrInput `pulumi:"maxLocksPerTransaction"`
	// PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
	MaxLogicalReplicationWorkers pulumi.IntPtrInput `pulumi:"maxLogicalReplicationWorkers"`
	// Sets the maximum number of workers that the system can support for parallel queries.
	MaxParallelWorkers pulumi.IntPtrInput `pulumi:"maxParallelWorkers"`
	// Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
	MaxParallelWorkersPerGather pulumi.IntPtrInput `pulumi:"maxParallelWorkersPerGather"`
	// PostgreSQL maximum predicate locks per transaction.
	MaxPredLocksPerTransaction pulumi.IntPtrInput `pulumi:"maxPredLocksPerTransaction"`
	// PostgreSQL maximum prepared transactions.
	MaxPreparedTransactions pulumi.IntPtrInput `pulumi:"maxPreparedTransactions"`
	// PostgreSQL maximum replication slots.
	MaxReplicationSlots pulumi.IntPtrInput `pulumi:"maxReplicationSlots"`
	// PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). walKeepSize minimum WAL size setting takes precedence over this.
	MaxSlotWalKeepSize pulumi.IntPtrInput `pulumi:"maxSlotWalKeepSize"`
	// Maximum depth of the stack in bytes.
	MaxStackDepth pulumi.IntPtrInput `pulumi:"maxStackDepth"`
	// Max standby archive delay in milliseconds.
	MaxStandbyArchiveDelay pulumi.IntPtrInput `pulumi:"maxStandbyArchiveDelay"`
	// Max standby streaming delay in milliseconds.
	MaxStandbyStreamingDelay pulumi.IntPtrInput `pulumi:"maxStandbyStreamingDelay"`
	// PostgreSQL maximum WAL senders.
	MaxWalSenders pulumi.IntPtrInput `pulumi:"maxWalSenders"`
	// Sets the maximum number of background processes that the system can support.
	MaxWorkerProcesses pulumi.IntPtrInput `pulumi:"maxWorkerProcesses"`
	// Migrate data from existing server.
	Migration ManagedDatabasePostgresqlPropertiesMigrationPtrInput `pulumi:"migration"`
	// Sets the time interval to run pg_partman's scheduled tasks.
	PgPartmanBgwInterval pulumi.IntPtrInput `pulumi:"pgPartmanBgwInterval"`
	// Controls which role to use for pg_partman's scheduled background tasks.
	PgPartmanBgwRole pulumi.StringPtrInput `pulumi:"pgPartmanBgwRole"`
	// Enable pgStatMonitor extension if available for the current cluster. Enable the pgStatMonitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pgStatStatements results for utility commands are unreliable.
	PgStatMonitorEnable pulumi.BoolPtrInput `pulumi:"pgStatMonitorEnable"`
	// Enables or disables query plan monitoring.
	PgStatMonitorPgsmEnableQueryPlan pulumi.BoolPtrInput `pulumi:"pgStatMonitorPgsmEnableQueryPlan"`
	// Sets the maximum number of buckets.
	PgStatMonitorPgsmMaxBuckets pulumi.IntPtrInput `pulumi:"pgStatMonitorPgsmMaxBuckets"`
	// Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.
	PgStatStatementsTrack pulumi.StringPtrInput `pulumi:"pgStatStatementsTrack"`
	// PGBouncer connection pooling settings. System-wide settings for pgbouncer.
	Pgbouncer ManagedDatabasePostgresqlPropertiesPgbouncerPtrInput `pulumi:"pgbouncer"`
	// PGLookout settings. System-wide settings for pglookout.
	Pglookout ManagedDatabasePostgresqlPropertiesPglookoutPtrInput `pulumi:"pglookout"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess pulumi.BoolPtrInput `pulumi:"publicAccess"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog pulumi.BoolPtrInput `pulumi:"serviceLog"`
	// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the sharedBuffers configuration value.
	SharedBuffersPercentage pulumi.Float64PtrInput `pulumi:"sharedBuffersPercentage"`
	// Synchronous replication type. Note that the service plan also needs to support synchronous replication.
	SynchronousReplication pulumi.StringPtrInput `pulumi:"synchronousReplication"`
	// PostgreSQL temporary file limit in KiB, -1 for unlimited.
	TempFileLimit pulumi.IntPtrInput `pulumi:"tempFileLimit"`
	// TimescaleDB extension configuration values. System-wide settings for the timescaledb extension.
	Timescaledb ManagedDatabasePostgresqlPropertiesTimescaledbPtrInput `pulumi:"timescaledb"`
	// PostgreSQL service timezone.
	Timezone pulumi.StringPtrInput `pulumi:"timezone"`
	// Specifies the number of bytes reserved to track the currently executing command for each active session.
	TrackActivityQuerySize pulumi.IntPtrInput `pulumi:"trackActivityQuerySize"`
	// Record commit time of transactions.
	TrackCommitTimestamp pulumi.StringPtrInput `pulumi:"trackCommitTimestamp"`
	// Enables tracking of function call counts and time used.
	TrackFunctions pulumi.StringPtrInput `pulumi:"trackFunctions"`
	// Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
	TrackIoTiming pulumi.StringPtrInput `pulumi:"trackIoTiming"`
	// Variant of the PostgreSQL service, may affect the features that are exposed by default.
	Variant pulumi.StringPtrInput `pulumi:"variant"`
	// PostgreSQL major version.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
	WalSenderTimeout pulumi.IntPtrInput `pulumi:"walSenderTimeout"`
	// WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.
	WalWriterDelay pulumi.IntPtrInput `pulumi:"walWriterDelay"`
	// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
	WorkMem pulumi.IntPtrInput `pulumi:"workMem"`
}

func (ManagedDatabasePostgresqlPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlProperties)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlPropertiesArgs) ToManagedDatabasePostgresqlPropertiesOutput() ManagedDatabasePostgresqlPropertiesOutput {
	return i.ToManagedDatabasePostgresqlPropertiesOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesArgs) ToManagedDatabasePostgresqlPropertiesOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesOutput)
}

func (i ManagedDatabasePostgresqlPropertiesArgs) ToManagedDatabasePostgresqlPropertiesPtrOutput() ManagedDatabasePostgresqlPropertiesPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesArgs) ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesOutput).ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(ctx)
}

// ManagedDatabasePostgresqlPropertiesPtrInput is an input type that accepts ManagedDatabasePostgresqlPropertiesArgs, ManagedDatabasePostgresqlPropertiesPtr and ManagedDatabasePostgresqlPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesPtrInput` via:
//
//	        ManagedDatabasePostgresqlPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabasePostgresqlPropertiesPtrInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesPtrOutput() ManagedDatabasePostgresqlPropertiesPtrOutput
	ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesPtrOutput
}

type managedDatabasePostgresqlPropertiesPtrType ManagedDatabasePostgresqlPropertiesArgs

func ManagedDatabasePostgresqlPropertiesPtr(v *ManagedDatabasePostgresqlPropertiesArgs) ManagedDatabasePostgresqlPropertiesPtrInput {
	return (*managedDatabasePostgresqlPropertiesPtrType)(v)
}

func (*managedDatabasePostgresqlPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlProperties)(nil)).Elem()
}

func (i *managedDatabasePostgresqlPropertiesPtrType) ToManagedDatabasePostgresqlPropertiesPtrOutput() ManagedDatabasePostgresqlPropertiesPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedDatabasePostgresqlPropertiesPtrType) ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlProperties)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesOutput) ToManagedDatabasePostgresqlPropertiesOutput() ManagedDatabasePostgresqlPropertiesOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesOutput) ToManagedDatabasePostgresqlPropertiesOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesOutput) ToManagedDatabasePostgresqlPropertiesPtrOutput() ManagedDatabasePostgresqlPropertiesPtrOutput {
	return o.ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedDatabasePostgresqlPropertiesOutput) ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlProperties {
		return &v
	}).(ManagedDatabasePostgresqlPropertiesPtrOutput)
}

// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
func (o ManagedDatabasePostgresqlPropertiesOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a new service is being created.
func (o ManagedDatabasePostgresqlPropertiesOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.AdminUsername }).(pulumi.StringPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *bool { return v.AutomaticUtilityNetworkIpFilter }).(pulumi.BoolPtrOutput)
}

// Specifies a fraction of the table size to add to autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumAnalyzeScaleFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *float64 { return v.AutovacuumAnalyzeScaleFactor }).(pulumi.Float64PtrOutput)
}

// Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumAnalyzeThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumAnalyzeThreshold }).(pulumi.IntPtrOutput)
}

// Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumFreezeMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumFreezeMaxAge }).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumMaxWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumMaxWorkers }).(pulumi.IntPtrOutput)
}

// Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumNaptime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumNaptime }).(pulumi.IntPtrOutput)
}

// Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be used. The default value is 20 milliseconds.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumVacuumCostDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumVacuumCostDelay }).(pulumi.IntPtrOutput)
}

// Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit value will be used.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumVacuumCostLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumVacuumCostLimit }).(pulumi.IntPtrOutput)
}

// Specifies a fraction of the table size to add to autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumVacuumScaleFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *float64 { return v.AutovacuumVacuumScaleFactor }).(pulumi.Float64PtrOutput)
}

// Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
func (o ManagedDatabasePostgresqlPropertiesOutput) AutovacuumVacuumThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.AutovacuumVacuumThreshold }).(pulumi.IntPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabasePostgresqlPropertiesOutput) BackupHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.BackupHour }).(pulumi.IntPtrOutput)
}

// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabasePostgresqlPropertiesOutput) BackupMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.BackupMinute }).(pulumi.IntPtrOutput)
}

// Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.
func (o ManagedDatabasePostgresqlPropertiesOutput) BgwriterDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.BgwriterDelay }).(pulumi.IntPtrOutput)
}

// Whenever more than bgwriterFlushAfter bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.
func (o ManagedDatabasePostgresqlPropertiesOutput) BgwriterFlushAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.BgwriterFlushAfter }).(pulumi.IntPtrOutput)
}

// In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.
func (o ManagedDatabasePostgresqlPropertiesOutput) BgwriterLruMaxpages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.BgwriterLruMaxpages }).(pulumi.IntPtrOutput)
}

// The average recent need for new buffers is multiplied by bgwriterLruMultiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
func (o ManagedDatabasePostgresqlPropertiesOutput) BgwriterLruMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *float64 { return v.BgwriterLruMultiplier }).(pulumi.Float64PtrOutput)
}

// This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
func (o ManagedDatabasePostgresqlPropertiesOutput) DeadlockTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.DeadlockTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
func (o ManagedDatabasePostgresqlPropertiesOutput) DefaultToastCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.DefaultToastCompression }).(pulumi.StringPtrOutput)
}

// Time out sessions with open transactions after this number of milliseconds.
func (o ManagedDatabasePostgresqlPropertiesOutput) IdleInTransactionSessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.IdleInTransactionSessionTimeout }).(pulumi.IntPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabasePostgresqlPropertiesOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Controls system-wide use of Just-in-Time Compilation (JIT).
func (o ManagedDatabasePostgresqlPropertiesOutput) Jit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *bool { return v.Jit }).(pulumi.BoolPtrOutput)
}

// Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
func (o ManagedDatabasePostgresqlPropertiesOutput) LogAutovacuumMinDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.LogAutovacuumMinDuration }).(pulumi.IntPtrOutput)
}

// Controls the amount of detail written in the server log for each message that is logged.
func (o ManagedDatabasePostgresqlPropertiesOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.LogErrorVerbosity }).(pulumi.StringPtrOutput)
}

// Choose from one of the available log formats.
func (o ManagedDatabasePostgresqlPropertiesOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.LogLinePrefix }).(pulumi.StringPtrOutput)
}

// Log statements that take more than this number of milliseconds to run, -1 disables.
func (o ManagedDatabasePostgresqlPropertiesOutput) LogMinDurationStatement() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.LogMinDurationStatement }).(pulumi.IntPtrOutput)
}

// Log statements for each temporary file created larger than this number of kilobytes, -1 disables.
func (o ManagedDatabasePostgresqlPropertiesOutput) LogTempFiles() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.LogTempFiles }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum number of files that can be open per process.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxFilesPerProcess() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxFilesPerProcess }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum locks per transaction.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxLocksPerTransaction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxLocksPerTransaction }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxLogicalReplicationWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxLogicalReplicationWorkers }).(pulumi.IntPtrOutput)
}

// Sets the maximum number of workers that the system can support for parallel queries.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxParallelWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxParallelWorkers }).(pulumi.IntPtrOutput)
}

// Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxParallelWorkersPerGather() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxParallelWorkersPerGather }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum predicate locks per transaction.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxPredLocksPerTransaction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxPredLocksPerTransaction }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum prepared transactions.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxPreparedTransactions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxPreparedTransactions }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum replication slots.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxReplicationSlots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxReplicationSlots }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). walKeepSize minimum WAL size setting takes precedence over this.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxSlotWalKeepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxSlotWalKeepSize }).(pulumi.IntPtrOutput)
}

// Maximum depth of the stack in bytes.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxStackDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxStackDepth }).(pulumi.IntPtrOutput)
}

// Max standby archive delay in milliseconds.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxStandbyArchiveDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxStandbyArchiveDelay }).(pulumi.IntPtrOutput)
}

// Max standby streaming delay in milliseconds.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxStandbyStreamingDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxStandbyStreamingDelay }).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum WAL senders.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxWalSenders() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxWalSenders }).(pulumi.IntPtrOutput)
}

// Sets the maximum number of background processes that the system can support.
func (o ManagedDatabasePostgresqlPropertiesOutput) MaxWorkerProcesses() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.MaxWorkerProcesses }).(pulumi.IntPtrOutput)
}

// Migrate data from existing server.
func (o ManagedDatabasePostgresqlPropertiesOutput) Migration() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesMigration {
		return v.Migration
	}).(ManagedDatabasePostgresqlPropertiesMigrationPtrOutput)
}

// Sets the time interval to run pg_partman's scheduled tasks.
func (o ManagedDatabasePostgresqlPropertiesOutput) PgPartmanBgwInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.PgPartmanBgwInterval }).(pulumi.IntPtrOutput)
}

// Controls which role to use for pg_partman's scheduled background tasks.
func (o ManagedDatabasePostgresqlPropertiesOutput) PgPartmanBgwRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.PgPartmanBgwRole }).(pulumi.StringPtrOutput)
}

// Enable pgStatMonitor extension if available for the current cluster. Enable the pgStatMonitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pgStatStatements results for utility commands are unreliable.
func (o ManagedDatabasePostgresqlPropertiesOutput) PgStatMonitorEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *bool { return v.PgStatMonitorEnable }).(pulumi.BoolPtrOutput)
}

// Enables or disables query plan monitoring.
func (o ManagedDatabasePostgresqlPropertiesOutput) PgStatMonitorPgsmEnableQueryPlan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *bool { return v.PgStatMonitorPgsmEnableQueryPlan }).(pulumi.BoolPtrOutput)
}

// Sets the maximum number of buckets.
func (o ManagedDatabasePostgresqlPropertiesOutput) PgStatMonitorPgsmMaxBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.PgStatMonitorPgsmMaxBuckets }).(pulumi.IntPtrOutput)
}

// Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.
func (o ManagedDatabasePostgresqlPropertiesOutput) PgStatStatementsTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.PgStatStatementsTrack }).(pulumi.StringPtrOutput)
}

// PGBouncer connection pooling settings. System-wide settings for pgbouncer.
func (o ManagedDatabasePostgresqlPropertiesOutput) Pgbouncer() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesPgbouncer {
		return v.Pgbouncer
	}).(ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput)
}

// PGLookout settings. System-wide settings for pglookout.
func (o ManagedDatabasePostgresqlPropertiesOutput) Pglookout() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesPglookout {
		return v.Pglookout
	}).(ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabasePostgresqlPropertiesOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *bool { return v.PublicAccess }).(pulumi.BoolPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabasePostgresqlPropertiesOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *bool { return v.ServiceLog }).(pulumi.BoolPtrOutput)
}

// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the sharedBuffers configuration value.
func (o ManagedDatabasePostgresqlPropertiesOutput) SharedBuffersPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *float64 { return v.SharedBuffersPercentage }).(pulumi.Float64PtrOutput)
}

// Synchronous replication type. Note that the service plan also needs to support synchronous replication.
func (o ManagedDatabasePostgresqlPropertiesOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.SynchronousReplication }).(pulumi.StringPtrOutput)
}

// PostgreSQL temporary file limit in KiB, -1 for unlimited.
func (o ManagedDatabasePostgresqlPropertiesOutput) TempFileLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.TempFileLimit }).(pulumi.IntPtrOutput)
}

// TimescaleDB extension configuration values. System-wide settings for the timescaledb extension.
func (o ManagedDatabasePostgresqlPropertiesOutput) Timescaledb() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesTimescaledb {
		return v.Timescaledb
	}).(ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput)
}

// PostgreSQL service timezone.
func (o ManagedDatabasePostgresqlPropertiesOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

// Specifies the number of bytes reserved to track the currently executing command for each active session.
func (o ManagedDatabasePostgresqlPropertiesOutput) TrackActivityQuerySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.TrackActivityQuerySize }).(pulumi.IntPtrOutput)
}

// Record commit time of transactions.
func (o ManagedDatabasePostgresqlPropertiesOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.TrackCommitTimestamp }).(pulumi.StringPtrOutput)
}

// Enables tracking of function call counts and time used.
func (o ManagedDatabasePostgresqlPropertiesOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.TrackFunctions }).(pulumi.StringPtrOutput)
}

// Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
func (o ManagedDatabasePostgresqlPropertiesOutput) TrackIoTiming() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.TrackIoTiming }).(pulumi.StringPtrOutput)
}

// Variant of the PostgreSQL service, may affect the features that are exposed by default.
func (o ManagedDatabasePostgresqlPropertiesOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.Variant }).(pulumi.StringPtrOutput)
}

// PostgreSQL major version.
func (o ManagedDatabasePostgresqlPropertiesOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
func (o ManagedDatabasePostgresqlPropertiesOutput) WalSenderTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.WalSenderTimeout }).(pulumi.IntPtrOutput)
}

// WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.
func (o ManagedDatabasePostgresqlPropertiesOutput) WalWriterDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.WalWriterDelay }).(pulumi.IntPtrOutput)
}

// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
func (o ManagedDatabasePostgresqlPropertiesOutput) WorkMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlProperties) *int { return v.WorkMem }).(pulumi.IntPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlProperties)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesPtrOutput) ToManagedDatabasePostgresqlPropertiesPtrOutput() ManagedDatabasePostgresqlPropertiesPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPtrOutput) ToManagedDatabasePostgresqlPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Elem() ManagedDatabasePostgresqlPropertiesOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) ManagedDatabasePostgresqlProperties {
		if v != nil {
			return *v
		}
		var ret ManagedDatabasePostgresqlProperties
		return ret
	}).(ManagedDatabasePostgresqlPropertiesOutput)
}

// Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Custom username for admin user. This must be set only when a new service is being created.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutomaticUtilityNetworkIpFilter
	}).(pulumi.BoolPtrOutput)
}

// Specifies a fraction of the table size to add to autovacuumAnalyzeThreshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumAnalyzeScaleFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeScaleFactor
	}).(pulumi.Float64PtrOutput)
}

// Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumAnalyzeThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumAnalyzeThreshold
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumFreezeMaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumFreezeMaxAge
	}).(pulumi.IntPtrOutput)
}

// Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumMaxWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumMaxWorkers
	}).(pulumi.IntPtrOutput)
}

// Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumNaptime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumNaptime
	}).(pulumi.IntPtrOutput)
}

// Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuumCostDelay value will be used. The default value is 20 milliseconds.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumVacuumCostDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostDelay
	}).(pulumi.IntPtrOutput)
}

// Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuumCostLimit value will be used.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumVacuumCostLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumCostLimit
	}).(pulumi.IntPtrOutput)
}

// Specifies a fraction of the table size to add to autovacuumVacuumThreshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumVacuumScaleFactor() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumScaleFactor
	}).(pulumi.Float64PtrOutput)
}

// Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) AutovacuumVacuumThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.AutovacuumVacuumThreshold
	}).(pulumi.IntPtrOutput)
}

// The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) BackupHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BackupHour
	}).(pulumi.IntPtrOutput)
}

// The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) BackupMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BackupMinute
	}).(pulumi.IntPtrOutput)
}

// Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) BgwriterDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BgwriterDelay
	}).(pulumi.IntPtrOutput)
}

// Whenever more than bgwriterFlushAfter bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) BgwriterFlushAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BgwriterFlushAfter
	}).(pulumi.IntPtrOutput)
}

// In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) BgwriterLruMaxpages() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.BgwriterLruMaxpages
	}).(pulumi.IntPtrOutput)
}

// The average recent need for new buffers is multiplied by bgwriterLruMultiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) BgwriterLruMultiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.BgwriterLruMultiplier
	}).(pulumi.Float64PtrOutput)
}

// This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) DeadlockTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.DeadlockTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) DefaultToastCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultToastCompression
	}).(pulumi.StringPtrOutput)
}

// Time out sessions with open transactions after this number of milliseconds.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) IdleInTransactionSessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.IdleInTransactionSessionTimeout
	}).(pulumi.IntPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Controls system-wide use of Just-in-Time Compilation (JIT).
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Jit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Jit
	}).(pulumi.BoolPtrOutput)
}

// Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) LogAutovacuumMinDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.LogAutovacuumMinDuration
	}).(pulumi.IntPtrOutput)
}

// Controls the amount of detail written in the server log for each message that is logged.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) LogErrorVerbosity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.LogErrorVerbosity
	}).(pulumi.StringPtrOutput)
}

// Choose from one of the available log formats.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) LogLinePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.LogLinePrefix
	}).(pulumi.StringPtrOutput)
}

// Log statements that take more than this number of milliseconds to run, -1 disables.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) LogMinDurationStatement() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.LogMinDurationStatement
	}).(pulumi.IntPtrOutput)
}

// Log statements for each temporary file created larger than this number of kilobytes, -1 disables.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) LogTempFiles() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.LogTempFiles
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum number of files that can be open per process.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxFilesPerProcess() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxFilesPerProcess
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum locks per transaction.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxLocksPerTransaction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxLocksPerTransaction
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxLogicalReplicationWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxLogicalReplicationWorkers
	}).(pulumi.IntPtrOutput)
}

// Sets the maximum number of workers that the system can support for parallel queries.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxParallelWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkers
	}).(pulumi.IntPtrOutput)
}

// Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxParallelWorkersPerGather() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxParallelWorkersPerGather
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum predicate locks per transaction.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxPredLocksPerTransaction() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxPredLocksPerTransaction
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum prepared transactions.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxPreparedTransactions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxPreparedTransactions
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum replication slots.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxReplicationSlots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicationSlots
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). walKeepSize minimum WAL size setting takes precedence over this.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxSlotWalKeepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxSlotWalKeepSize
	}).(pulumi.IntPtrOutput)
}

// Maximum depth of the stack in bytes.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxStackDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxStackDepth
	}).(pulumi.IntPtrOutput)
}

// Max standby archive delay in milliseconds.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxStandbyArchiveDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxStandbyArchiveDelay
	}).(pulumi.IntPtrOutput)
}

// Max standby streaming delay in milliseconds.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxStandbyStreamingDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxStandbyStreamingDelay
	}).(pulumi.IntPtrOutput)
}

// PostgreSQL maximum WAL senders.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxWalSenders() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxWalSenders
	}).(pulumi.IntPtrOutput)
}

// Sets the maximum number of background processes that the system can support.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) MaxWorkerProcesses() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxWorkerProcesses
	}).(pulumi.IntPtrOutput)
}

// Migrate data from existing server.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Migration() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(ManagedDatabasePostgresqlPropertiesMigrationPtrOutput)
}

// Sets the time interval to run pg_partman's scheduled tasks.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PgPartmanBgwInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwInterval
	}).(pulumi.IntPtrOutput)
}

// Controls which role to use for pg_partman's scheduled background tasks.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PgPartmanBgwRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.PgPartmanBgwRole
	}).(pulumi.StringPtrOutput)
}

// Enable pgStatMonitor extension if available for the current cluster. Enable the pgStatMonitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pgStatStatements results for utility commands are unreliable.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PgStatMonitorEnable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PgStatMonitorEnable
	}).(pulumi.BoolPtrOutput)
}

// Enables or disables query plan monitoring.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PgStatMonitorPgsmEnableQueryPlan() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PgStatMonitorPgsmEnableQueryPlan
	}).(pulumi.BoolPtrOutput)
}

// Sets the maximum number of buckets.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PgStatMonitorPgsmMaxBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.PgStatMonitorPgsmMaxBuckets
	}).(pulumi.IntPtrOutput)
}

// Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PgStatStatementsTrack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.PgStatStatementsTrack
	}).(pulumi.StringPtrOutput)
}

// PGBouncer connection pooling settings. System-wide settings for pgbouncer.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Pgbouncer() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesPgbouncer {
		if v == nil {
			return nil
		}
		return v.Pgbouncer
	}).(ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput)
}

// PGLookout settings. System-wide settings for pglookout.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Pglookout() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesPglookout {
		if v == nil {
			return nil
		}
		return v.Pglookout
	}).(ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(pulumi.BoolPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceLog
	}).(pulumi.BoolPtrOutput)
}

// Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the sharedBuffers configuration value.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) SharedBuffersPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *float64 {
		if v == nil {
			return nil
		}
		return v.SharedBuffersPercentage
	}).(pulumi.Float64PtrOutput)
}

// Synchronous replication type. Note that the service plan also needs to support synchronous replication.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) SynchronousReplication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.SynchronousReplication
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL temporary file limit in KiB, -1 for unlimited.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) TempFileLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.TempFileLimit
	}).(pulumi.IntPtrOutput)
}

// TimescaleDB extension configuration values. System-wide settings for the timescaledb extension.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Timescaledb() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *ManagedDatabasePostgresqlPropertiesTimescaledb {
		if v == nil {
			return nil
		}
		return v.Timescaledb
	}).(ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput)
}

// PostgreSQL service timezone.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of bytes reserved to track the currently executing command for each active session.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) TrackActivityQuerySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.TrackActivityQuerySize
	}).(pulumi.IntPtrOutput)
}

// Record commit time of transactions.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) TrackCommitTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.TrackCommitTimestamp
	}).(pulumi.StringPtrOutput)
}

// Enables tracking of function call counts and time used.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) TrackFunctions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.TrackFunctions
	}).(pulumi.StringPtrOutput)
}

// Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) TrackIoTiming() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.TrackIoTiming
	}).(pulumi.StringPtrOutput)
}

// Variant of the PostgreSQL service, may affect the features that are exposed by default.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Variant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.Variant
	}).(pulumi.StringPtrOutput)
}

// PostgreSQL major version.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) WalSenderTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.WalSenderTimeout
	}).(pulumi.IntPtrOutput)
}

// WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) WalWriterDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.WalWriterDelay
	}).(pulumi.IntPtrOutput)
}

// Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
func (o ManagedDatabasePostgresqlPropertiesPtrOutput) WorkMem() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlProperties) *int {
		if v == nil {
			return nil
		}
		return v.WorkMem
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesMigration struct {
	// Database name for bootstrapping the initial connection.
	Dbname *string `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from.
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
	Method *string `pulumi:"method"`
	// Password for authentication with the server where to migrate data from.
	Password *string `pulumi:"password"`
	// Port number of the server where to migrate data from.
	Port *int `pulumi:"port"`
	// The server where to migrate data from is secured with SSL.
	Ssl *bool `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username *string `pulumi:"username"`
}

// ManagedDatabasePostgresqlPropertiesMigrationInput is an input type that accepts ManagedDatabasePostgresqlPropertiesMigrationArgs and ManagedDatabasePostgresqlPropertiesMigrationOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesMigrationInput` via:
//
//	ManagedDatabasePostgresqlPropertiesMigrationArgs{...}
type ManagedDatabasePostgresqlPropertiesMigrationInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesMigrationOutput() ManagedDatabasePostgresqlPropertiesMigrationOutput
	ToManagedDatabasePostgresqlPropertiesMigrationOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesMigrationOutput
}

type ManagedDatabasePostgresqlPropertiesMigrationArgs struct {
	// Database name for bootstrapping the initial connection.
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Password for authentication with the server where to migrate data from.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number of the server where to migrate data from.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL.
	Ssl pulumi.BoolPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ManagedDatabasePostgresqlPropertiesMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesMigration)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlPropertiesMigrationArgs) ToManagedDatabasePostgresqlPropertiesMigrationOutput() ManagedDatabasePostgresqlPropertiesMigrationOutput {
	return i.ToManagedDatabasePostgresqlPropertiesMigrationOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesMigrationArgs) ToManagedDatabasePostgresqlPropertiesMigrationOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesMigrationOutput)
}

func (i ManagedDatabasePostgresqlPropertiesMigrationArgs) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutput() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesMigrationArgs) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesMigrationOutput).ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(ctx)
}

// ManagedDatabasePostgresqlPropertiesMigrationPtrInput is an input type that accepts ManagedDatabasePostgresqlPropertiesMigrationArgs, ManagedDatabasePostgresqlPropertiesMigrationPtr and ManagedDatabasePostgresqlPropertiesMigrationPtrOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesMigrationPtrInput` via:
//
//	        ManagedDatabasePostgresqlPropertiesMigrationArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabasePostgresqlPropertiesMigrationPtrInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesMigrationPtrOutput() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput
	ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesMigrationPtrOutput
}

type managedDatabasePostgresqlPropertiesMigrationPtrType ManagedDatabasePostgresqlPropertiesMigrationArgs

func ManagedDatabasePostgresqlPropertiesMigrationPtr(v *ManagedDatabasePostgresqlPropertiesMigrationArgs) ManagedDatabasePostgresqlPropertiesMigrationPtrInput {
	return (*managedDatabasePostgresqlPropertiesMigrationPtrType)(v)
}

func (*managedDatabasePostgresqlPropertiesMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesMigration)(nil)).Elem()
}

func (i *managedDatabasePostgresqlPropertiesMigrationPtrType) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutput() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (i *managedDatabasePostgresqlPropertiesMigrationPtrType) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesMigrationPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesMigrationOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesMigration)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) ToManagedDatabasePostgresqlPropertiesMigrationOutput() ManagedDatabasePostgresqlPropertiesMigrationOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) ToManagedDatabasePostgresqlPropertiesMigrationOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesMigrationOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutput() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return o.ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabasePostgresqlPropertiesMigration) *ManagedDatabasePostgresqlPropertiesMigration {
		return &v
	}).(ManagedDatabasePostgresqlPropertiesMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection.
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The server where to migrate data from is secured with SSL.
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

// User name for authentication with the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesMigrationPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesMigration)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutput() ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) ToManagedDatabasePostgresqlPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesMigrationPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Elem() ManagedDatabasePostgresqlPropertiesMigrationOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) ManagedDatabasePostgresqlPropertiesMigration {
		if v != nil {
			return *v
		}
		var ret ManagedDatabasePostgresqlPropertiesMigration
		return ret
	}).(ManagedDatabasePostgresqlPropertiesMigrationOutput)
}

// Database name for bootstrapping the initial connection.
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The server where to migrate data from is secured with SSL.
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *bool {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.BoolPtrOutput)
}

// User name for authentication with the server where to migrate data from.
func (o ManagedDatabasePostgresqlPropertiesMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPgbouncer struct {
	// If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds].
	AutodbIdleTimeout *int `pulumi:"autodbIdleTimeout"`
	// Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.
	AutodbMaxDbConnections *int `pulumi:"autodbMaxDbConnections"`
	// PGBouncer pool mode.
	AutodbPoolMode *string `pulumi:"autodbPoolMode"`
	// If non-zero then create automatically a pool of that size per user when a pool doesn't exist.
	AutodbPoolSize *int `pulumi:"autodbPoolSize"`
	// List of parameters to ignore when given in startup packet.
	IgnoreStartupParameters []string `pulumi:"ignoreStartupParameters"`
	// Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.
	MinPoolSize *int `pulumi:"minPoolSize"`
	// If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds].
	ServerIdleTimeout *int `pulumi:"serverIdleTimeout"`
	// The pooler will close an unused server connection that has been connected longer than this. [seconds].
	ServerLifetime *int `pulumi:"serverLifetime"`
	// Run serverResetQuery (DISCARD ALL) in all pooling modes.
	ServerResetQueryAlways *bool `pulumi:"serverResetQueryAlways"`
}

// ManagedDatabasePostgresqlPropertiesPgbouncerInput is an input type that accepts ManagedDatabasePostgresqlPropertiesPgbouncerArgs and ManagedDatabasePostgresqlPropertiesPgbouncerOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesPgbouncerInput` via:
//
//	ManagedDatabasePostgresqlPropertiesPgbouncerArgs{...}
type ManagedDatabasePostgresqlPropertiesPgbouncerInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesPgbouncerOutput() ManagedDatabasePostgresqlPropertiesPgbouncerOutput
	ToManagedDatabasePostgresqlPropertiesPgbouncerOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerOutput
}

type ManagedDatabasePostgresqlPropertiesPgbouncerArgs struct {
	// If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds].
	AutodbIdleTimeout pulumi.IntPtrInput `pulumi:"autodbIdleTimeout"`
	// Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.
	AutodbMaxDbConnections pulumi.IntPtrInput `pulumi:"autodbMaxDbConnections"`
	// PGBouncer pool mode.
	AutodbPoolMode pulumi.StringPtrInput `pulumi:"autodbPoolMode"`
	// If non-zero then create automatically a pool of that size per user when a pool doesn't exist.
	AutodbPoolSize pulumi.IntPtrInput `pulumi:"autodbPoolSize"`
	// List of parameters to ignore when given in startup packet.
	IgnoreStartupParameters pulumi.StringArrayInput `pulumi:"ignoreStartupParameters"`
	// Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.
	MinPoolSize pulumi.IntPtrInput `pulumi:"minPoolSize"`
	// If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds].
	ServerIdleTimeout pulumi.IntPtrInput `pulumi:"serverIdleTimeout"`
	// The pooler will close an unused server connection that has been connected longer than this. [seconds].
	ServerLifetime pulumi.IntPtrInput `pulumi:"serverLifetime"`
	// Run serverResetQuery (DISCARD ALL) in all pooling modes.
	ServerResetQueryAlways pulumi.BoolPtrInput `pulumi:"serverResetQueryAlways"`
}

func (ManagedDatabasePostgresqlPropertiesPgbouncerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPgbouncer)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlPropertiesPgbouncerArgs) ToManagedDatabasePostgresqlPropertiesPgbouncerOutput() ManagedDatabasePostgresqlPropertiesPgbouncerOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPgbouncerOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesPgbouncerArgs) ToManagedDatabasePostgresqlPropertiesPgbouncerOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPgbouncerOutput)
}

func (i ManagedDatabasePostgresqlPropertiesPgbouncerArgs) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesPgbouncerArgs) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPgbouncerOutput).ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(ctx)
}

// ManagedDatabasePostgresqlPropertiesPgbouncerPtrInput is an input type that accepts ManagedDatabasePostgresqlPropertiesPgbouncerArgs, ManagedDatabasePostgresqlPropertiesPgbouncerPtr and ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesPgbouncerPtrInput` via:
//
//	        ManagedDatabasePostgresqlPropertiesPgbouncerArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabasePostgresqlPropertiesPgbouncerPtrInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput
	ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput
}

type managedDatabasePostgresqlPropertiesPgbouncerPtrType ManagedDatabasePostgresqlPropertiesPgbouncerArgs

func ManagedDatabasePostgresqlPropertiesPgbouncerPtr(v *ManagedDatabasePostgresqlPropertiesPgbouncerArgs) ManagedDatabasePostgresqlPropertiesPgbouncerPtrInput {
	return (*managedDatabasePostgresqlPropertiesPgbouncerPtrType)(v)
}

func (*managedDatabasePostgresqlPropertiesPgbouncerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesPgbouncer)(nil)).Elem()
}

func (i *managedDatabasePostgresqlPropertiesPgbouncerPtrType) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(context.Background())
}

func (i *managedDatabasePostgresqlPropertiesPgbouncerPtrType) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPgbouncerOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPgbouncer)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ToManagedDatabasePostgresqlPropertiesPgbouncerOutput() ManagedDatabasePostgresqlPropertiesPgbouncerOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ToManagedDatabasePostgresqlPropertiesPgbouncerOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return o.ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(context.Background())
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabasePostgresqlPropertiesPgbouncer) *ManagedDatabasePostgresqlPropertiesPgbouncer {
		return &v
	}).(ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput)
}

// If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds].
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) AutodbIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *int { return v.AutodbIdleTimeout }).(pulumi.IntPtrOutput)
}

// Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) AutodbMaxDbConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *int { return v.AutodbMaxDbConnections }).(pulumi.IntPtrOutput)
}

// PGBouncer pool mode.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *string { return v.AutodbPoolMode }).(pulumi.StringPtrOutput)
}

// If non-zero then create automatically a pool of that size per user when a pool doesn't exist.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) AutodbPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *int { return v.AutodbPoolSize }).(pulumi.IntPtrOutput)
}

// List of parameters to ignore when given in startup packet.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) []string { return v.IgnoreStartupParameters }).(pulumi.StringArrayOutput)
}

// Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) MinPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *int { return v.MinPoolSize }).(pulumi.IntPtrOutput)
}

// If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds].
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ServerIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *int { return v.ServerIdleTimeout }).(pulumi.IntPtrOutput)
}

// The pooler will close an unused server connection that has been connected longer than this. [seconds].
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ServerLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *int { return v.ServerLifetime }).(pulumi.IntPtrOutput)
}

// Run serverResetQuery (DISCARD ALL) in all pooling modes.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerOutput) ServerResetQueryAlways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPgbouncer) *bool { return v.ServerResetQueryAlways }).(pulumi.BoolPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesPgbouncer)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput() ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) ToManagedDatabasePostgresqlPropertiesPgbouncerPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) Elem() ManagedDatabasePostgresqlPropertiesPgbouncerOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) ManagedDatabasePostgresqlPropertiesPgbouncer {
		if v != nil {
			return *v
		}
		var ret ManagedDatabasePostgresqlPropertiesPgbouncer
		return ret
	}).(ManagedDatabasePostgresqlPropertiesPgbouncerOutput)
}

// If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. [seconds].
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) AutodbIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *int {
		if v == nil {
			return nil
		}
		return v.AutodbIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) AutodbMaxDbConnections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *int {
		if v == nil {
			return nil
		}
		return v.AutodbMaxDbConnections
	}).(pulumi.IntPtrOutput)
}

// PGBouncer pool mode.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) AutodbPoolMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *string {
		if v == nil {
			return nil
		}
		return v.AutodbPoolMode
	}).(pulumi.StringPtrOutput)
}

// If non-zero then create automatically a pool of that size per user when a pool doesn't exist.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) AutodbPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *int {
		if v == nil {
			return nil
		}
		return v.AutodbPoolSize
	}).(pulumi.IntPtrOutput)
}

// List of parameters to ignore when given in startup packet.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) IgnoreStartupParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreStartupParameters
	}).(pulumi.StringArrayOutput)
}

// Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) MinPoolSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *int {
		if v == nil {
			return nil
		}
		return v.MinPoolSize
	}).(pulumi.IntPtrOutput)
}

// If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. [seconds].
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) ServerIdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *int {
		if v == nil {
			return nil
		}
		return v.ServerIdleTimeout
	}).(pulumi.IntPtrOutput)
}

// The pooler will close an unused server connection that has been connected longer than this. [seconds].
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) ServerLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *int {
		if v == nil {
			return nil
		}
		return v.ServerLifetime
	}).(pulumi.IntPtrOutput)
}

// Run serverResetQuery (DISCARD ALL) in all pooling modes.
func (o ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput) ServerResetQueryAlways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPgbouncer) *bool {
		if v == nil {
			return nil
		}
		return v.ServerResetQueryAlways
	}).(pulumi.BoolPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPglookout struct {
	// Number of seconds of master unavailability before triggering database failover to standby.
	MaxFailoverReplicationTimeLag *int `pulumi:"maxFailoverReplicationTimeLag"`
}

// ManagedDatabasePostgresqlPropertiesPglookoutInput is an input type that accepts ManagedDatabasePostgresqlPropertiesPglookoutArgs and ManagedDatabasePostgresqlPropertiesPglookoutOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesPglookoutInput` via:
//
//	ManagedDatabasePostgresqlPropertiesPglookoutArgs{...}
type ManagedDatabasePostgresqlPropertiesPglookoutInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesPglookoutOutput() ManagedDatabasePostgresqlPropertiesPglookoutOutput
	ToManagedDatabasePostgresqlPropertiesPglookoutOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesPglookoutOutput
}

type ManagedDatabasePostgresqlPropertiesPglookoutArgs struct {
	// Number of seconds of master unavailability before triggering database failover to standby.
	MaxFailoverReplicationTimeLag pulumi.IntPtrInput `pulumi:"maxFailoverReplicationTimeLag"`
}

func (ManagedDatabasePostgresqlPropertiesPglookoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPglookout)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlPropertiesPglookoutArgs) ToManagedDatabasePostgresqlPropertiesPglookoutOutput() ManagedDatabasePostgresqlPropertiesPglookoutOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPglookoutOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesPglookoutArgs) ToManagedDatabasePostgresqlPropertiesPglookoutOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPglookoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPglookoutOutput)
}

func (i ManagedDatabasePostgresqlPropertiesPglookoutArgs) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutput() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesPglookoutArgs) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPglookoutOutput).ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(ctx)
}

// ManagedDatabasePostgresqlPropertiesPglookoutPtrInput is an input type that accepts ManagedDatabasePostgresqlPropertiesPglookoutArgs, ManagedDatabasePostgresqlPropertiesPglookoutPtr and ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesPglookoutPtrInput` via:
//
//	        ManagedDatabasePostgresqlPropertiesPglookoutArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabasePostgresqlPropertiesPglookoutPtrInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutput() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput
	ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput
}

type managedDatabasePostgresqlPropertiesPglookoutPtrType ManagedDatabasePostgresqlPropertiesPglookoutArgs

func ManagedDatabasePostgresqlPropertiesPglookoutPtr(v *ManagedDatabasePostgresqlPropertiesPglookoutArgs) ManagedDatabasePostgresqlPropertiesPglookoutPtrInput {
	return (*managedDatabasePostgresqlPropertiesPglookoutPtrType)(v)
}

func (*managedDatabasePostgresqlPropertiesPglookoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesPglookout)(nil)).Elem()
}

func (i *managedDatabasePostgresqlPropertiesPglookoutPtrType) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutput() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(context.Background())
}

func (i *managedDatabasePostgresqlPropertiesPglookoutPtrType) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPglookoutOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesPglookoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPglookout)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutOutput) ToManagedDatabasePostgresqlPropertiesPglookoutOutput() ManagedDatabasePostgresqlPropertiesPglookoutOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutOutput) ToManagedDatabasePostgresqlPropertiesPglookoutOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPglookoutOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutOutput) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutput() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return o.ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(context.Background())
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutOutput) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabasePostgresqlPropertiesPglookout) *ManagedDatabasePostgresqlPropertiesPglookout {
		return &v
	}).(ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput)
}

// Number of seconds of master unavailability before triggering database failover to standby.
func (o ManagedDatabasePostgresqlPropertiesPglookoutOutput) MaxFailoverReplicationTimeLag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesPglookout) *int { return v.MaxFailoverReplicationTimeLag }).(pulumi.IntPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesPglookout)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutput() ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput) ToManagedDatabasePostgresqlPropertiesPglookoutPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput) Elem() ManagedDatabasePostgresqlPropertiesPglookoutOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPglookout) ManagedDatabasePostgresqlPropertiesPglookout {
		if v != nil {
			return *v
		}
		var ret ManagedDatabasePostgresqlPropertiesPglookout
		return ret
	}).(ManagedDatabasePostgresqlPropertiesPglookoutOutput)
}

// Number of seconds of master unavailability before triggering database failover to standby.
func (o ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput) MaxFailoverReplicationTimeLag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesPglookout) *int {
		if v == nil {
			return nil
		}
		return v.MaxFailoverReplicationTimeLag
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesTimescaledb struct {
	// The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
	MaxBackgroundWorkers *int `pulumi:"maxBackgroundWorkers"`
}

// ManagedDatabasePostgresqlPropertiesTimescaledbInput is an input type that accepts ManagedDatabasePostgresqlPropertiesTimescaledbArgs and ManagedDatabasePostgresqlPropertiesTimescaledbOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesTimescaledbInput` via:
//
//	ManagedDatabasePostgresqlPropertiesTimescaledbArgs{...}
type ManagedDatabasePostgresqlPropertiesTimescaledbInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesTimescaledbOutput() ManagedDatabasePostgresqlPropertiesTimescaledbOutput
	ToManagedDatabasePostgresqlPropertiesTimescaledbOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbOutput
}

type ManagedDatabasePostgresqlPropertiesTimescaledbArgs struct {
	// The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
	MaxBackgroundWorkers pulumi.IntPtrInput `pulumi:"maxBackgroundWorkers"`
}

func (ManagedDatabasePostgresqlPropertiesTimescaledbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesTimescaledb)(nil)).Elem()
}

func (i ManagedDatabasePostgresqlPropertiesTimescaledbArgs) ToManagedDatabasePostgresqlPropertiesTimescaledbOutput() ManagedDatabasePostgresqlPropertiesTimescaledbOutput {
	return i.ToManagedDatabasePostgresqlPropertiesTimescaledbOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesTimescaledbArgs) ToManagedDatabasePostgresqlPropertiesTimescaledbOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesTimescaledbOutput)
}

func (i ManagedDatabasePostgresqlPropertiesTimescaledbArgs) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(context.Background())
}

func (i ManagedDatabasePostgresqlPropertiesTimescaledbArgs) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesTimescaledbOutput).ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(ctx)
}

// ManagedDatabasePostgresqlPropertiesTimescaledbPtrInput is an input type that accepts ManagedDatabasePostgresqlPropertiesTimescaledbArgs, ManagedDatabasePostgresqlPropertiesTimescaledbPtr and ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput values.
// You can construct a concrete instance of `ManagedDatabasePostgresqlPropertiesTimescaledbPtrInput` via:
//
//	        ManagedDatabasePostgresqlPropertiesTimescaledbArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabasePostgresqlPropertiesTimescaledbPtrInput interface {
	pulumi.Input

	ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput
	ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput
}

type managedDatabasePostgresqlPropertiesTimescaledbPtrType ManagedDatabasePostgresqlPropertiesTimescaledbArgs

func ManagedDatabasePostgresqlPropertiesTimescaledbPtr(v *ManagedDatabasePostgresqlPropertiesTimescaledbArgs) ManagedDatabasePostgresqlPropertiesTimescaledbPtrInput {
	return (*managedDatabasePostgresqlPropertiesTimescaledbPtrType)(v)
}

func (*managedDatabasePostgresqlPropertiesTimescaledbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesTimescaledb)(nil)).Elem()
}

func (i *managedDatabasePostgresqlPropertiesTimescaledbPtrType) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return i.ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(context.Background())
}

func (i *managedDatabasePostgresqlPropertiesTimescaledbPtrType) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesTimescaledbOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesTimescaledbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesTimescaledb)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbOutput) ToManagedDatabasePostgresqlPropertiesTimescaledbOutput() ManagedDatabasePostgresqlPropertiesTimescaledbOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbOutput) ToManagedDatabasePostgresqlPropertiesTimescaledbOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbOutput) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return o.ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(context.Background())
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbOutput) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabasePostgresqlPropertiesTimescaledb) *ManagedDatabasePostgresqlPropertiesTimescaledb {
		return &v
	}).(ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput)
}

// The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
func (o ManagedDatabasePostgresqlPropertiesTimescaledbOutput) MaxBackgroundWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabasePostgresqlPropertiesTimescaledb) *int { return v.MaxBackgroundWorkers }).(pulumi.IntPtrOutput)
}

type ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabasePostgresqlPropertiesTimescaledb)(nil)).Elem()
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput() ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput) ToManagedDatabasePostgresqlPropertiesTimescaledbPtrOutputWithContext(ctx context.Context) ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput {
	return o
}

func (o ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput) Elem() ManagedDatabasePostgresqlPropertiesTimescaledbOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesTimescaledb) ManagedDatabasePostgresqlPropertiesTimescaledb {
		if v != nil {
			return *v
		}
		var ret ManagedDatabasePostgresqlPropertiesTimescaledb
		return ret
	}).(ManagedDatabasePostgresqlPropertiesTimescaledbOutput)
}

// The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
func (o ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput) MaxBackgroundWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabasePostgresqlPropertiesTimescaledb) *int {
		if v == nil {
			return nil
		}
		return v.MaxBackgroundWorkers
	}).(pulumi.IntPtrOutput)
}

type ManagedDatabaseRedisComponent struct {
	// Type of the component
	Component *string `pulumi:"component"`
	// Hostname of the component
	Host *string `pulumi:"host"`
	// Port number of the component
	Port *int `pulumi:"port"`
	// Component network route type
	Route *string `pulumi:"route"`
	// Usage of the component
	Usage *string `pulumi:"usage"`
}

// ManagedDatabaseRedisComponentInput is an input type that accepts ManagedDatabaseRedisComponentArgs and ManagedDatabaseRedisComponentOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisComponentInput` via:
//
//	ManagedDatabaseRedisComponentArgs{...}
type ManagedDatabaseRedisComponentInput interface {
	pulumi.Input

	ToManagedDatabaseRedisComponentOutput() ManagedDatabaseRedisComponentOutput
	ToManagedDatabaseRedisComponentOutputWithContext(context.Context) ManagedDatabaseRedisComponentOutput
}

type ManagedDatabaseRedisComponentArgs struct {
	// Type of the component
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Hostname of the component
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Port number of the component
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Component network route type
	Route pulumi.StringPtrInput `pulumi:"route"`
	// Usage of the component
	Usage pulumi.StringPtrInput `pulumi:"usage"`
}

func (ManagedDatabaseRedisComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisComponent)(nil)).Elem()
}

func (i ManagedDatabaseRedisComponentArgs) ToManagedDatabaseRedisComponentOutput() ManagedDatabaseRedisComponentOutput {
	return i.ToManagedDatabaseRedisComponentOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisComponentArgs) ToManagedDatabaseRedisComponentOutputWithContext(ctx context.Context) ManagedDatabaseRedisComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisComponentOutput)
}

// ManagedDatabaseRedisComponentArrayInput is an input type that accepts ManagedDatabaseRedisComponentArray and ManagedDatabaseRedisComponentArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisComponentArrayInput` via:
//
//	ManagedDatabaseRedisComponentArray{ ManagedDatabaseRedisComponentArgs{...} }
type ManagedDatabaseRedisComponentArrayInput interface {
	pulumi.Input

	ToManagedDatabaseRedisComponentArrayOutput() ManagedDatabaseRedisComponentArrayOutput
	ToManagedDatabaseRedisComponentArrayOutputWithContext(context.Context) ManagedDatabaseRedisComponentArrayOutput
}

type ManagedDatabaseRedisComponentArray []ManagedDatabaseRedisComponentInput

func (ManagedDatabaseRedisComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseRedisComponent)(nil)).Elem()
}

func (i ManagedDatabaseRedisComponentArray) ToManagedDatabaseRedisComponentArrayOutput() ManagedDatabaseRedisComponentArrayOutput {
	return i.ToManagedDatabaseRedisComponentArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisComponentArray) ToManagedDatabaseRedisComponentArrayOutputWithContext(ctx context.Context) ManagedDatabaseRedisComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisComponentArrayOutput)
}

type ManagedDatabaseRedisComponentOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisComponent)(nil)).Elem()
}

func (o ManagedDatabaseRedisComponentOutput) ToManagedDatabaseRedisComponentOutput() ManagedDatabaseRedisComponentOutput {
	return o
}

func (o ManagedDatabaseRedisComponentOutput) ToManagedDatabaseRedisComponentOutputWithContext(ctx context.Context) ManagedDatabaseRedisComponentOutput {
	return o
}

// Type of the component
func (o ManagedDatabaseRedisComponentOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisComponent) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Hostname of the component
func (o ManagedDatabaseRedisComponentOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisComponent) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Port number of the component
func (o ManagedDatabaseRedisComponentOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisComponent) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Component network route type
func (o ManagedDatabaseRedisComponentOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisComponent) *string { return v.Route }).(pulumi.StringPtrOutput)
}

// Usage of the component
func (o ManagedDatabaseRedisComponentOutput) Usage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisComponent) *string { return v.Usage }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseRedisComponentArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseRedisComponent)(nil)).Elem()
}

func (o ManagedDatabaseRedisComponentArrayOutput) ToManagedDatabaseRedisComponentArrayOutput() ManagedDatabaseRedisComponentArrayOutput {
	return o
}

func (o ManagedDatabaseRedisComponentArrayOutput) ToManagedDatabaseRedisComponentArrayOutputWithContext(ctx context.Context) ManagedDatabaseRedisComponentArrayOutput {
	return o
}

func (o ManagedDatabaseRedisComponentArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseRedisComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseRedisComponent {
		return vs[0].([]ManagedDatabaseRedisComponent)[vs[1].(int)]
	}).(ManagedDatabaseRedisComponentOutput)
}

type ManagedDatabaseRedisNetwork struct {
	// Network family. Currently only `IPv4` is supported.
	Family string `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name string `pulumi:"name"`
	// The type of the network. Must be private.
	Type string `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid string `pulumi:"uuid"`
}

// ManagedDatabaseRedisNetworkInput is an input type that accepts ManagedDatabaseRedisNetworkArgs and ManagedDatabaseRedisNetworkOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisNetworkInput` via:
//
//	ManagedDatabaseRedisNetworkArgs{...}
type ManagedDatabaseRedisNetworkInput interface {
	pulumi.Input

	ToManagedDatabaseRedisNetworkOutput() ManagedDatabaseRedisNetworkOutput
	ToManagedDatabaseRedisNetworkOutputWithContext(context.Context) ManagedDatabaseRedisNetworkOutput
}

type ManagedDatabaseRedisNetworkArgs struct {
	// Network family. Currently only `IPv4` is supported.
	Family pulumi.StringInput `pulumi:"family"`
	// The name of the network. Must be unique within the service.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the network. Must be private.
	Type pulumi.StringInput `pulumi:"type"`
	// Private network UUID. Must reside in the same zone as the database.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (ManagedDatabaseRedisNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisNetwork)(nil)).Elem()
}

func (i ManagedDatabaseRedisNetworkArgs) ToManagedDatabaseRedisNetworkOutput() ManagedDatabaseRedisNetworkOutput {
	return i.ToManagedDatabaseRedisNetworkOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisNetworkArgs) ToManagedDatabaseRedisNetworkOutputWithContext(ctx context.Context) ManagedDatabaseRedisNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisNetworkOutput)
}

// ManagedDatabaseRedisNetworkArrayInput is an input type that accepts ManagedDatabaseRedisNetworkArray and ManagedDatabaseRedisNetworkArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisNetworkArrayInput` via:
//
//	ManagedDatabaseRedisNetworkArray{ ManagedDatabaseRedisNetworkArgs{...} }
type ManagedDatabaseRedisNetworkArrayInput interface {
	pulumi.Input

	ToManagedDatabaseRedisNetworkArrayOutput() ManagedDatabaseRedisNetworkArrayOutput
	ToManagedDatabaseRedisNetworkArrayOutputWithContext(context.Context) ManagedDatabaseRedisNetworkArrayOutput
}

type ManagedDatabaseRedisNetworkArray []ManagedDatabaseRedisNetworkInput

func (ManagedDatabaseRedisNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseRedisNetwork)(nil)).Elem()
}

func (i ManagedDatabaseRedisNetworkArray) ToManagedDatabaseRedisNetworkArrayOutput() ManagedDatabaseRedisNetworkArrayOutput {
	return i.ToManagedDatabaseRedisNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisNetworkArray) ToManagedDatabaseRedisNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabaseRedisNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisNetworkArrayOutput)
}

type ManagedDatabaseRedisNetworkOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisNetwork)(nil)).Elem()
}

func (o ManagedDatabaseRedisNetworkOutput) ToManagedDatabaseRedisNetworkOutput() ManagedDatabaseRedisNetworkOutput {
	return o
}

func (o ManagedDatabaseRedisNetworkOutput) ToManagedDatabaseRedisNetworkOutputWithContext(ctx context.Context) ManagedDatabaseRedisNetworkOutput {
	return o
}

// Network family. Currently only `IPv4` is supported.
func (o ManagedDatabaseRedisNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// The name of the network. Must be unique within the service.
func (o ManagedDatabaseRedisNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the network. Must be private.
func (o ManagedDatabaseRedisNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// Private network UUID. Must reside in the same zone as the database.
func (o ManagedDatabaseRedisNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type ManagedDatabaseRedisNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseRedisNetwork)(nil)).Elem()
}

func (o ManagedDatabaseRedisNetworkArrayOutput) ToManagedDatabaseRedisNetworkArrayOutput() ManagedDatabaseRedisNetworkArrayOutput {
	return o
}

func (o ManagedDatabaseRedisNetworkArrayOutput) ToManagedDatabaseRedisNetworkArrayOutputWithContext(ctx context.Context) ManagedDatabaseRedisNetworkArrayOutput {
	return o
}

func (o ManagedDatabaseRedisNetworkArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseRedisNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseRedisNetwork {
		return vs[0].([]ManagedDatabaseRedisNetwork)[vs[1].(int)]
	}).(ManagedDatabaseRedisNetworkOutput)
}

type ManagedDatabaseRedisNodeState struct {
	// Name plus a node iteration
	Name *string `pulumi:"name"`
	// Role of the node
	Role *string `pulumi:"role"`
	// State of the node
	State *string `pulumi:"state"`
}

// ManagedDatabaseRedisNodeStateInput is an input type that accepts ManagedDatabaseRedisNodeStateArgs and ManagedDatabaseRedisNodeStateOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisNodeStateInput` via:
//
//	ManagedDatabaseRedisNodeStateArgs{...}
type ManagedDatabaseRedisNodeStateInput interface {
	pulumi.Input

	ToManagedDatabaseRedisNodeStateOutput() ManagedDatabaseRedisNodeStateOutput
	ToManagedDatabaseRedisNodeStateOutputWithContext(context.Context) ManagedDatabaseRedisNodeStateOutput
}

type ManagedDatabaseRedisNodeStateArgs struct {
	// Name plus a node iteration
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Role of the node
	Role pulumi.StringPtrInput `pulumi:"role"`
	// State of the node
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedDatabaseRedisNodeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisNodeState)(nil)).Elem()
}

func (i ManagedDatabaseRedisNodeStateArgs) ToManagedDatabaseRedisNodeStateOutput() ManagedDatabaseRedisNodeStateOutput {
	return i.ToManagedDatabaseRedisNodeStateOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisNodeStateArgs) ToManagedDatabaseRedisNodeStateOutputWithContext(ctx context.Context) ManagedDatabaseRedisNodeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisNodeStateOutput)
}

// ManagedDatabaseRedisNodeStateArrayInput is an input type that accepts ManagedDatabaseRedisNodeStateArray and ManagedDatabaseRedisNodeStateArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisNodeStateArrayInput` via:
//
//	ManagedDatabaseRedisNodeStateArray{ ManagedDatabaseRedisNodeStateArgs{...} }
type ManagedDatabaseRedisNodeStateArrayInput interface {
	pulumi.Input

	ToManagedDatabaseRedisNodeStateArrayOutput() ManagedDatabaseRedisNodeStateArrayOutput
	ToManagedDatabaseRedisNodeStateArrayOutputWithContext(context.Context) ManagedDatabaseRedisNodeStateArrayOutput
}

type ManagedDatabaseRedisNodeStateArray []ManagedDatabaseRedisNodeStateInput

func (ManagedDatabaseRedisNodeStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseRedisNodeState)(nil)).Elem()
}

func (i ManagedDatabaseRedisNodeStateArray) ToManagedDatabaseRedisNodeStateArrayOutput() ManagedDatabaseRedisNodeStateArrayOutput {
	return i.ToManagedDatabaseRedisNodeStateArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisNodeStateArray) ToManagedDatabaseRedisNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabaseRedisNodeStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisNodeStateArrayOutput)
}

type ManagedDatabaseRedisNodeStateOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisNodeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisNodeState)(nil)).Elem()
}

func (o ManagedDatabaseRedisNodeStateOutput) ToManagedDatabaseRedisNodeStateOutput() ManagedDatabaseRedisNodeStateOutput {
	return o
}

func (o ManagedDatabaseRedisNodeStateOutput) ToManagedDatabaseRedisNodeStateOutputWithContext(ctx context.Context) ManagedDatabaseRedisNodeStateOutput {
	return o
}

// Name plus a node iteration
func (o ManagedDatabaseRedisNodeStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNodeState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Role of the node
func (o ManagedDatabaseRedisNodeStateOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNodeState) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// State of the node
func (o ManagedDatabaseRedisNodeStateOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisNodeState) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseRedisNodeStateArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisNodeStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseRedisNodeState)(nil)).Elem()
}

func (o ManagedDatabaseRedisNodeStateArrayOutput) ToManagedDatabaseRedisNodeStateArrayOutput() ManagedDatabaseRedisNodeStateArrayOutput {
	return o
}

func (o ManagedDatabaseRedisNodeStateArrayOutput) ToManagedDatabaseRedisNodeStateArrayOutputWithContext(ctx context.Context) ManagedDatabaseRedisNodeStateArrayOutput {
	return o
}

func (o ManagedDatabaseRedisNodeStateArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseRedisNodeStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseRedisNodeState {
		return vs[0].([]ManagedDatabaseRedisNodeState)[vs[1].(int)]
	}).(ManagedDatabaseRedisNodeStateOutput)
}

type ManagedDatabaseRedisProperties struct {
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter *bool `pulumi:"automaticUtilityNetworkIpFilter"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters []string `pulumi:"ipFilters"`
	// Migrate data from existing server.
	Migration *ManagedDatabaseRedisPropertiesMigration `pulumi:"migration"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess *bool `pulumi:"publicAccess"`
	// Default ACL for pub/sub channels used when Redis user is created. Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, allChannels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
	RedisAclChannelsDefault *string `pulumi:"redisAclChannelsDefault"`
	// Redis IO thread count. Set Redis IO thread count. Changing this will cause a restart of the Redis service.
	RedisIoThreads *int `pulumi:"redisIoThreads"`
	// LFU maxmemory-policy counter decay time in minutes.
	RedisLfuDecayTime *int `pulumi:"redisLfuDecayTime"`
	// Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies.
	RedisLfuLogFactor *int `pulumi:"redisLfuLogFactor"`
	// Redis maxmemory-policy.
	RedisMaxmemoryPolicy *string `pulumi:"redisMaxmemoryPolicy"`
	// Set notify-keyspace-events option.
	RedisNotifyKeyspaceEvents *string `pulumi:"redisNotifyKeyspaceEvents"`
	// Number of Redis databases. Set number of Redis databases. Changing this will cause a restart of the Redis service.
	RedisNumberOfDatabases *int `pulumi:"redisNumberOfDatabases"`
	// Redis persistence. When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to the backup schedule for backup purposes. When persistence is 'off', no RDB dumps or backups are done, so data can be lost at any moment if the service is restarted for any reason, or if the service is powered off. Also, the service can't be forked.
	RedisPersistence *string `pulumi:"redisPersistence"`
	// Pub/sub client output buffer hard limit in MB. Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
	RedisPubsubClientOutputBufferLimit *int `pulumi:"redisPubsubClientOutputBufferLimit"`
	// Require SSL to access Redis.
	RedisSsl *bool `pulumi:"redisSsl"`
	// Redis idle connection timeout in seconds.
	RedisTimeout *int `pulumi:"redisTimeout"`
	// Redis major version.
	RedisVersion *string `pulumi:"redisVersion"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog *bool `pulumi:"serviceLog"`
}

// ManagedDatabaseRedisPropertiesInput is an input type that accepts ManagedDatabaseRedisPropertiesArgs and ManagedDatabaseRedisPropertiesOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisPropertiesInput` via:
//
//	ManagedDatabaseRedisPropertiesArgs{...}
type ManagedDatabaseRedisPropertiesInput interface {
	pulumi.Input

	ToManagedDatabaseRedisPropertiesOutput() ManagedDatabaseRedisPropertiesOutput
	ToManagedDatabaseRedisPropertiesOutputWithContext(context.Context) ManagedDatabaseRedisPropertiesOutput
}

type ManagedDatabaseRedisPropertiesArgs struct {
	// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
	AutomaticUtilityNetworkIpFilter pulumi.BoolPtrInput `pulumi:"automaticUtilityNetworkIpFilter"`
	// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
	IpFilters pulumi.StringArrayInput `pulumi:"ipFilters"`
	// Migrate data from existing server.
	Migration ManagedDatabaseRedisPropertiesMigrationPtrInput `pulumi:"migration"`
	// Public Access. Allow access to the service from the public Internet.
	PublicAccess pulumi.BoolPtrInput `pulumi:"publicAccess"`
	// Default ACL for pub/sub channels used when Redis user is created. Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, allChannels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
	RedisAclChannelsDefault pulumi.StringPtrInput `pulumi:"redisAclChannelsDefault"`
	// Redis IO thread count. Set Redis IO thread count. Changing this will cause a restart of the Redis service.
	RedisIoThreads pulumi.IntPtrInput `pulumi:"redisIoThreads"`
	// LFU maxmemory-policy counter decay time in minutes.
	RedisLfuDecayTime pulumi.IntPtrInput `pulumi:"redisLfuDecayTime"`
	// Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies.
	RedisLfuLogFactor pulumi.IntPtrInput `pulumi:"redisLfuLogFactor"`
	// Redis maxmemory-policy.
	RedisMaxmemoryPolicy pulumi.StringPtrInput `pulumi:"redisMaxmemoryPolicy"`
	// Set notify-keyspace-events option.
	RedisNotifyKeyspaceEvents pulumi.StringPtrInput `pulumi:"redisNotifyKeyspaceEvents"`
	// Number of Redis databases. Set number of Redis databases. Changing this will cause a restart of the Redis service.
	RedisNumberOfDatabases pulumi.IntPtrInput `pulumi:"redisNumberOfDatabases"`
	// Redis persistence. When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to the backup schedule for backup purposes. When persistence is 'off', no RDB dumps or backups are done, so data can be lost at any moment if the service is restarted for any reason, or if the service is powered off. Also, the service can't be forked.
	RedisPersistence pulumi.StringPtrInput `pulumi:"redisPersistence"`
	// Pub/sub client output buffer hard limit in MB. Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
	RedisPubsubClientOutputBufferLimit pulumi.IntPtrInput `pulumi:"redisPubsubClientOutputBufferLimit"`
	// Require SSL to access Redis.
	RedisSsl pulumi.BoolPtrInput `pulumi:"redisSsl"`
	// Redis idle connection timeout in seconds.
	RedisTimeout pulumi.IntPtrInput `pulumi:"redisTimeout"`
	// Redis major version.
	RedisVersion pulumi.StringPtrInput `pulumi:"redisVersion"`
	// Service logging. Store logs for the service so that they are available in the HTTP API and console.
	ServiceLog pulumi.BoolPtrInput `pulumi:"serviceLog"`
}

func (ManagedDatabaseRedisPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisProperties)(nil)).Elem()
}

func (i ManagedDatabaseRedisPropertiesArgs) ToManagedDatabaseRedisPropertiesOutput() ManagedDatabaseRedisPropertiesOutput {
	return i.ToManagedDatabaseRedisPropertiesOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisPropertiesArgs) ToManagedDatabaseRedisPropertiesOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisPropertiesOutput)
}

func (i ManagedDatabaseRedisPropertiesArgs) ToManagedDatabaseRedisPropertiesPtrOutput() ManagedDatabaseRedisPropertiesPtrOutput {
	return i.ToManagedDatabaseRedisPropertiesPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisPropertiesArgs) ToManagedDatabaseRedisPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisPropertiesOutput).ToManagedDatabaseRedisPropertiesPtrOutputWithContext(ctx)
}

// ManagedDatabaseRedisPropertiesPtrInput is an input type that accepts ManagedDatabaseRedisPropertiesArgs, ManagedDatabaseRedisPropertiesPtr and ManagedDatabaseRedisPropertiesPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisPropertiesPtrInput` via:
//
//	        ManagedDatabaseRedisPropertiesArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseRedisPropertiesPtrInput interface {
	pulumi.Input

	ToManagedDatabaseRedisPropertiesPtrOutput() ManagedDatabaseRedisPropertiesPtrOutput
	ToManagedDatabaseRedisPropertiesPtrOutputWithContext(context.Context) ManagedDatabaseRedisPropertiesPtrOutput
}

type managedDatabaseRedisPropertiesPtrType ManagedDatabaseRedisPropertiesArgs

func ManagedDatabaseRedisPropertiesPtr(v *ManagedDatabaseRedisPropertiesArgs) ManagedDatabaseRedisPropertiesPtrInput {
	return (*managedDatabaseRedisPropertiesPtrType)(v)
}

func (*managedDatabaseRedisPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseRedisProperties)(nil)).Elem()
}

func (i *managedDatabaseRedisPropertiesPtrType) ToManagedDatabaseRedisPropertiesPtrOutput() ManagedDatabaseRedisPropertiesPtrOutput {
	return i.ToManagedDatabaseRedisPropertiesPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseRedisPropertiesPtrType) ToManagedDatabaseRedisPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisPropertiesPtrOutput)
}

type ManagedDatabaseRedisPropertiesOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisProperties)(nil)).Elem()
}

func (o ManagedDatabaseRedisPropertiesOutput) ToManagedDatabaseRedisPropertiesOutput() ManagedDatabaseRedisPropertiesOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesOutput) ToManagedDatabaseRedisPropertiesOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesOutput) ToManagedDatabaseRedisPropertiesPtrOutput() ManagedDatabaseRedisPropertiesPtrOutput {
	return o.ToManagedDatabaseRedisPropertiesPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseRedisPropertiesOutput) ToManagedDatabaseRedisPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseRedisProperties) *ManagedDatabaseRedisProperties {
		return &v
	}).(ManagedDatabaseRedisPropertiesPtrOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabaseRedisPropertiesOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *bool { return v.AutomaticUtilityNetworkIpFilter }).(pulumi.BoolPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabaseRedisPropertiesOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) []string { return v.IpFilters }).(pulumi.StringArrayOutput)
}

// Migrate data from existing server.
func (o ManagedDatabaseRedisPropertiesOutput) Migration() ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *ManagedDatabaseRedisPropertiesMigration { return v.Migration }).(ManagedDatabaseRedisPropertiesMigrationPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabaseRedisPropertiesOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *bool { return v.PublicAccess }).(pulumi.BoolPtrOutput)
}

// Default ACL for pub/sub channels used when Redis user is created. Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, allChannels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
func (o ManagedDatabaseRedisPropertiesOutput) RedisAclChannelsDefault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *string { return v.RedisAclChannelsDefault }).(pulumi.StringPtrOutput)
}

// Redis IO thread count. Set Redis IO thread count. Changing this will cause a restart of the Redis service.
func (o ManagedDatabaseRedisPropertiesOutput) RedisIoThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *int { return v.RedisIoThreads }).(pulumi.IntPtrOutput)
}

// LFU maxmemory-policy counter decay time in minutes.
func (o ManagedDatabaseRedisPropertiesOutput) RedisLfuDecayTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *int { return v.RedisLfuDecayTime }).(pulumi.IntPtrOutput)
}

// Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies.
func (o ManagedDatabaseRedisPropertiesOutput) RedisLfuLogFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *int { return v.RedisLfuLogFactor }).(pulumi.IntPtrOutput)
}

// Redis maxmemory-policy.
func (o ManagedDatabaseRedisPropertiesOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *string { return v.RedisMaxmemoryPolicy }).(pulumi.StringPtrOutput)
}

// Set notify-keyspace-events option.
func (o ManagedDatabaseRedisPropertiesOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *string { return v.RedisNotifyKeyspaceEvents }).(pulumi.StringPtrOutput)
}

// Number of Redis databases. Set number of Redis databases. Changing this will cause a restart of the Redis service.
func (o ManagedDatabaseRedisPropertiesOutput) RedisNumberOfDatabases() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *int { return v.RedisNumberOfDatabases }).(pulumi.IntPtrOutput)
}

// Redis persistence. When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to the backup schedule for backup purposes. When persistence is 'off', no RDB dumps or backups are done, so data can be lost at any moment if the service is restarted for any reason, or if the service is powered off. Also, the service can't be forked.
func (o ManagedDatabaseRedisPropertiesOutput) RedisPersistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *string { return v.RedisPersistence }).(pulumi.StringPtrOutput)
}

// Pub/sub client output buffer hard limit in MB. Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
func (o ManagedDatabaseRedisPropertiesOutput) RedisPubsubClientOutputBufferLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *int { return v.RedisPubsubClientOutputBufferLimit }).(pulumi.IntPtrOutput)
}

// Require SSL to access Redis.
func (o ManagedDatabaseRedisPropertiesOutput) RedisSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *bool { return v.RedisSsl }).(pulumi.BoolPtrOutput)
}

// Redis idle connection timeout in seconds.
func (o ManagedDatabaseRedisPropertiesOutput) RedisTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *int { return v.RedisTimeout }).(pulumi.IntPtrOutput)
}

// Redis major version.
func (o ManagedDatabaseRedisPropertiesOutput) RedisVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *string { return v.RedisVersion }).(pulumi.StringPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabaseRedisPropertiesOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisProperties) *bool { return v.ServiceLog }).(pulumi.BoolPtrOutput)
}

type ManagedDatabaseRedisPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseRedisProperties)(nil)).Elem()
}

func (o ManagedDatabaseRedisPropertiesPtrOutput) ToManagedDatabaseRedisPropertiesPtrOutput() ManagedDatabaseRedisPropertiesPtrOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesPtrOutput) ToManagedDatabaseRedisPropertiesPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesPtrOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesPtrOutput) Elem() ManagedDatabaseRedisPropertiesOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) ManagedDatabaseRedisProperties {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseRedisProperties
		return ret
	}).(ManagedDatabaseRedisPropertiesOutput)
}

// Automatic utility network IP Filter. Automatically allow connections from servers in the utility network within the same zone.
func (o ManagedDatabaseRedisPropertiesPtrOutput) AutomaticUtilityNetworkIpFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AutomaticUtilityNetworkIpFilter
	}).(pulumi.BoolPtrOutput)
}

// IP filter. Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
func (o ManagedDatabaseRedisPropertiesPtrOutput) IpFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) []string {
		if v == nil {
			return nil
		}
		return v.IpFilters
	}).(pulumi.StringArrayOutput)
}

// Migrate data from existing server.
func (o ManagedDatabaseRedisPropertiesPtrOutput) Migration() ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *ManagedDatabaseRedisPropertiesMigration {
		if v == nil {
			return nil
		}
		return v.Migration
	}).(ManagedDatabaseRedisPropertiesMigrationPtrOutput)
}

// Public Access. Allow access to the service from the public Internet.
func (o ManagedDatabaseRedisPropertiesPtrOutput) PublicAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *bool {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(pulumi.BoolPtrOutput)
}

// Default ACL for pub/sub channels used when Redis user is created. Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, allChannels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisAclChannelsDefault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *string {
		if v == nil {
			return nil
		}
		return v.RedisAclChannelsDefault
	}).(pulumi.StringPtrOutput)
}

// Redis IO thread count. Set Redis IO thread count. Changing this will cause a restart of the Redis service.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisIoThreads() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *int {
		if v == nil {
			return nil
		}
		return v.RedisIoThreads
	}).(pulumi.IntPtrOutput)
}

// LFU maxmemory-policy counter decay time in minutes.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisLfuDecayTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *int {
		if v == nil {
			return nil
		}
		return v.RedisLfuDecayTime
	}).(pulumi.IntPtrOutput)
}

// Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisLfuLogFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *int {
		if v == nil {
			return nil
		}
		return v.RedisLfuLogFactor
	}).(pulumi.IntPtrOutput)
}

// Redis maxmemory-policy.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisMaxmemoryPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *string {
		if v == nil {
			return nil
		}
		return v.RedisMaxmemoryPolicy
	}).(pulumi.StringPtrOutput)
}

// Set notify-keyspace-events option.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisNotifyKeyspaceEvents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *string {
		if v == nil {
			return nil
		}
		return v.RedisNotifyKeyspaceEvents
	}).(pulumi.StringPtrOutput)
}

// Number of Redis databases. Set number of Redis databases. Changing this will cause a restart of the Redis service.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisNumberOfDatabases() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *int {
		if v == nil {
			return nil
		}
		return v.RedisNumberOfDatabases
	}).(pulumi.IntPtrOutput)
}

// Redis persistence. When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to the backup schedule for backup purposes. When persistence is 'off', no RDB dumps or backups are done, so data can be lost at any moment if the service is restarted for any reason, or if the service is powered off. Also, the service can't be forked.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisPersistence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *string {
		if v == nil {
			return nil
		}
		return v.RedisPersistence
	}).(pulumi.StringPtrOutput)
}

// Pub/sub client output buffer hard limit in MB. Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisPubsubClientOutputBufferLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *int {
		if v == nil {
			return nil
		}
		return v.RedisPubsubClientOutputBufferLimit
	}).(pulumi.IntPtrOutput)
}

// Require SSL to access Redis.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RedisSsl
	}).(pulumi.BoolPtrOutput)
}

// Redis idle connection timeout in seconds.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *int {
		if v == nil {
			return nil
		}
		return v.RedisTimeout
	}).(pulumi.IntPtrOutput)
}

// Redis major version.
func (o ManagedDatabaseRedisPropertiesPtrOutput) RedisVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *string {
		if v == nil {
			return nil
		}
		return v.RedisVersion
	}).(pulumi.StringPtrOutput)
}

// Service logging. Store logs for the service so that they are available in the HTTP API and console.
func (o ManagedDatabaseRedisPropertiesPtrOutput) ServiceLog() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisProperties) *bool {
		if v == nil {
			return nil
		}
		return v.ServiceLog
	}).(pulumi.BoolPtrOutput)
}

type ManagedDatabaseRedisPropertiesMigration struct {
	// Database name for bootstrapping the initial connection.
	Dbname *string `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from.
	Host *string `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
	IgnoreDbs *string `pulumi:"ignoreDbs"`
	// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
	Method *string `pulumi:"method"`
	// Password for authentication with the server where to migrate data from.
	Password *string `pulumi:"password"`
	// Port number of the server where to migrate data from.
	Port *int `pulumi:"port"`
	// The server where to migrate data from is secured with SSL.
	Ssl *bool `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username *string `pulumi:"username"`
}

// ManagedDatabaseRedisPropertiesMigrationInput is an input type that accepts ManagedDatabaseRedisPropertiesMigrationArgs and ManagedDatabaseRedisPropertiesMigrationOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisPropertiesMigrationInput` via:
//
//	ManagedDatabaseRedisPropertiesMigrationArgs{...}
type ManagedDatabaseRedisPropertiesMigrationInput interface {
	pulumi.Input

	ToManagedDatabaseRedisPropertiesMigrationOutput() ManagedDatabaseRedisPropertiesMigrationOutput
	ToManagedDatabaseRedisPropertiesMigrationOutputWithContext(context.Context) ManagedDatabaseRedisPropertiesMigrationOutput
}

type ManagedDatabaseRedisPropertiesMigrationArgs struct {
	// Database name for bootstrapping the initial connection.
	Dbname pulumi.StringPtrInput `pulumi:"dbname"`
	// Hostname or IP address of the server where to migrate data from.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
	IgnoreDbs pulumi.StringPtrInput `pulumi:"ignoreDbs"`
	// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Password for authentication with the server where to migrate data from.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port number of the server where to migrate data from.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The server where to migrate data from is secured with SSL.
	Ssl pulumi.BoolPtrInput `pulumi:"ssl"`
	// User name for authentication with the server where to migrate data from.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ManagedDatabaseRedisPropertiesMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisPropertiesMigration)(nil)).Elem()
}

func (i ManagedDatabaseRedisPropertiesMigrationArgs) ToManagedDatabaseRedisPropertiesMigrationOutput() ManagedDatabaseRedisPropertiesMigrationOutput {
	return i.ToManagedDatabaseRedisPropertiesMigrationOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisPropertiesMigrationArgs) ToManagedDatabaseRedisPropertiesMigrationOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisPropertiesMigrationOutput)
}

func (i ManagedDatabaseRedisPropertiesMigrationArgs) ToManagedDatabaseRedisPropertiesMigrationPtrOutput() ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return i.ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseRedisPropertiesMigrationArgs) ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisPropertiesMigrationOutput).ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(ctx)
}

// ManagedDatabaseRedisPropertiesMigrationPtrInput is an input type that accepts ManagedDatabaseRedisPropertiesMigrationArgs, ManagedDatabaseRedisPropertiesMigrationPtr and ManagedDatabaseRedisPropertiesMigrationPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseRedisPropertiesMigrationPtrInput` via:
//
//	        ManagedDatabaseRedisPropertiesMigrationArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseRedisPropertiesMigrationPtrInput interface {
	pulumi.Input

	ToManagedDatabaseRedisPropertiesMigrationPtrOutput() ManagedDatabaseRedisPropertiesMigrationPtrOutput
	ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(context.Context) ManagedDatabaseRedisPropertiesMigrationPtrOutput
}

type managedDatabaseRedisPropertiesMigrationPtrType ManagedDatabaseRedisPropertiesMigrationArgs

func ManagedDatabaseRedisPropertiesMigrationPtr(v *ManagedDatabaseRedisPropertiesMigrationArgs) ManagedDatabaseRedisPropertiesMigrationPtrInput {
	return (*managedDatabaseRedisPropertiesMigrationPtrType)(v)
}

func (*managedDatabaseRedisPropertiesMigrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseRedisPropertiesMigration)(nil)).Elem()
}

func (i *managedDatabaseRedisPropertiesMigrationPtrType) ToManagedDatabaseRedisPropertiesMigrationPtrOutput() ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return i.ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseRedisPropertiesMigrationPtrType) ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseRedisPropertiesMigrationPtrOutput)
}

type ManagedDatabaseRedisPropertiesMigrationOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisPropertiesMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseRedisPropertiesMigration)(nil)).Elem()
}

func (o ManagedDatabaseRedisPropertiesMigrationOutput) ToManagedDatabaseRedisPropertiesMigrationOutput() ManagedDatabaseRedisPropertiesMigrationOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesMigrationOutput) ToManagedDatabaseRedisPropertiesMigrationOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesMigrationOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesMigrationOutput) ToManagedDatabaseRedisPropertiesMigrationPtrOutput() ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return o.ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseRedisPropertiesMigrationOutput) ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseRedisPropertiesMigration) *ManagedDatabaseRedisPropertiesMigration {
		return &v
	}).(ManagedDatabaseRedisPropertiesMigrationPtrOutput)
}

// Database name for bootstrapping the initial connection.
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *string { return v.Dbname }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
func (o ManagedDatabaseRedisPropertiesMigrationOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *string { return v.IgnoreDbs }).(pulumi.StringPtrOutput)
}

// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The server where to migrate data from is secured with SSL.
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *bool { return v.Ssl }).(pulumi.BoolPtrOutput)
}

// User name for authentication with the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseRedisPropertiesMigration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseRedisPropertiesMigrationPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseRedisPropertiesMigrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseRedisPropertiesMigration)(nil)).Elem()
}

func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) ToManagedDatabaseRedisPropertiesMigrationPtrOutput() ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) ToManagedDatabaseRedisPropertiesMigrationPtrOutputWithContext(ctx context.Context) ManagedDatabaseRedisPropertiesMigrationPtrOutput {
	return o
}

func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Elem() ManagedDatabaseRedisPropertiesMigrationOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) ManagedDatabaseRedisPropertiesMigration {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseRedisPropertiesMigration
		return ret
	}).(ManagedDatabaseRedisPropertiesMigrationOutput)
}

// Database name for bootstrapping the initial connection.
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Dbname
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) IgnoreDbs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreDbs
	}).(pulumi.StringPtrOutput)
}

// The migration method to be used (currently supported only by Redis, Dragonfly, MySQL and PostgreSQL service types).
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Password for authentication with the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port number of the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The server where to migrate data from is secured with SSL.
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Ssl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *bool {
		if v == nil {
			return nil
		}
		return v.Ssl
	}).(pulumi.BoolPtrOutput)
}

// User name for authentication with the server where to migrate data from.
func (o ManagedDatabaseRedisPropertiesMigrationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseRedisPropertiesMigration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ManagedDatabaseUserOpensearchAccessControl struct {
	// Set user access control rules.
	Rules []ManagedDatabaseUserOpensearchAccessControlRule `pulumi:"rules"`
}

// ManagedDatabaseUserOpensearchAccessControlInput is an input type that accepts ManagedDatabaseUserOpensearchAccessControlArgs and ManagedDatabaseUserOpensearchAccessControlOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserOpensearchAccessControlInput` via:
//
//	ManagedDatabaseUserOpensearchAccessControlArgs{...}
type ManagedDatabaseUserOpensearchAccessControlInput interface {
	pulumi.Input

	ToManagedDatabaseUserOpensearchAccessControlOutput() ManagedDatabaseUserOpensearchAccessControlOutput
	ToManagedDatabaseUserOpensearchAccessControlOutputWithContext(context.Context) ManagedDatabaseUserOpensearchAccessControlOutput
}

type ManagedDatabaseUserOpensearchAccessControlArgs struct {
	// Set user access control rules.
	Rules ManagedDatabaseUserOpensearchAccessControlRuleArrayInput `pulumi:"rules"`
}

func (ManagedDatabaseUserOpensearchAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControl)(nil)).Elem()
}

func (i ManagedDatabaseUserOpensearchAccessControlArgs) ToManagedDatabaseUserOpensearchAccessControlOutput() ManagedDatabaseUserOpensearchAccessControlOutput {
	return i.ToManagedDatabaseUserOpensearchAccessControlOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserOpensearchAccessControlArgs) ToManagedDatabaseUserOpensearchAccessControlOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserOpensearchAccessControlOutput)
}

func (i ManagedDatabaseUserOpensearchAccessControlArgs) ToManagedDatabaseUserOpensearchAccessControlPtrOutput() ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return i.ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserOpensearchAccessControlArgs) ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserOpensearchAccessControlOutput).ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(ctx)
}

// ManagedDatabaseUserOpensearchAccessControlPtrInput is an input type that accepts ManagedDatabaseUserOpensearchAccessControlArgs, ManagedDatabaseUserOpensearchAccessControlPtr and ManagedDatabaseUserOpensearchAccessControlPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserOpensearchAccessControlPtrInput` via:
//
//	        ManagedDatabaseUserOpensearchAccessControlArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseUserOpensearchAccessControlPtrInput interface {
	pulumi.Input

	ToManagedDatabaseUserOpensearchAccessControlPtrOutput() ManagedDatabaseUserOpensearchAccessControlPtrOutput
	ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(context.Context) ManagedDatabaseUserOpensearchAccessControlPtrOutput
}

type managedDatabaseUserOpensearchAccessControlPtrType ManagedDatabaseUserOpensearchAccessControlArgs

func ManagedDatabaseUserOpensearchAccessControlPtr(v *ManagedDatabaseUserOpensearchAccessControlArgs) ManagedDatabaseUserOpensearchAccessControlPtrInput {
	return (*managedDatabaseUserOpensearchAccessControlPtrType)(v)
}

func (*managedDatabaseUserOpensearchAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseUserOpensearchAccessControl)(nil)).Elem()
}

func (i *managedDatabaseUserOpensearchAccessControlPtrType) ToManagedDatabaseUserOpensearchAccessControlPtrOutput() ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return i.ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseUserOpensearchAccessControlPtrType) ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserOpensearchAccessControlPtrOutput)
}

type ManagedDatabaseUserOpensearchAccessControlOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserOpensearchAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControl)(nil)).Elem()
}

func (o ManagedDatabaseUserOpensearchAccessControlOutput) ToManagedDatabaseUserOpensearchAccessControlOutput() ManagedDatabaseUserOpensearchAccessControlOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlOutput) ToManagedDatabaseUserOpensearchAccessControlOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlOutput) ToManagedDatabaseUserOpensearchAccessControlPtrOutput() ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return o.ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseUserOpensearchAccessControlOutput) ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseUserOpensearchAccessControl) *ManagedDatabaseUserOpensearchAccessControl {
		return &v
	}).(ManagedDatabaseUserOpensearchAccessControlPtrOutput)
}

// Set user access control rules.
func (o ManagedDatabaseUserOpensearchAccessControlOutput) Rules() ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput {
	return o.ApplyT(func(v ManagedDatabaseUserOpensearchAccessControl) []ManagedDatabaseUserOpensearchAccessControlRule {
		return v.Rules
	}).(ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput)
}

type ManagedDatabaseUserOpensearchAccessControlPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserOpensearchAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseUserOpensearchAccessControl)(nil)).Elem()
}

func (o ManagedDatabaseUserOpensearchAccessControlPtrOutput) ToManagedDatabaseUserOpensearchAccessControlPtrOutput() ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlPtrOutput) ToManagedDatabaseUserOpensearchAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlPtrOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlPtrOutput) Elem() ManagedDatabaseUserOpensearchAccessControlOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserOpensearchAccessControl) ManagedDatabaseUserOpensearchAccessControl {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseUserOpensearchAccessControl
		return ret
	}).(ManagedDatabaseUserOpensearchAccessControlOutput)
}

// Set user access control rules.
func (o ManagedDatabaseUserOpensearchAccessControlPtrOutput) Rules() ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserOpensearchAccessControl) []ManagedDatabaseUserOpensearchAccessControlRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput)
}

type ManagedDatabaseUserOpensearchAccessControlRule struct {
	// Set index name, pattern or top level API.
	Index string `pulumi:"index"`
	// Set permission access.
	Permission string `pulumi:"permission"`
}

// ManagedDatabaseUserOpensearchAccessControlRuleInput is an input type that accepts ManagedDatabaseUserOpensearchAccessControlRuleArgs and ManagedDatabaseUserOpensearchAccessControlRuleOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserOpensearchAccessControlRuleInput` via:
//
//	ManagedDatabaseUserOpensearchAccessControlRuleArgs{...}
type ManagedDatabaseUserOpensearchAccessControlRuleInput interface {
	pulumi.Input

	ToManagedDatabaseUserOpensearchAccessControlRuleOutput() ManagedDatabaseUserOpensearchAccessControlRuleOutput
	ToManagedDatabaseUserOpensearchAccessControlRuleOutputWithContext(context.Context) ManagedDatabaseUserOpensearchAccessControlRuleOutput
}

type ManagedDatabaseUserOpensearchAccessControlRuleArgs struct {
	// Set index name, pattern or top level API.
	Index pulumi.StringInput `pulumi:"index"`
	// Set permission access.
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (ManagedDatabaseUserOpensearchAccessControlRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControlRule)(nil)).Elem()
}

func (i ManagedDatabaseUserOpensearchAccessControlRuleArgs) ToManagedDatabaseUserOpensearchAccessControlRuleOutput() ManagedDatabaseUserOpensearchAccessControlRuleOutput {
	return i.ToManagedDatabaseUserOpensearchAccessControlRuleOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserOpensearchAccessControlRuleArgs) ToManagedDatabaseUserOpensearchAccessControlRuleOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserOpensearchAccessControlRuleOutput)
}

// ManagedDatabaseUserOpensearchAccessControlRuleArrayInput is an input type that accepts ManagedDatabaseUserOpensearchAccessControlRuleArray and ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserOpensearchAccessControlRuleArrayInput` via:
//
//	ManagedDatabaseUserOpensearchAccessControlRuleArray{ ManagedDatabaseUserOpensearchAccessControlRuleArgs{...} }
type ManagedDatabaseUserOpensearchAccessControlRuleArrayInput interface {
	pulumi.Input

	ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutput() ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput
	ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutputWithContext(context.Context) ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput
}

type ManagedDatabaseUserOpensearchAccessControlRuleArray []ManagedDatabaseUserOpensearchAccessControlRuleInput

func (ManagedDatabaseUserOpensearchAccessControlRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseUserOpensearchAccessControlRule)(nil)).Elem()
}

func (i ManagedDatabaseUserOpensearchAccessControlRuleArray) ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutput() ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput {
	return i.ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserOpensearchAccessControlRuleArray) ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput)
}

type ManagedDatabaseUserOpensearchAccessControlRuleOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserOpensearchAccessControlRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControlRule)(nil)).Elem()
}

func (o ManagedDatabaseUserOpensearchAccessControlRuleOutput) ToManagedDatabaseUserOpensearchAccessControlRuleOutput() ManagedDatabaseUserOpensearchAccessControlRuleOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlRuleOutput) ToManagedDatabaseUserOpensearchAccessControlRuleOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlRuleOutput {
	return o
}

// Set index name, pattern or top level API.
func (o ManagedDatabaseUserOpensearchAccessControlRuleOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseUserOpensearchAccessControlRule) string { return v.Index }).(pulumi.StringOutput)
}

// Set permission access.
func (o ManagedDatabaseUserOpensearchAccessControlRuleOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedDatabaseUserOpensearchAccessControlRule) string { return v.Permission }).(pulumi.StringOutput)
}

type ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedDatabaseUserOpensearchAccessControlRule)(nil)).Elem()
}

func (o ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput) ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutput() ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput) ToManagedDatabaseUserOpensearchAccessControlRuleArrayOutputWithContext(ctx context.Context) ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput {
	return o
}

func (o ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput) Index(i pulumi.IntInput) ManagedDatabaseUserOpensearchAccessControlRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedDatabaseUserOpensearchAccessControlRule {
		return vs[0].([]ManagedDatabaseUserOpensearchAccessControlRule)[vs[1].(int)]
	}).(ManagedDatabaseUserOpensearchAccessControlRuleOutput)
}

type ManagedDatabaseUserPgAccessControl struct {
	// Grant replication privilege
	AllowReplication *bool `pulumi:"allowReplication"`
}

// ManagedDatabaseUserPgAccessControlInput is an input type that accepts ManagedDatabaseUserPgAccessControlArgs and ManagedDatabaseUserPgAccessControlOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserPgAccessControlInput` via:
//
//	ManagedDatabaseUserPgAccessControlArgs{...}
type ManagedDatabaseUserPgAccessControlInput interface {
	pulumi.Input

	ToManagedDatabaseUserPgAccessControlOutput() ManagedDatabaseUserPgAccessControlOutput
	ToManagedDatabaseUserPgAccessControlOutputWithContext(context.Context) ManagedDatabaseUserPgAccessControlOutput
}

type ManagedDatabaseUserPgAccessControlArgs struct {
	// Grant replication privilege
	AllowReplication pulumi.BoolPtrInput `pulumi:"allowReplication"`
}

func (ManagedDatabaseUserPgAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserPgAccessControl)(nil)).Elem()
}

func (i ManagedDatabaseUserPgAccessControlArgs) ToManagedDatabaseUserPgAccessControlOutput() ManagedDatabaseUserPgAccessControlOutput {
	return i.ToManagedDatabaseUserPgAccessControlOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserPgAccessControlArgs) ToManagedDatabaseUserPgAccessControlOutputWithContext(ctx context.Context) ManagedDatabaseUserPgAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserPgAccessControlOutput)
}

func (i ManagedDatabaseUserPgAccessControlArgs) ToManagedDatabaseUserPgAccessControlPtrOutput() ManagedDatabaseUserPgAccessControlPtrOutput {
	return i.ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserPgAccessControlArgs) ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserPgAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserPgAccessControlOutput).ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(ctx)
}

// ManagedDatabaseUserPgAccessControlPtrInput is an input type that accepts ManagedDatabaseUserPgAccessControlArgs, ManagedDatabaseUserPgAccessControlPtr and ManagedDatabaseUserPgAccessControlPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserPgAccessControlPtrInput` via:
//
//	        ManagedDatabaseUserPgAccessControlArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseUserPgAccessControlPtrInput interface {
	pulumi.Input

	ToManagedDatabaseUserPgAccessControlPtrOutput() ManagedDatabaseUserPgAccessControlPtrOutput
	ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(context.Context) ManagedDatabaseUserPgAccessControlPtrOutput
}

type managedDatabaseUserPgAccessControlPtrType ManagedDatabaseUserPgAccessControlArgs

func ManagedDatabaseUserPgAccessControlPtr(v *ManagedDatabaseUserPgAccessControlArgs) ManagedDatabaseUserPgAccessControlPtrInput {
	return (*managedDatabaseUserPgAccessControlPtrType)(v)
}

func (*managedDatabaseUserPgAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseUserPgAccessControl)(nil)).Elem()
}

func (i *managedDatabaseUserPgAccessControlPtrType) ToManagedDatabaseUserPgAccessControlPtrOutput() ManagedDatabaseUserPgAccessControlPtrOutput {
	return i.ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseUserPgAccessControlPtrType) ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserPgAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserPgAccessControlPtrOutput)
}

type ManagedDatabaseUserPgAccessControlOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserPgAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserPgAccessControl)(nil)).Elem()
}

func (o ManagedDatabaseUserPgAccessControlOutput) ToManagedDatabaseUserPgAccessControlOutput() ManagedDatabaseUserPgAccessControlOutput {
	return o
}

func (o ManagedDatabaseUserPgAccessControlOutput) ToManagedDatabaseUserPgAccessControlOutputWithContext(ctx context.Context) ManagedDatabaseUserPgAccessControlOutput {
	return o
}

func (o ManagedDatabaseUserPgAccessControlOutput) ToManagedDatabaseUserPgAccessControlPtrOutput() ManagedDatabaseUserPgAccessControlPtrOutput {
	return o.ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseUserPgAccessControlOutput) ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserPgAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseUserPgAccessControl) *ManagedDatabaseUserPgAccessControl {
		return &v
	}).(ManagedDatabaseUserPgAccessControlPtrOutput)
}

// Grant replication privilege
func (o ManagedDatabaseUserPgAccessControlOutput) AllowReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseUserPgAccessControl) *bool { return v.AllowReplication }).(pulumi.BoolPtrOutput)
}

type ManagedDatabaseUserPgAccessControlPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserPgAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseUserPgAccessControl)(nil)).Elem()
}

func (o ManagedDatabaseUserPgAccessControlPtrOutput) ToManagedDatabaseUserPgAccessControlPtrOutput() ManagedDatabaseUserPgAccessControlPtrOutput {
	return o
}

func (o ManagedDatabaseUserPgAccessControlPtrOutput) ToManagedDatabaseUserPgAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserPgAccessControlPtrOutput {
	return o
}

func (o ManagedDatabaseUserPgAccessControlPtrOutput) Elem() ManagedDatabaseUserPgAccessControlOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserPgAccessControl) ManagedDatabaseUserPgAccessControl {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseUserPgAccessControl
		return ret
	}).(ManagedDatabaseUserPgAccessControlOutput)
}

// Grant replication privilege
func (o ManagedDatabaseUserPgAccessControlPtrOutput) AllowReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserPgAccessControl) *bool {
		if v == nil {
			return nil
		}
		return v.AllowReplication
	}).(pulumi.BoolPtrOutput)
}

type ManagedDatabaseUserRedisAccessControl struct {
	// Set access control to all commands in specified categories.
	Categories *string `pulumi:"categories"`
	// Set access control to Pub/Sub channels.
	Channels *string `pulumi:"channels"`
	// Set access control to commands.
	Commands *string `pulumi:"commands"`
	// Set access control to keys.
	Keys *string `pulumi:"keys"`
}

// ManagedDatabaseUserRedisAccessControlInput is an input type that accepts ManagedDatabaseUserRedisAccessControlArgs and ManagedDatabaseUserRedisAccessControlOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserRedisAccessControlInput` via:
//
//	ManagedDatabaseUserRedisAccessControlArgs{...}
type ManagedDatabaseUserRedisAccessControlInput interface {
	pulumi.Input

	ToManagedDatabaseUserRedisAccessControlOutput() ManagedDatabaseUserRedisAccessControlOutput
	ToManagedDatabaseUserRedisAccessControlOutputWithContext(context.Context) ManagedDatabaseUserRedisAccessControlOutput
}

type ManagedDatabaseUserRedisAccessControlArgs struct {
	// Set access control to all commands in specified categories.
	Categories pulumi.StringPtrInput `pulumi:"categories"`
	// Set access control to Pub/Sub channels.
	Channels pulumi.StringPtrInput `pulumi:"channels"`
	// Set access control to commands.
	Commands pulumi.StringPtrInput `pulumi:"commands"`
	// Set access control to keys.
	Keys pulumi.StringPtrInput `pulumi:"keys"`
}

func (ManagedDatabaseUserRedisAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserRedisAccessControl)(nil)).Elem()
}

func (i ManagedDatabaseUserRedisAccessControlArgs) ToManagedDatabaseUserRedisAccessControlOutput() ManagedDatabaseUserRedisAccessControlOutput {
	return i.ToManagedDatabaseUserRedisAccessControlOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserRedisAccessControlArgs) ToManagedDatabaseUserRedisAccessControlOutputWithContext(ctx context.Context) ManagedDatabaseUserRedisAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserRedisAccessControlOutput)
}

func (i ManagedDatabaseUserRedisAccessControlArgs) ToManagedDatabaseUserRedisAccessControlPtrOutput() ManagedDatabaseUserRedisAccessControlPtrOutput {
	return i.ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(context.Background())
}

func (i ManagedDatabaseUserRedisAccessControlArgs) ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserRedisAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserRedisAccessControlOutput).ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(ctx)
}

// ManagedDatabaseUserRedisAccessControlPtrInput is an input type that accepts ManagedDatabaseUserRedisAccessControlArgs, ManagedDatabaseUserRedisAccessControlPtr and ManagedDatabaseUserRedisAccessControlPtrOutput values.
// You can construct a concrete instance of `ManagedDatabaseUserRedisAccessControlPtrInput` via:
//
//	        ManagedDatabaseUserRedisAccessControlArgs{...}
//
//	or:
//
//	        nil
type ManagedDatabaseUserRedisAccessControlPtrInput interface {
	pulumi.Input

	ToManagedDatabaseUserRedisAccessControlPtrOutput() ManagedDatabaseUserRedisAccessControlPtrOutput
	ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(context.Context) ManagedDatabaseUserRedisAccessControlPtrOutput
}

type managedDatabaseUserRedisAccessControlPtrType ManagedDatabaseUserRedisAccessControlArgs

func ManagedDatabaseUserRedisAccessControlPtr(v *ManagedDatabaseUserRedisAccessControlArgs) ManagedDatabaseUserRedisAccessControlPtrInput {
	return (*managedDatabaseUserRedisAccessControlPtrType)(v)
}

func (*managedDatabaseUserRedisAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseUserRedisAccessControl)(nil)).Elem()
}

func (i *managedDatabaseUserRedisAccessControlPtrType) ToManagedDatabaseUserRedisAccessControlPtrOutput() ManagedDatabaseUserRedisAccessControlPtrOutput {
	return i.ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(context.Background())
}

func (i *managedDatabaseUserRedisAccessControlPtrType) ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserRedisAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedDatabaseUserRedisAccessControlPtrOutput)
}

type ManagedDatabaseUserRedisAccessControlOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserRedisAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedDatabaseUserRedisAccessControl)(nil)).Elem()
}

func (o ManagedDatabaseUserRedisAccessControlOutput) ToManagedDatabaseUserRedisAccessControlOutput() ManagedDatabaseUserRedisAccessControlOutput {
	return o
}

func (o ManagedDatabaseUserRedisAccessControlOutput) ToManagedDatabaseUserRedisAccessControlOutputWithContext(ctx context.Context) ManagedDatabaseUserRedisAccessControlOutput {
	return o
}

func (o ManagedDatabaseUserRedisAccessControlOutput) ToManagedDatabaseUserRedisAccessControlPtrOutput() ManagedDatabaseUserRedisAccessControlPtrOutput {
	return o.ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(context.Background())
}

func (o ManagedDatabaseUserRedisAccessControlOutput) ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserRedisAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedDatabaseUserRedisAccessControl) *ManagedDatabaseUserRedisAccessControl {
		return &v
	}).(ManagedDatabaseUserRedisAccessControlPtrOutput)
}

// Set access control to all commands in specified categories.
func (o ManagedDatabaseUserRedisAccessControlOutput) Categories() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseUserRedisAccessControl) *string { return v.Categories }).(pulumi.StringPtrOutput)
}

// Set access control to Pub/Sub channels.
func (o ManagedDatabaseUserRedisAccessControlOutput) Channels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseUserRedisAccessControl) *string { return v.Channels }).(pulumi.StringPtrOutput)
}

// Set access control to commands.
func (o ManagedDatabaseUserRedisAccessControlOutput) Commands() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseUserRedisAccessControl) *string { return v.Commands }).(pulumi.StringPtrOutput)
}

// Set access control to keys.
func (o ManagedDatabaseUserRedisAccessControlOutput) Keys() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedDatabaseUserRedisAccessControl) *string { return v.Keys }).(pulumi.StringPtrOutput)
}

type ManagedDatabaseUserRedisAccessControlPtrOutput struct{ *pulumi.OutputState }

func (ManagedDatabaseUserRedisAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedDatabaseUserRedisAccessControl)(nil)).Elem()
}

func (o ManagedDatabaseUserRedisAccessControlPtrOutput) ToManagedDatabaseUserRedisAccessControlPtrOutput() ManagedDatabaseUserRedisAccessControlPtrOutput {
	return o
}

func (o ManagedDatabaseUserRedisAccessControlPtrOutput) ToManagedDatabaseUserRedisAccessControlPtrOutputWithContext(ctx context.Context) ManagedDatabaseUserRedisAccessControlPtrOutput {
	return o
}

func (o ManagedDatabaseUserRedisAccessControlPtrOutput) Elem() ManagedDatabaseUserRedisAccessControlOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserRedisAccessControl) ManagedDatabaseUserRedisAccessControl {
		if v != nil {
			return *v
		}
		var ret ManagedDatabaseUserRedisAccessControl
		return ret
	}).(ManagedDatabaseUserRedisAccessControlOutput)
}

// Set access control to all commands in specified categories.
func (o ManagedDatabaseUserRedisAccessControlPtrOutput) Categories() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserRedisAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(pulumi.StringPtrOutput)
}

// Set access control to Pub/Sub channels.
func (o ManagedDatabaseUserRedisAccessControlPtrOutput) Channels() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserRedisAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.Channels
	}).(pulumi.StringPtrOutput)
}

// Set access control to commands.
func (o ManagedDatabaseUserRedisAccessControlPtrOutput) Commands() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserRedisAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.Commands
	}).(pulumi.StringPtrOutput)
}

// Set access control to keys.
func (o ManagedDatabaseUserRedisAccessControlPtrOutput) Keys() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedDatabaseUserRedisAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringPtrOutput)
}

type ManagedObjectStorageEndpoint struct {
	// Domain name of the endpoint.
	DomainName *string `pulumi:"domainName"`
	// URL for IAM.
	IamUrl *string `pulumi:"iamUrl"`
	// URL for STS.
	StsUrl *string `pulumi:"stsUrl"`
	// Type of the endpoint (`private` / `public`).
	Type *string `pulumi:"type"`
}

// ManagedObjectStorageEndpointInput is an input type that accepts ManagedObjectStorageEndpointArgs and ManagedObjectStorageEndpointOutput values.
// You can construct a concrete instance of `ManagedObjectStorageEndpointInput` via:
//
//	ManagedObjectStorageEndpointArgs{...}
type ManagedObjectStorageEndpointInput interface {
	pulumi.Input

	ToManagedObjectStorageEndpointOutput() ManagedObjectStorageEndpointOutput
	ToManagedObjectStorageEndpointOutputWithContext(context.Context) ManagedObjectStorageEndpointOutput
}

type ManagedObjectStorageEndpointArgs struct {
	// Domain name of the endpoint.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// URL for IAM.
	IamUrl pulumi.StringPtrInput `pulumi:"iamUrl"`
	// URL for STS.
	StsUrl pulumi.StringPtrInput `pulumi:"stsUrl"`
	// Type of the endpoint (`private` / `public`).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedObjectStorageEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedObjectStorageEndpoint)(nil)).Elem()
}

func (i ManagedObjectStorageEndpointArgs) ToManagedObjectStorageEndpointOutput() ManagedObjectStorageEndpointOutput {
	return i.ToManagedObjectStorageEndpointOutputWithContext(context.Background())
}

func (i ManagedObjectStorageEndpointArgs) ToManagedObjectStorageEndpointOutputWithContext(ctx context.Context) ManagedObjectStorageEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageEndpointOutput)
}

// ManagedObjectStorageEndpointArrayInput is an input type that accepts ManagedObjectStorageEndpointArray and ManagedObjectStorageEndpointArrayOutput values.
// You can construct a concrete instance of `ManagedObjectStorageEndpointArrayInput` via:
//
//	ManagedObjectStorageEndpointArray{ ManagedObjectStorageEndpointArgs{...} }
type ManagedObjectStorageEndpointArrayInput interface {
	pulumi.Input

	ToManagedObjectStorageEndpointArrayOutput() ManagedObjectStorageEndpointArrayOutput
	ToManagedObjectStorageEndpointArrayOutputWithContext(context.Context) ManagedObjectStorageEndpointArrayOutput
}

type ManagedObjectStorageEndpointArray []ManagedObjectStorageEndpointInput

func (ManagedObjectStorageEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedObjectStorageEndpoint)(nil)).Elem()
}

func (i ManagedObjectStorageEndpointArray) ToManagedObjectStorageEndpointArrayOutput() ManagedObjectStorageEndpointArrayOutput {
	return i.ToManagedObjectStorageEndpointArrayOutputWithContext(context.Background())
}

func (i ManagedObjectStorageEndpointArray) ToManagedObjectStorageEndpointArrayOutputWithContext(ctx context.Context) ManagedObjectStorageEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageEndpointArrayOutput)
}

type ManagedObjectStorageEndpointOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedObjectStorageEndpoint)(nil)).Elem()
}

func (o ManagedObjectStorageEndpointOutput) ToManagedObjectStorageEndpointOutput() ManagedObjectStorageEndpointOutput {
	return o
}

func (o ManagedObjectStorageEndpointOutput) ToManagedObjectStorageEndpointOutputWithContext(ctx context.Context) ManagedObjectStorageEndpointOutput {
	return o
}

// Domain name of the endpoint.
func (o ManagedObjectStorageEndpointOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedObjectStorageEndpoint) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// URL for IAM.
func (o ManagedObjectStorageEndpointOutput) IamUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedObjectStorageEndpoint) *string { return v.IamUrl }).(pulumi.StringPtrOutput)
}

// URL for STS.
func (o ManagedObjectStorageEndpointOutput) StsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedObjectStorageEndpoint) *string { return v.StsUrl }).(pulumi.StringPtrOutput)
}

// Type of the endpoint (`private` / `public`).
func (o ManagedObjectStorageEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedObjectStorageEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedObjectStorageEndpointArrayOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedObjectStorageEndpoint)(nil)).Elem()
}

func (o ManagedObjectStorageEndpointArrayOutput) ToManagedObjectStorageEndpointArrayOutput() ManagedObjectStorageEndpointArrayOutput {
	return o
}

func (o ManagedObjectStorageEndpointArrayOutput) ToManagedObjectStorageEndpointArrayOutputWithContext(ctx context.Context) ManagedObjectStorageEndpointArrayOutput {
	return o
}

func (o ManagedObjectStorageEndpointArrayOutput) Index(i pulumi.IntInput) ManagedObjectStorageEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedObjectStorageEndpoint {
		return vs[0].([]ManagedObjectStorageEndpoint)[vs[1].(int)]
	}).(ManagedObjectStorageEndpointOutput)
}

type ManagedObjectStorageNetwork struct {
	// Network family. IPv6 currently not supported.
	Family string `pulumi:"family"`
	// Network name. Must be unique within the service.
	Name string `pulumi:"name"`
	// Network type.
	Type string `pulumi:"type"`
	// Private network uuid. For public networks the field should be omitted.
	Uuid *string `pulumi:"uuid"`
}

// ManagedObjectStorageNetworkInput is an input type that accepts ManagedObjectStorageNetworkArgs and ManagedObjectStorageNetworkOutput values.
// You can construct a concrete instance of `ManagedObjectStorageNetworkInput` via:
//
//	ManagedObjectStorageNetworkArgs{...}
type ManagedObjectStorageNetworkInput interface {
	pulumi.Input

	ToManagedObjectStorageNetworkOutput() ManagedObjectStorageNetworkOutput
	ToManagedObjectStorageNetworkOutputWithContext(context.Context) ManagedObjectStorageNetworkOutput
}

type ManagedObjectStorageNetworkArgs struct {
	// Network family. IPv6 currently not supported.
	Family pulumi.StringInput `pulumi:"family"`
	// Network name. Must be unique within the service.
	Name pulumi.StringInput `pulumi:"name"`
	// Network type.
	Type pulumi.StringInput `pulumi:"type"`
	// Private network uuid. For public networks the field should be omitted.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
}

func (ManagedObjectStorageNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedObjectStorageNetwork)(nil)).Elem()
}

func (i ManagedObjectStorageNetworkArgs) ToManagedObjectStorageNetworkOutput() ManagedObjectStorageNetworkOutput {
	return i.ToManagedObjectStorageNetworkOutputWithContext(context.Background())
}

func (i ManagedObjectStorageNetworkArgs) ToManagedObjectStorageNetworkOutputWithContext(ctx context.Context) ManagedObjectStorageNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageNetworkOutput)
}

// ManagedObjectStorageNetworkArrayInput is an input type that accepts ManagedObjectStorageNetworkArray and ManagedObjectStorageNetworkArrayOutput values.
// You can construct a concrete instance of `ManagedObjectStorageNetworkArrayInput` via:
//
//	ManagedObjectStorageNetworkArray{ ManagedObjectStorageNetworkArgs{...} }
type ManagedObjectStorageNetworkArrayInput interface {
	pulumi.Input

	ToManagedObjectStorageNetworkArrayOutput() ManagedObjectStorageNetworkArrayOutput
	ToManagedObjectStorageNetworkArrayOutputWithContext(context.Context) ManagedObjectStorageNetworkArrayOutput
}

type ManagedObjectStorageNetworkArray []ManagedObjectStorageNetworkInput

func (ManagedObjectStorageNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedObjectStorageNetwork)(nil)).Elem()
}

func (i ManagedObjectStorageNetworkArray) ToManagedObjectStorageNetworkArrayOutput() ManagedObjectStorageNetworkArrayOutput {
	return i.ToManagedObjectStorageNetworkArrayOutputWithContext(context.Background())
}

func (i ManagedObjectStorageNetworkArray) ToManagedObjectStorageNetworkArrayOutputWithContext(ctx context.Context) ManagedObjectStorageNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageNetworkArrayOutput)
}

type ManagedObjectStorageNetworkOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedObjectStorageNetwork)(nil)).Elem()
}

func (o ManagedObjectStorageNetworkOutput) ToManagedObjectStorageNetworkOutput() ManagedObjectStorageNetworkOutput {
	return o
}

func (o ManagedObjectStorageNetworkOutput) ToManagedObjectStorageNetworkOutputWithContext(ctx context.Context) ManagedObjectStorageNetworkOutput {
	return o
}

// Network family. IPv6 currently not supported.
func (o ManagedObjectStorageNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedObjectStorageNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// Network name. Must be unique within the service.
func (o ManagedObjectStorageNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedObjectStorageNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// Network type.
func (o ManagedObjectStorageNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedObjectStorageNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// Private network uuid. For public networks the field should be omitted.
func (o ManagedObjectStorageNetworkOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedObjectStorageNetwork) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

type ManagedObjectStorageNetworkArrayOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedObjectStorageNetwork)(nil)).Elem()
}

func (o ManagedObjectStorageNetworkArrayOutput) ToManagedObjectStorageNetworkArrayOutput() ManagedObjectStorageNetworkArrayOutput {
	return o
}

func (o ManagedObjectStorageNetworkArrayOutput) ToManagedObjectStorageNetworkArrayOutputWithContext(ctx context.Context) ManagedObjectStorageNetworkArrayOutput {
	return o
}

func (o ManagedObjectStorageNetworkArrayOutput) Index(i pulumi.IntInput) ManagedObjectStorageNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedObjectStorageNetwork {
		return vs[0].([]ManagedObjectStorageNetwork)[vs[1].(int)]
	}).(ManagedObjectStorageNetworkOutput)
}

type NetworkIpNetwork struct {
	// The CIDR range of the subnet
	Address string `pulumi:"address"`
	// Is DHCP enabled?
	Dhcp bool `pulumi:"dhcp"`
	// Is the gateway the DHCP default route?
	DhcpDefaultRoute *bool `pulumi:"dhcpDefaultRoute"`
	// The DNS servers given by DHCP
	DhcpDns []string `pulumi:"dhcpDns"`
	// The additional DHCP classless static routes given by DHCP
	DhcpRoutes []string `pulumi:"dhcpRoutes"`
	// IP address family
	Family string `pulumi:"family"`
	// Gateway address given by DHCP
	Gateway *string `pulumi:"gateway"`
}

// NetworkIpNetworkInput is an input type that accepts NetworkIpNetworkArgs and NetworkIpNetworkOutput values.
// You can construct a concrete instance of `NetworkIpNetworkInput` via:
//
//	NetworkIpNetworkArgs{...}
type NetworkIpNetworkInput interface {
	pulumi.Input

	ToNetworkIpNetworkOutput() NetworkIpNetworkOutput
	ToNetworkIpNetworkOutputWithContext(context.Context) NetworkIpNetworkOutput
}

type NetworkIpNetworkArgs struct {
	// The CIDR range of the subnet
	Address pulumi.StringInput `pulumi:"address"`
	// Is DHCP enabled?
	Dhcp pulumi.BoolInput `pulumi:"dhcp"`
	// Is the gateway the DHCP default route?
	DhcpDefaultRoute pulumi.BoolPtrInput `pulumi:"dhcpDefaultRoute"`
	// The DNS servers given by DHCP
	DhcpDns pulumi.StringArrayInput `pulumi:"dhcpDns"`
	// The additional DHCP classless static routes given by DHCP
	DhcpRoutes pulumi.StringArrayInput `pulumi:"dhcpRoutes"`
	// IP address family
	Family pulumi.StringInput `pulumi:"family"`
	// Gateway address given by DHCP
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
}

func (NetworkIpNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIpNetwork)(nil)).Elem()
}

func (i NetworkIpNetworkArgs) ToNetworkIpNetworkOutput() NetworkIpNetworkOutput {
	return i.ToNetworkIpNetworkOutputWithContext(context.Background())
}

func (i NetworkIpNetworkArgs) ToNetworkIpNetworkOutputWithContext(ctx context.Context) NetworkIpNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpNetworkOutput)
}

func (i NetworkIpNetworkArgs) ToNetworkIpNetworkPtrOutput() NetworkIpNetworkPtrOutput {
	return i.ToNetworkIpNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkIpNetworkArgs) ToNetworkIpNetworkPtrOutputWithContext(ctx context.Context) NetworkIpNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpNetworkOutput).ToNetworkIpNetworkPtrOutputWithContext(ctx)
}

// NetworkIpNetworkPtrInput is an input type that accepts NetworkIpNetworkArgs, NetworkIpNetworkPtr and NetworkIpNetworkPtrOutput values.
// You can construct a concrete instance of `NetworkIpNetworkPtrInput` via:
//
//	        NetworkIpNetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkIpNetworkPtrInput interface {
	pulumi.Input

	ToNetworkIpNetworkPtrOutput() NetworkIpNetworkPtrOutput
	ToNetworkIpNetworkPtrOutputWithContext(context.Context) NetworkIpNetworkPtrOutput
}

type networkIpNetworkPtrType NetworkIpNetworkArgs

func NetworkIpNetworkPtr(v *NetworkIpNetworkArgs) NetworkIpNetworkPtrInput {
	return (*networkIpNetworkPtrType)(v)
}

func (*networkIpNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkIpNetwork)(nil)).Elem()
}

func (i *networkIpNetworkPtrType) ToNetworkIpNetworkPtrOutput() NetworkIpNetworkPtrOutput {
	return i.ToNetworkIpNetworkPtrOutputWithContext(context.Background())
}

func (i *networkIpNetworkPtrType) ToNetworkIpNetworkPtrOutputWithContext(ctx context.Context) NetworkIpNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkIpNetworkPtrOutput)
}

type NetworkIpNetworkOutput struct{ *pulumi.OutputState }

func (NetworkIpNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkIpNetwork)(nil)).Elem()
}

func (o NetworkIpNetworkOutput) ToNetworkIpNetworkOutput() NetworkIpNetworkOutput {
	return o
}

func (o NetworkIpNetworkOutput) ToNetworkIpNetworkOutputWithContext(ctx context.Context) NetworkIpNetworkOutput {
	return o
}

func (o NetworkIpNetworkOutput) ToNetworkIpNetworkPtrOutput() NetworkIpNetworkPtrOutput {
	return o.ToNetworkIpNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkIpNetworkOutput) ToNetworkIpNetworkPtrOutputWithContext(ctx context.Context) NetworkIpNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkIpNetwork) *NetworkIpNetwork {
		return &v
	}).(NetworkIpNetworkPtrOutput)
}

// The CIDR range of the subnet
func (o NetworkIpNetworkOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIpNetwork) string { return v.Address }).(pulumi.StringOutput)
}

// Is DHCP enabled?
func (o NetworkIpNetworkOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkIpNetwork) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

// Is the gateway the DHCP default route?
func (o NetworkIpNetworkOutput) DhcpDefaultRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkIpNetwork) *bool { return v.DhcpDefaultRoute }).(pulumi.BoolPtrOutput)
}

// The DNS servers given by DHCP
func (o NetworkIpNetworkOutput) DhcpDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkIpNetwork) []string { return v.DhcpDns }).(pulumi.StringArrayOutput)
}

// The additional DHCP classless static routes given by DHCP
func (o NetworkIpNetworkOutput) DhcpRoutes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkIpNetwork) []string { return v.DhcpRoutes }).(pulumi.StringArrayOutput)
}

// IP address family
func (o NetworkIpNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkIpNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// Gateway address given by DHCP
func (o NetworkIpNetworkOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkIpNetwork) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

type NetworkIpNetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkIpNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkIpNetwork)(nil)).Elem()
}

func (o NetworkIpNetworkPtrOutput) ToNetworkIpNetworkPtrOutput() NetworkIpNetworkPtrOutput {
	return o
}

func (o NetworkIpNetworkPtrOutput) ToNetworkIpNetworkPtrOutputWithContext(ctx context.Context) NetworkIpNetworkPtrOutput {
	return o
}

func (o NetworkIpNetworkPtrOutput) Elem() NetworkIpNetworkOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) NetworkIpNetwork {
		if v != nil {
			return *v
		}
		var ret NetworkIpNetwork
		return ret
	}).(NetworkIpNetworkOutput)
}

// The CIDR range of the subnet
func (o NetworkIpNetworkPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// Is DHCP enabled?
func (o NetworkIpNetworkPtrOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) *bool {
		if v == nil {
			return nil
		}
		return &v.Dhcp
	}).(pulumi.BoolPtrOutput)
}

// Is the gateway the DHCP default route?
func (o NetworkIpNetworkPtrOutput) DhcpDefaultRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.DhcpDefaultRoute
	}).(pulumi.BoolPtrOutput)
}

// The DNS servers given by DHCP
func (o NetworkIpNetworkPtrOutput) DhcpDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) []string {
		if v == nil {
			return nil
		}
		return v.DhcpDns
	}).(pulumi.StringArrayOutput)
}

// The additional DHCP classless static routes given by DHCP
func (o NetworkIpNetworkPtrOutput) DhcpRoutes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) []string {
		if v == nil {
			return nil
		}
		return v.DhcpRoutes
	}).(pulumi.StringArrayOutput)
}

// IP address family
func (o NetworkIpNetworkPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Family
	}).(pulumi.StringPtrOutput)
}

// Gateway address given by DHCP
func (o NetworkIpNetworkPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkIpNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Gateway
	}).(pulumi.StringPtrOutput)
}

type NetworkPeeringNetwork struct {
	// The UUID of the network.
	Uuid string `pulumi:"uuid"`
}

// NetworkPeeringNetworkInput is an input type that accepts NetworkPeeringNetworkArgs and NetworkPeeringNetworkOutput values.
// You can construct a concrete instance of `NetworkPeeringNetworkInput` via:
//
//	NetworkPeeringNetworkArgs{...}
type NetworkPeeringNetworkInput interface {
	pulumi.Input

	ToNetworkPeeringNetworkOutput() NetworkPeeringNetworkOutput
	ToNetworkPeeringNetworkOutputWithContext(context.Context) NetworkPeeringNetworkOutput
}

type NetworkPeeringNetworkArgs struct {
	// The UUID of the network.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (NetworkPeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPeeringNetwork)(nil)).Elem()
}

func (i NetworkPeeringNetworkArgs) ToNetworkPeeringNetworkOutput() NetworkPeeringNetworkOutput {
	return i.ToNetworkPeeringNetworkOutputWithContext(context.Background())
}

func (i NetworkPeeringNetworkArgs) ToNetworkPeeringNetworkOutputWithContext(ctx context.Context) NetworkPeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPeeringNetworkOutput)
}

func (i NetworkPeeringNetworkArgs) ToNetworkPeeringNetworkPtrOutput() NetworkPeeringNetworkPtrOutput {
	return i.ToNetworkPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkPeeringNetworkArgs) ToNetworkPeeringNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPeeringNetworkOutput).ToNetworkPeeringNetworkPtrOutputWithContext(ctx)
}

// NetworkPeeringNetworkPtrInput is an input type that accepts NetworkPeeringNetworkArgs, NetworkPeeringNetworkPtr and NetworkPeeringNetworkPtrOutput values.
// You can construct a concrete instance of `NetworkPeeringNetworkPtrInput` via:
//
//	        NetworkPeeringNetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkPeeringNetworkPtrInput interface {
	pulumi.Input

	ToNetworkPeeringNetworkPtrOutput() NetworkPeeringNetworkPtrOutput
	ToNetworkPeeringNetworkPtrOutputWithContext(context.Context) NetworkPeeringNetworkPtrOutput
}

type networkPeeringNetworkPtrType NetworkPeeringNetworkArgs

func NetworkPeeringNetworkPtr(v *NetworkPeeringNetworkArgs) NetworkPeeringNetworkPtrInput {
	return (*networkPeeringNetworkPtrType)(v)
}

func (*networkPeeringNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPeeringNetwork)(nil)).Elem()
}

func (i *networkPeeringNetworkPtrType) ToNetworkPeeringNetworkPtrOutput() NetworkPeeringNetworkPtrOutput {
	return i.ToNetworkPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i *networkPeeringNetworkPtrType) ToNetworkPeeringNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPeeringNetworkPtrOutput)
}

type NetworkPeeringNetworkOutput struct{ *pulumi.OutputState }

func (NetworkPeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPeeringNetwork)(nil)).Elem()
}

func (o NetworkPeeringNetworkOutput) ToNetworkPeeringNetworkOutput() NetworkPeeringNetworkOutput {
	return o
}

func (o NetworkPeeringNetworkOutput) ToNetworkPeeringNetworkOutputWithContext(ctx context.Context) NetworkPeeringNetworkOutput {
	return o
}

func (o NetworkPeeringNetworkOutput) ToNetworkPeeringNetworkPtrOutput() NetworkPeeringNetworkPtrOutput {
	return o.ToNetworkPeeringNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkPeeringNetworkOutput) ToNetworkPeeringNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPeeringNetwork) *NetworkPeeringNetwork {
		return &v
	}).(NetworkPeeringNetworkPtrOutput)
}

// The UUID of the network.
func (o NetworkPeeringNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkPeeringNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type NetworkPeeringNetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkPeeringNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPeeringNetwork)(nil)).Elem()
}

func (o NetworkPeeringNetworkPtrOutput) ToNetworkPeeringNetworkPtrOutput() NetworkPeeringNetworkPtrOutput {
	return o
}

func (o NetworkPeeringNetworkPtrOutput) ToNetworkPeeringNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringNetworkPtrOutput {
	return o
}

func (o NetworkPeeringNetworkPtrOutput) Elem() NetworkPeeringNetworkOutput {
	return o.ApplyT(func(v *NetworkPeeringNetwork) NetworkPeeringNetwork {
		if v != nil {
			return *v
		}
		var ret NetworkPeeringNetwork
		return ret
	}).(NetworkPeeringNetworkOutput)
}

// The UUID of the network.
func (o NetworkPeeringNetworkPtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPeeringNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type NetworkPeeringPeerNetwork struct {
	// The UUID of the network.
	Uuid string `pulumi:"uuid"`
}

// NetworkPeeringPeerNetworkInput is an input type that accepts NetworkPeeringPeerNetworkArgs and NetworkPeeringPeerNetworkOutput values.
// You can construct a concrete instance of `NetworkPeeringPeerNetworkInput` via:
//
//	NetworkPeeringPeerNetworkArgs{...}
type NetworkPeeringPeerNetworkInput interface {
	pulumi.Input

	ToNetworkPeeringPeerNetworkOutput() NetworkPeeringPeerNetworkOutput
	ToNetworkPeeringPeerNetworkOutputWithContext(context.Context) NetworkPeeringPeerNetworkOutput
}

type NetworkPeeringPeerNetworkArgs struct {
	// The UUID of the network.
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (NetworkPeeringPeerNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPeeringPeerNetwork)(nil)).Elem()
}

func (i NetworkPeeringPeerNetworkArgs) ToNetworkPeeringPeerNetworkOutput() NetworkPeeringPeerNetworkOutput {
	return i.ToNetworkPeeringPeerNetworkOutputWithContext(context.Background())
}

func (i NetworkPeeringPeerNetworkArgs) ToNetworkPeeringPeerNetworkOutputWithContext(ctx context.Context) NetworkPeeringPeerNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPeeringPeerNetworkOutput)
}

func (i NetworkPeeringPeerNetworkArgs) ToNetworkPeeringPeerNetworkPtrOutput() NetworkPeeringPeerNetworkPtrOutput {
	return i.ToNetworkPeeringPeerNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkPeeringPeerNetworkArgs) ToNetworkPeeringPeerNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringPeerNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPeeringPeerNetworkOutput).ToNetworkPeeringPeerNetworkPtrOutputWithContext(ctx)
}

// NetworkPeeringPeerNetworkPtrInput is an input type that accepts NetworkPeeringPeerNetworkArgs, NetworkPeeringPeerNetworkPtr and NetworkPeeringPeerNetworkPtrOutput values.
// You can construct a concrete instance of `NetworkPeeringPeerNetworkPtrInput` via:
//
//	        NetworkPeeringPeerNetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkPeeringPeerNetworkPtrInput interface {
	pulumi.Input

	ToNetworkPeeringPeerNetworkPtrOutput() NetworkPeeringPeerNetworkPtrOutput
	ToNetworkPeeringPeerNetworkPtrOutputWithContext(context.Context) NetworkPeeringPeerNetworkPtrOutput
}

type networkPeeringPeerNetworkPtrType NetworkPeeringPeerNetworkArgs

func NetworkPeeringPeerNetworkPtr(v *NetworkPeeringPeerNetworkArgs) NetworkPeeringPeerNetworkPtrInput {
	return (*networkPeeringPeerNetworkPtrType)(v)
}

func (*networkPeeringPeerNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPeeringPeerNetwork)(nil)).Elem()
}

func (i *networkPeeringPeerNetworkPtrType) ToNetworkPeeringPeerNetworkPtrOutput() NetworkPeeringPeerNetworkPtrOutput {
	return i.ToNetworkPeeringPeerNetworkPtrOutputWithContext(context.Background())
}

func (i *networkPeeringPeerNetworkPtrType) ToNetworkPeeringPeerNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringPeerNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPeeringPeerNetworkPtrOutput)
}

type NetworkPeeringPeerNetworkOutput struct{ *pulumi.OutputState }

func (NetworkPeeringPeerNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPeeringPeerNetwork)(nil)).Elem()
}

func (o NetworkPeeringPeerNetworkOutput) ToNetworkPeeringPeerNetworkOutput() NetworkPeeringPeerNetworkOutput {
	return o
}

func (o NetworkPeeringPeerNetworkOutput) ToNetworkPeeringPeerNetworkOutputWithContext(ctx context.Context) NetworkPeeringPeerNetworkOutput {
	return o
}

func (o NetworkPeeringPeerNetworkOutput) ToNetworkPeeringPeerNetworkPtrOutput() NetworkPeeringPeerNetworkPtrOutput {
	return o.ToNetworkPeeringPeerNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkPeeringPeerNetworkOutput) ToNetworkPeeringPeerNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringPeerNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPeeringPeerNetwork) *NetworkPeeringPeerNetwork {
		return &v
	}).(NetworkPeeringPeerNetworkPtrOutput)
}

// The UUID of the network.
func (o NetworkPeeringPeerNetworkOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkPeeringPeerNetwork) string { return v.Uuid }).(pulumi.StringOutput)
}

type NetworkPeeringPeerNetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkPeeringPeerNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPeeringPeerNetwork)(nil)).Elem()
}

func (o NetworkPeeringPeerNetworkPtrOutput) ToNetworkPeeringPeerNetworkPtrOutput() NetworkPeeringPeerNetworkPtrOutput {
	return o
}

func (o NetworkPeeringPeerNetworkPtrOutput) ToNetworkPeeringPeerNetworkPtrOutputWithContext(ctx context.Context) NetworkPeeringPeerNetworkPtrOutput {
	return o
}

func (o NetworkPeeringPeerNetworkPtrOutput) Elem() NetworkPeeringPeerNetworkOutput {
	return o.ApplyT(func(v *NetworkPeeringPeerNetwork) NetworkPeeringPeerNetwork {
		if v != nil {
			return *v
		}
		var ret NetworkPeeringPeerNetwork
		return ret
	}).(NetworkPeeringPeerNetworkOutput)
}

// The UUID of the network.
func (o NetworkPeeringPeerNetworkPtrOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPeeringPeerNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Uuid
	}).(pulumi.StringPtrOutput)
}

type ObjectStorageBucket struct {
	// The name of the bucket
	Name string `pulumi:"name"`
}

// ObjectStorageBucketInput is an input type that accepts ObjectStorageBucketArgs and ObjectStorageBucketOutput values.
// You can construct a concrete instance of `ObjectStorageBucketInput` via:
//
//	ObjectStorageBucketArgs{...}
type ObjectStorageBucketInput interface {
	pulumi.Input

	ToObjectStorageBucketOutput() ObjectStorageBucketOutput
	ToObjectStorageBucketOutputWithContext(context.Context) ObjectStorageBucketOutput
}

type ObjectStorageBucketArgs struct {
	// The name of the bucket
	Name pulumi.StringInput `pulumi:"name"`
}

func (ObjectStorageBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucket)(nil)).Elem()
}

func (i ObjectStorageBucketArgs) ToObjectStorageBucketOutput() ObjectStorageBucketOutput {
	return i.ToObjectStorageBucketOutputWithContext(context.Background())
}

func (i ObjectStorageBucketArgs) ToObjectStorageBucketOutputWithContext(ctx context.Context) ObjectStorageBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketOutput)
}

// ObjectStorageBucketArrayInput is an input type that accepts ObjectStorageBucketArray and ObjectStorageBucketArrayOutput values.
// You can construct a concrete instance of `ObjectStorageBucketArrayInput` via:
//
//	ObjectStorageBucketArray{ ObjectStorageBucketArgs{...} }
type ObjectStorageBucketArrayInput interface {
	pulumi.Input

	ToObjectStorageBucketArrayOutput() ObjectStorageBucketArrayOutput
	ToObjectStorageBucketArrayOutputWithContext(context.Context) ObjectStorageBucketArrayOutput
}

type ObjectStorageBucketArray []ObjectStorageBucketInput

func (ObjectStorageBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageBucket)(nil)).Elem()
}

func (i ObjectStorageBucketArray) ToObjectStorageBucketArrayOutput() ObjectStorageBucketArrayOutput {
	return i.ToObjectStorageBucketArrayOutputWithContext(context.Background())
}

func (i ObjectStorageBucketArray) ToObjectStorageBucketArrayOutputWithContext(ctx context.Context) ObjectStorageBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectStorageBucketArrayOutput)
}

type ObjectStorageBucketOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectStorageBucket)(nil)).Elem()
}

func (o ObjectStorageBucketOutput) ToObjectStorageBucketOutput() ObjectStorageBucketOutput {
	return o
}

func (o ObjectStorageBucketOutput) ToObjectStorageBucketOutputWithContext(ctx context.Context) ObjectStorageBucketOutput {
	return o
}

// The name of the bucket
func (o ObjectStorageBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ObjectStorageBucket) string { return v.Name }).(pulumi.StringOutput)
}

type ObjectStorageBucketArrayOutput struct{ *pulumi.OutputState }

func (ObjectStorageBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectStorageBucket)(nil)).Elem()
}

func (o ObjectStorageBucketArrayOutput) ToObjectStorageBucketArrayOutput() ObjectStorageBucketArrayOutput {
	return o
}

func (o ObjectStorageBucketArrayOutput) ToObjectStorageBucketArrayOutputWithContext(ctx context.Context) ObjectStorageBucketArrayOutput {
	return o
}

func (o ObjectStorageBucketArrayOutput) Index(i pulumi.IntInput) ObjectStorageBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectStorageBucket {
		return vs[0].([]ObjectStorageBucket)[vs[1].(int)]
	}).(ObjectStorageBucketOutput)
}

type RouterStaticRoute struct {
	// Name or description of the route.
	Name *string `pulumi:"name"`
	// Next hop address. NOTE: For static route to be active the next hop has to be an address of a reachable running Cloud Server in one of the Private Networks attached to the router.
	Nexthop string `pulumi:"nexthop"`
	// Destination prefix of the route.
	Route string `pulumi:"route"`
}

// RouterStaticRouteInput is an input type that accepts RouterStaticRouteArgs and RouterStaticRouteOutput values.
// You can construct a concrete instance of `RouterStaticRouteInput` via:
//
//	RouterStaticRouteArgs{...}
type RouterStaticRouteInput interface {
	pulumi.Input

	ToRouterStaticRouteOutput() RouterStaticRouteOutput
	ToRouterStaticRouteOutputWithContext(context.Context) RouterStaticRouteOutput
}

type RouterStaticRouteArgs struct {
	// Name or description of the route.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Next hop address. NOTE: For static route to be active the next hop has to be an address of a reachable running Cloud Server in one of the Private Networks attached to the router.
	Nexthop pulumi.StringInput `pulumi:"nexthop"`
	// Destination prefix of the route.
	Route pulumi.StringInput `pulumi:"route"`
}

func (RouterStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStaticRoute)(nil)).Elem()
}

func (i RouterStaticRouteArgs) ToRouterStaticRouteOutput() RouterStaticRouteOutput {
	return i.ToRouterStaticRouteOutputWithContext(context.Background())
}

func (i RouterStaticRouteArgs) ToRouterStaticRouteOutputWithContext(ctx context.Context) RouterStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStaticRouteOutput)
}

// RouterStaticRouteArrayInput is an input type that accepts RouterStaticRouteArray and RouterStaticRouteArrayOutput values.
// You can construct a concrete instance of `RouterStaticRouteArrayInput` via:
//
//	RouterStaticRouteArray{ RouterStaticRouteArgs{...} }
type RouterStaticRouteArrayInput interface {
	pulumi.Input

	ToRouterStaticRouteArrayOutput() RouterStaticRouteArrayOutput
	ToRouterStaticRouteArrayOutputWithContext(context.Context) RouterStaticRouteArrayOutput
}

type RouterStaticRouteArray []RouterStaticRouteInput

func (RouterStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStaticRoute)(nil)).Elem()
}

func (i RouterStaticRouteArray) ToRouterStaticRouteArrayOutput() RouterStaticRouteArrayOutput {
	return i.ToRouterStaticRouteArrayOutputWithContext(context.Background())
}

func (i RouterStaticRouteArray) ToRouterStaticRouteArrayOutputWithContext(ctx context.Context) RouterStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouterStaticRouteArrayOutput)
}

type RouterStaticRouteOutput struct{ *pulumi.OutputState }

func (RouterStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouterStaticRoute)(nil)).Elem()
}

func (o RouterStaticRouteOutput) ToRouterStaticRouteOutput() RouterStaticRouteOutput {
	return o
}

func (o RouterStaticRouteOutput) ToRouterStaticRouteOutputWithContext(ctx context.Context) RouterStaticRouteOutput {
	return o
}

// Name or description of the route.
func (o RouterStaticRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouterStaticRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Next hop address. NOTE: For static route to be active the next hop has to be an address of a reachable running Cloud Server in one of the Private Networks attached to the router.
func (o RouterStaticRouteOutput) Nexthop() pulumi.StringOutput {
	return o.ApplyT(func(v RouterStaticRoute) string { return v.Nexthop }).(pulumi.StringOutput)
}

// Destination prefix of the route.
func (o RouterStaticRouteOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v RouterStaticRoute) string { return v.Route }).(pulumi.StringOutput)
}

type RouterStaticRouteArrayOutput struct{ *pulumi.OutputState }

func (RouterStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouterStaticRoute)(nil)).Elem()
}

func (o RouterStaticRouteArrayOutput) ToRouterStaticRouteArrayOutput() RouterStaticRouteArrayOutput {
	return o
}

func (o RouterStaticRouteArrayOutput) ToRouterStaticRouteArrayOutputWithContext(ctx context.Context) RouterStaticRouteArrayOutput {
	return o
}

func (o RouterStaticRouteArrayOutput) Index(i pulumi.IntInput) RouterStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouterStaticRoute {
		return vs[0].([]RouterStaticRoute)[vs[1].(int)]
	}).(RouterStaticRouteOutput)
}

type ServerFirewallRulesFirewallRule struct {
	// Action to take if the rule conditions are met
	Action string `pulumi:"action"`
	// Freeform comment string for the rule
	Comment *string `pulumi:"comment"`
	// The destination address range ends from this address
	DestinationAddressEnd *string `pulumi:"destinationAddressEnd"`
	// The destination address range starts from this address
	DestinationAddressStart *string `pulumi:"destinationAddressStart"`
	// The destination port range ends from this port number
	DestinationPortEnd *string `pulumi:"destinationPortEnd"`
	// The destination port range starts from this port number
	DestinationPortStart *string `pulumi:"destinationPortStart"`
	// The direction of network traffic this rule will be applied to
	Direction string `pulumi:"direction"`
	// The address family of new firewall rule
	Family *string `pulumi:"family"`
	// The ICMP type
	IcmpType *string `pulumi:"icmpType"`
	// The protocol this rule will be applied to
	Protocol *string `pulumi:"protocol"`
	// The source address range ends from this address
	SourceAddressEnd *string `pulumi:"sourceAddressEnd"`
	// The source address range starts from this address
	SourceAddressStart *string `pulumi:"sourceAddressStart"`
	// The source port range ends from this port number
	SourcePortEnd *string `pulumi:"sourcePortEnd"`
	// The source port range starts from this port number
	SourcePortStart *string `pulumi:"sourcePortStart"`
}

// ServerFirewallRulesFirewallRuleInput is an input type that accepts ServerFirewallRulesFirewallRuleArgs and ServerFirewallRulesFirewallRuleOutput values.
// You can construct a concrete instance of `ServerFirewallRulesFirewallRuleInput` via:
//
//	ServerFirewallRulesFirewallRuleArgs{...}
type ServerFirewallRulesFirewallRuleInput interface {
	pulumi.Input

	ToServerFirewallRulesFirewallRuleOutput() ServerFirewallRulesFirewallRuleOutput
	ToServerFirewallRulesFirewallRuleOutputWithContext(context.Context) ServerFirewallRulesFirewallRuleOutput
}

type ServerFirewallRulesFirewallRuleArgs struct {
	// Action to take if the rule conditions are met
	Action pulumi.StringInput `pulumi:"action"`
	// Freeform comment string for the rule
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The destination address range ends from this address
	DestinationAddressEnd pulumi.StringPtrInput `pulumi:"destinationAddressEnd"`
	// The destination address range starts from this address
	DestinationAddressStart pulumi.StringPtrInput `pulumi:"destinationAddressStart"`
	// The destination port range ends from this port number
	DestinationPortEnd pulumi.StringPtrInput `pulumi:"destinationPortEnd"`
	// The destination port range starts from this port number
	DestinationPortStart pulumi.StringPtrInput `pulumi:"destinationPortStart"`
	// The direction of network traffic this rule will be applied to
	Direction pulumi.StringInput `pulumi:"direction"`
	// The address family of new firewall rule
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The ICMP type
	IcmpType pulumi.StringPtrInput `pulumi:"icmpType"`
	// The protocol this rule will be applied to
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The source address range ends from this address
	SourceAddressEnd pulumi.StringPtrInput `pulumi:"sourceAddressEnd"`
	// The source address range starts from this address
	SourceAddressStart pulumi.StringPtrInput `pulumi:"sourceAddressStart"`
	// The source port range ends from this port number
	SourcePortEnd pulumi.StringPtrInput `pulumi:"sourcePortEnd"`
	// The source port range starts from this port number
	SourcePortStart pulumi.StringPtrInput `pulumi:"sourcePortStart"`
}

func (ServerFirewallRulesFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFirewallRulesFirewallRule)(nil)).Elem()
}

func (i ServerFirewallRulesFirewallRuleArgs) ToServerFirewallRulesFirewallRuleOutput() ServerFirewallRulesFirewallRuleOutput {
	return i.ToServerFirewallRulesFirewallRuleOutputWithContext(context.Background())
}

func (i ServerFirewallRulesFirewallRuleArgs) ToServerFirewallRulesFirewallRuleOutputWithContext(ctx context.Context) ServerFirewallRulesFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFirewallRulesFirewallRuleOutput)
}

// ServerFirewallRulesFirewallRuleArrayInput is an input type that accepts ServerFirewallRulesFirewallRuleArray and ServerFirewallRulesFirewallRuleArrayOutput values.
// You can construct a concrete instance of `ServerFirewallRulesFirewallRuleArrayInput` via:
//
//	ServerFirewallRulesFirewallRuleArray{ ServerFirewallRulesFirewallRuleArgs{...} }
type ServerFirewallRulesFirewallRuleArrayInput interface {
	pulumi.Input

	ToServerFirewallRulesFirewallRuleArrayOutput() ServerFirewallRulesFirewallRuleArrayOutput
	ToServerFirewallRulesFirewallRuleArrayOutputWithContext(context.Context) ServerFirewallRulesFirewallRuleArrayOutput
}

type ServerFirewallRulesFirewallRuleArray []ServerFirewallRulesFirewallRuleInput

func (ServerFirewallRulesFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerFirewallRulesFirewallRule)(nil)).Elem()
}

func (i ServerFirewallRulesFirewallRuleArray) ToServerFirewallRulesFirewallRuleArrayOutput() ServerFirewallRulesFirewallRuleArrayOutput {
	return i.ToServerFirewallRulesFirewallRuleArrayOutputWithContext(context.Background())
}

func (i ServerFirewallRulesFirewallRuleArray) ToServerFirewallRulesFirewallRuleArrayOutputWithContext(ctx context.Context) ServerFirewallRulesFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerFirewallRulesFirewallRuleArrayOutput)
}

type ServerFirewallRulesFirewallRuleOutput struct{ *pulumi.OutputState }

func (ServerFirewallRulesFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerFirewallRulesFirewallRule)(nil)).Elem()
}

func (o ServerFirewallRulesFirewallRuleOutput) ToServerFirewallRulesFirewallRuleOutput() ServerFirewallRulesFirewallRuleOutput {
	return o
}

func (o ServerFirewallRulesFirewallRuleOutput) ToServerFirewallRulesFirewallRuleOutputWithContext(ctx context.Context) ServerFirewallRulesFirewallRuleOutput {
	return o
}

// Action to take if the rule conditions are met
func (o ServerFirewallRulesFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) string { return v.Action }).(pulumi.StringOutput)
}

// Freeform comment string for the rule
func (o ServerFirewallRulesFirewallRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The destination address range ends from this address
func (o ServerFirewallRulesFirewallRuleOutput) DestinationAddressEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.DestinationAddressEnd }).(pulumi.StringPtrOutput)
}

// The destination address range starts from this address
func (o ServerFirewallRulesFirewallRuleOutput) DestinationAddressStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.DestinationAddressStart }).(pulumi.StringPtrOutput)
}

// The destination port range ends from this port number
func (o ServerFirewallRulesFirewallRuleOutput) DestinationPortEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.DestinationPortEnd }).(pulumi.StringPtrOutput)
}

// The destination port range starts from this port number
func (o ServerFirewallRulesFirewallRuleOutput) DestinationPortStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.DestinationPortStart }).(pulumi.StringPtrOutput)
}

// The direction of network traffic this rule will be applied to
func (o ServerFirewallRulesFirewallRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) string { return v.Direction }).(pulumi.StringOutput)
}

// The address family of new firewall rule
func (o ServerFirewallRulesFirewallRuleOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The ICMP type
func (o ServerFirewallRulesFirewallRuleOutput) IcmpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.IcmpType }).(pulumi.StringPtrOutput)
}

// The protocol this rule will be applied to
func (o ServerFirewallRulesFirewallRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The source address range ends from this address
func (o ServerFirewallRulesFirewallRuleOutput) SourceAddressEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.SourceAddressEnd }).(pulumi.StringPtrOutput)
}

// The source address range starts from this address
func (o ServerFirewallRulesFirewallRuleOutput) SourceAddressStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.SourceAddressStart }).(pulumi.StringPtrOutput)
}

// The source port range ends from this port number
func (o ServerFirewallRulesFirewallRuleOutput) SourcePortEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.SourcePortEnd }).(pulumi.StringPtrOutput)
}

// The source port range starts from this port number
func (o ServerFirewallRulesFirewallRuleOutput) SourcePortStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerFirewallRulesFirewallRule) *string { return v.SourcePortStart }).(pulumi.StringPtrOutput)
}

type ServerFirewallRulesFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (ServerFirewallRulesFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerFirewallRulesFirewallRule)(nil)).Elem()
}

func (o ServerFirewallRulesFirewallRuleArrayOutput) ToServerFirewallRulesFirewallRuleArrayOutput() ServerFirewallRulesFirewallRuleArrayOutput {
	return o
}

func (o ServerFirewallRulesFirewallRuleArrayOutput) ToServerFirewallRulesFirewallRuleArrayOutputWithContext(ctx context.Context) ServerFirewallRulesFirewallRuleArrayOutput {
	return o
}

func (o ServerFirewallRulesFirewallRuleArrayOutput) Index(i pulumi.IntInput) ServerFirewallRulesFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerFirewallRulesFirewallRule {
		return vs[0].([]ServerFirewallRulesFirewallRule)[vs[1].(int)]
	}).(ServerFirewallRulesFirewallRuleOutput)
}

type ServerLogin struct {
	// Indicates a password should be create to allow access
	CreatePassword *bool `pulumi:"createPassword"`
	// A list of ssh keys to access the server
	Keys []string `pulumi:"keys"`
	// The delivery method for the server's root password (one of `none`, `email` or `sms`)
	PasswordDelivery *string `pulumi:"passwordDelivery"`
	// Username to be create to access the server
	User *string `pulumi:"user"`
}

// ServerLoginInput is an input type that accepts ServerLoginArgs and ServerLoginOutput values.
// You can construct a concrete instance of `ServerLoginInput` via:
//
//	ServerLoginArgs{...}
type ServerLoginInput interface {
	pulumi.Input

	ToServerLoginOutput() ServerLoginOutput
	ToServerLoginOutputWithContext(context.Context) ServerLoginOutput
}

type ServerLoginArgs struct {
	// Indicates a password should be create to allow access
	CreatePassword pulumi.BoolPtrInput `pulumi:"createPassword"`
	// A list of ssh keys to access the server
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// The delivery method for the server's root password (one of `none`, `email` or `sms`)
	PasswordDelivery pulumi.StringPtrInput `pulumi:"passwordDelivery"`
	// Username to be create to access the server
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ServerLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerLogin)(nil)).Elem()
}

func (i ServerLoginArgs) ToServerLoginOutput() ServerLoginOutput {
	return i.ToServerLoginOutputWithContext(context.Background())
}

func (i ServerLoginArgs) ToServerLoginOutputWithContext(ctx context.Context) ServerLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerLoginOutput)
}

func (i ServerLoginArgs) ToServerLoginPtrOutput() ServerLoginPtrOutput {
	return i.ToServerLoginPtrOutputWithContext(context.Background())
}

func (i ServerLoginArgs) ToServerLoginPtrOutputWithContext(ctx context.Context) ServerLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerLoginOutput).ToServerLoginPtrOutputWithContext(ctx)
}

// ServerLoginPtrInput is an input type that accepts ServerLoginArgs, ServerLoginPtr and ServerLoginPtrOutput values.
// You can construct a concrete instance of `ServerLoginPtrInput` via:
//
//	        ServerLoginArgs{...}
//
//	or:
//
//	        nil
type ServerLoginPtrInput interface {
	pulumi.Input

	ToServerLoginPtrOutput() ServerLoginPtrOutput
	ToServerLoginPtrOutputWithContext(context.Context) ServerLoginPtrOutput
}

type serverLoginPtrType ServerLoginArgs

func ServerLoginPtr(v *ServerLoginArgs) ServerLoginPtrInput {
	return (*serverLoginPtrType)(v)
}

func (*serverLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerLogin)(nil)).Elem()
}

func (i *serverLoginPtrType) ToServerLoginPtrOutput() ServerLoginPtrOutput {
	return i.ToServerLoginPtrOutputWithContext(context.Background())
}

func (i *serverLoginPtrType) ToServerLoginPtrOutputWithContext(ctx context.Context) ServerLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerLoginPtrOutput)
}

type ServerLoginOutput struct{ *pulumi.OutputState }

func (ServerLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerLogin)(nil)).Elem()
}

func (o ServerLoginOutput) ToServerLoginOutput() ServerLoginOutput {
	return o
}

func (o ServerLoginOutput) ToServerLoginOutputWithContext(ctx context.Context) ServerLoginOutput {
	return o
}

func (o ServerLoginOutput) ToServerLoginPtrOutput() ServerLoginPtrOutput {
	return o.ToServerLoginPtrOutputWithContext(context.Background())
}

func (o ServerLoginOutput) ToServerLoginPtrOutputWithContext(ctx context.Context) ServerLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerLogin) *ServerLogin {
		return &v
	}).(ServerLoginPtrOutput)
}

// Indicates a password should be create to allow access
func (o ServerLoginOutput) CreatePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerLogin) *bool { return v.CreatePassword }).(pulumi.BoolPtrOutput)
}

// A list of ssh keys to access the server
func (o ServerLoginOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerLogin) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// The delivery method for the server's root password (one of `none`, `email` or `sms`)
func (o ServerLoginOutput) PasswordDelivery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerLogin) *string { return v.PasswordDelivery }).(pulumi.StringPtrOutput)
}

// Username to be create to access the server
func (o ServerLoginOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerLogin) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ServerLoginPtrOutput struct{ *pulumi.OutputState }

func (ServerLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerLogin)(nil)).Elem()
}

func (o ServerLoginPtrOutput) ToServerLoginPtrOutput() ServerLoginPtrOutput {
	return o
}

func (o ServerLoginPtrOutput) ToServerLoginPtrOutputWithContext(ctx context.Context) ServerLoginPtrOutput {
	return o
}

func (o ServerLoginPtrOutput) Elem() ServerLoginOutput {
	return o.ApplyT(func(v *ServerLogin) ServerLogin {
		if v != nil {
			return *v
		}
		var ret ServerLogin
		return ret
	}).(ServerLoginOutput)
}

// Indicates a password should be create to allow access
func (o ServerLoginPtrOutput) CreatePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerLogin) *bool {
		if v == nil {
			return nil
		}
		return v.CreatePassword
	}).(pulumi.BoolPtrOutput)
}

// A list of ssh keys to access the server
func (o ServerLoginPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerLogin) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// The delivery method for the server's root password (one of `none`, `email` or `sms`)
func (o ServerLoginPtrOutput) PasswordDelivery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerLogin) *string {
		if v == nil {
			return nil
		}
		return v.PasswordDelivery
	}).(pulumi.StringPtrOutput)
}

// Username to be create to access the server
func (o ServerLoginPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerLogin) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type ServerNetworkInterface struct {
	// 0-4 blocks of additional IP addresses to assign to this interface. Allowed only with network interfaces of type `private`
	AdditionalIpAddresses []ServerNetworkInterfaceAdditionalIpAddress `pulumi:"additionalIpAddresses"`
	// `true` if this interface should be used for network booting.
	Bootable *bool `pulumi:"bootable"`
	// The assigned primary IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The type of the primary IP address of this interface (one of `IPv4` or `IPv6`).
	IpAddressFamily *string `pulumi:"ipAddressFamily"`
	// `true` indicates that the primary IP address is a floating IP address.
	IpAddressFloating *bool `pulumi:"ipAddressFloating"`
	// The assigned MAC address.
	MacAddress *string `pulumi:"macAddress"`
	// The unique ID of a network to attach this network to.
	Network *string `pulumi:"network"`
	// `true` if source IP should be filtered.
	SourceIpFiltering *bool `pulumi:"sourceIpFiltering"`
	// Network interface type. For private network interfaces, a network must be specified with an existing network id.
	Type string `pulumi:"type"`
}

// ServerNetworkInterfaceInput is an input type that accepts ServerNetworkInterfaceArgs and ServerNetworkInterfaceOutput values.
// You can construct a concrete instance of `ServerNetworkInterfaceInput` via:
//
//	ServerNetworkInterfaceArgs{...}
type ServerNetworkInterfaceInput interface {
	pulumi.Input

	ToServerNetworkInterfaceOutput() ServerNetworkInterfaceOutput
	ToServerNetworkInterfaceOutputWithContext(context.Context) ServerNetworkInterfaceOutput
}

type ServerNetworkInterfaceArgs struct {
	// 0-4 blocks of additional IP addresses to assign to this interface. Allowed only with network interfaces of type `private`
	AdditionalIpAddresses ServerNetworkInterfaceAdditionalIpAddressArrayInput `pulumi:"additionalIpAddresses"`
	// `true` if this interface should be used for network booting.
	Bootable pulumi.BoolPtrInput `pulumi:"bootable"`
	// The assigned primary IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The type of the primary IP address of this interface (one of `IPv4` or `IPv6`).
	IpAddressFamily pulumi.StringPtrInput `pulumi:"ipAddressFamily"`
	// `true` indicates that the primary IP address is a floating IP address.
	IpAddressFloating pulumi.BoolPtrInput `pulumi:"ipAddressFloating"`
	// The assigned MAC address.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The unique ID of a network to attach this network to.
	Network pulumi.StringPtrInput `pulumi:"network"`
	// `true` if source IP should be filtered.
	SourceIpFiltering pulumi.BoolPtrInput `pulumi:"sourceIpFiltering"`
	// Network interface type. For private network interfaces, a network must be specified with an existing network id.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkInterface)(nil)).Elem()
}

func (i ServerNetworkInterfaceArgs) ToServerNetworkInterfaceOutput() ServerNetworkInterfaceOutput {
	return i.ToServerNetworkInterfaceOutputWithContext(context.Background())
}

func (i ServerNetworkInterfaceArgs) ToServerNetworkInterfaceOutputWithContext(ctx context.Context) ServerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkInterfaceOutput)
}

// ServerNetworkInterfaceArrayInput is an input type that accepts ServerNetworkInterfaceArray and ServerNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ServerNetworkInterfaceArrayInput` via:
//
//	ServerNetworkInterfaceArray{ ServerNetworkInterfaceArgs{...} }
type ServerNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToServerNetworkInterfaceArrayOutput() ServerNetworkInterfaceArrayOutput
	ToServerNetworkInterfaceArrayOutputWithContext(context.Context) ServerNetworkInterfaceArrayOutput
}

type ServerNetworkInterfaceArray []ServerNetworkInterfaceInput

func (ServerNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkInterface)(nil)).Elem()
}

func (i ServerNetworkInterfaceArray) ToServerNetworkInterfaceArrayOutput() ServerNetworkInterfaceArrayOutput {
	return i.ToServerNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ServerNetworkInterfaceArray) ToServerNetworkInterfaceArrayOutputWithContext(ctx context.Context) ServerNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkInterfaceArrayOutput)
}

type ServerNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ServerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkInterface)(nil)).Elem()
}

func (o ServerNetworkInterfaceOutput) ToServerNetworkInterfaceOutput() ServerNetworkInterfaceOutput {
	return o
}

func (o ServerNetworkInterfaceOutput) ToServerNetworkInterfaceOutputWithContext(ctx context.Context) ServerNetworkInterfaceOutput {
	return o
}

// 0-4 blocks of additional IP addresses to assign to this interface. Allowed only with network interfaces of type `private`
func (o ServerNetworkInterfaceOutput) AdditionalIpAddresses() ServerNetworkInterfaceAdditionalIpAddressArrayOutput {
	return o.ApplyT(func(v ServerNetworkInterface) []ServerNetworkInterfaceAdditionalIpAddress {
		return v.AdditionalIpAddresses
	}).(ServerNetworkInterfaceAdditionalIpAddressArrayOutput)
}

// `true` if this interface should be used for network booting.
func (o ServerNetworkInterfaceOutput) Bootable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *bool { return v.Bootable }).(pulumi.BoolPtrOutput)
}

// The assigned primary IP address.
func (o ServerNetworkInterfaceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The type of the primary IP address of this interface (one of `IPv4` or `IPv6`).
func (o ServerNetworkInterfaceOutput) IpAddressFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *string { return v.IpAddressFamily }).(pulumi.StringPtrOutput)
}

// `true` indicates that the primary IP address is a floating IP address.
func (o ServerNetworkInterfaceOutput) IpAddressFloating() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *bool { return v.IpAddressFloating }).(pulumi.BoolPtrOutput)
}

// The assigned MAC address.
func (o ServerNetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The unique ID of a network to attach this network to.
func (o ServerNetworkInterfaceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *string { return v.Network }).(pulumi.StringPtrOutput)
}

// `true` if source IP should be filtered.
func (o ServerNetworkInterfaceOutput) SourceIpFiltering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterface) *bool { return v.SourceIpFiltering }).(pulumi.BoolPtrOutput)
}

// Network interface type. For private network interfaces, a network must be specified with an existing network id.
func (o ServerNetworkInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerNetworkInterface) string { return v.Type }).(pulumi.StringOutput)
}

type ServerNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ServerNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkInterface)(nil)).Elem()
}

func (o ServerNetworkInterfaceArrayOutput) ToServerNetworkInterfaceArrayOutput() ServerNetworkInterfaceArrayOutput {
	return o
}

func (o ServerNetworkInterfaceArrayOutput) ToServerNetworkInterfaceArrayOutputWithContext(ctx context.Context) ServerNetworkInterfaceArrayOutput {
	return o
}

func (o ServerNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ServerNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetworkInterface {
		return vs[0].([]ServerNetworkInterface)[vs[1].(int)]
	}).(ServerNetworkInterfaceOutput)
}

type ServerNetworkInterfaceAdditionalIpAddress struct {
	// The assigned additional IP address.
	IpAddress *string `pulumi:"ipAddress"`
	// The type of this additional IP address of this interface (one of `IPv4` or `IPv6`).
	IpAddressFamily *string `pulumi:"ipAddressFamily"`
	// `true` indicates that the additional IP address is a floating IP address.
	IpAddressFloating *bool `pulumi:"ipAddressFloating"`
}

// ServerNetworkInterfaceAdditionalIpAddressInput is an input type that accepts ServerNetworkInterfaceAdditionalIpAddressArgs and ServerNetworkInterfaceAdditionalIpAddressOutput values.
// You can construct a concrete instance of `ServerNetworkInterfaceAdditionalIpAddressInput` via:
//
//	ServerNetworkInterfaceAdditionalIpAddressArgs{...}
type ServerNetworkInterfaceAdditionalIpAddressInput interface {
	pulumi.Input

	ToServerNetworkInterfaceAdditionalIpAddressOutput() ServerNetworkInterfaceAdditionalIpAddressOutput
	ToServerNetworkInterfaceAdditionalIpAddressOutputWithContext(context.Context) ServerNetworkInterfaceAdditionalIpAddressOutput
}

type ServerNetworkInterfaceAdditionalIpAddressArgs struct {
	// The assigned additional IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The type of this additional IP address of this interface (one of `IPv4` or `IPv6`).
	IpAddressFamily pulumi.StringPtrInput `pulumi:"ipAddressFamily"`
	// `true` indicates that the additional IP address is a floating IP address.
	IpAddressFloating pulumi.BoolPtrInput `pulumi:"ipAddressFloating"`
}

func (ServerNetworkInterfaceAdditionalIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkInterfaceAdditionalIpAddress)(nil)).Elem()
}

func (i ServerNetworkInterfaceAdditionalIpAddressArgs) ToServerNetworkInterfaceAdditionalIpAddressOutput() ServerNetworkInterfaceAdditionalIpAddressOutput {
	return i.ToServerNetworkInterfaceAdditionalIpAddressOutputWithContext(context.Background())
}

func (i ServerNetworkInterfaceAdditionalIpAddressArgs) ToServerNetworkInterfaceAdditionalIpAddressOutputWithContext(ctx context.Context) ServerNetworkInterfaceAdditionalIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkInterfaceAdditionalIpAddressOutput)
}

// ServerNetworkInterfaceAdditionalIpAddressArrayInput is an input type that accepts ServerNetworkInterfaceAdditionalIpAddressArray and ServerNetworkInterfaceAdditionalIpAddressArrayOutput values.
// You can construct a concrete instance of `ServerNetworkInterfaceAdditionalIpAddressArrayInput` via:
//
//	ServerNetworkInterfaceAdditionalIpAddressArray{ ServerNetworkInterfaceAdditionalIpAddressArgs{...} }
type ServerNetworkInterfaceAdditionalIpAddressArrayInput interface {
	pulumi.Input

	ToServerNetworkInterfaceAdditionalIpAddressArrayOutput() ServerNetworkInterfaceAdditionalIpAddressArrayOutput
	ToServerNetworkInterfaceAdditionalIpAddressArrayOutputWithContext(context.Context) ServerNetworkInterfaceAdditionalIpAddressArrayOutput
}

type ServerNetworkInterfaceAdditionalIpAddressArray []ServerNetworkInterfaceAdditionalIpAddressInput

func (ServerNetworkInterfaceAdditionalIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkInterfaceAdditionalIpAddress)(nil)).Elem()
}

func (i ServerNetworkInterfaceAdditionalIpAddressArray) ToServerNetworkInterfaceAdditionalIpAddressArrayOutput() ServerNetworkInterfaceAdditionalIpAddressArrayOutput {
	return i.ToServerNetworkInterfaceAdditionalIpAddressArrayOutputWithContext(context.Background())
}

func (i ServerNetworkInterfaceAdditionalIpAddressArray) ToServerNetworkInterfaceAdditionalIpAddressArrayOutputWithContext(ctx context.Context) ServerNetworkInterfaceAdditionalIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkInterfaceAdditionalIpAddressArrayOutput)
}

type ServerNetworkInterfaceAdditionalIpAddressOutput struct{ *pulumi.OutputState }

func (ServerNetworkInterfaceAdditionalIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkInterfaceAdditionalIpAddress)(nil)).Elem()
}

func (o ServerNetworkInterfaceAdditionalIpAddressOutput) ToServerNetworkInterfaceAdditionalIpAddressOutput() ServerNetworkInterfaceAdditionalIpAddressOutput {
	return o
}

func (o ServerNetworkInterfaceAdditionalIpAddressOutput) ToServerNetworkInterfaceAdditionalIpAddressOutputWithContext(ctx context.Context) ServerNetworkInterfaceAdditionalIpAddressOutput {
	return o
}

// The assigned additional IP address.
func (o ServerNetworkInterfaceAdditionalIpAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterfaceAdditionalIpAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The type of this additional IP address of this interface (one of `IPv4` or `IPv6`).
func (o ServerNetworkInterfaceAdditionalIpAddressOutput) IpAddressFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterfaceAdditionalIpAddress) *string { return v.IpAddressFamily }).(pulumi.StringPtrOutput)
}

// `true` indicates that the additional IP address is a floating IP address.
func (o ServerNetworkInterfaceAdditionalIpAddressOutput) IpAddressFloating() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerNetworkInterfaceAdditionalIpAddress) *bool { return v.IpAddressFloating }).(pulumi.BoolPtrOutput)
}

type ServerNetworkInterfaceAdditionalIpAddressArrayOutput struct{ *pulumi.OutputState }

func (ServerNetworkInterfaceAdditionalIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkInterfaceAdditionalIpAddress)(nil)).Elem()
}

func (o ServerNetworkInterfaceAdditionalIpAddressArrayOutput) ToServerNetworkInterfaceAdditionalIpAddressArrayOutput() ServerNetworkInterfaceAdditionalIpAddressArrayOutput {
	return o
}

func (o ServerNetworkInterfaceAdditionalIpAddressArrayOutput) ToServerNetworkInterfaceAdditionalIpAddressArrayOutputWithContext(ctx context.Context) ServerNetworkInterfaceAdditionalIpAddressArrayOutput {
	return o
}

func (o ServerNetworkInterfaceAdditionalIpAddressArrayOutput) Index(i pulumi.IntInput) ServerNetworkInterfaceAdditionalIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetworkInterfaceAdditionalIpAddress {
		return vs[0].([]ServerNetworkInterfaceAdditionalIpAddress)[vs[1].(int)]
	}).(ServerNetworkInterfaceAdditionalIpAddressOutput)
}

type ServerSimpleBackup struct {
	// Simple backup plan. Accepted values: daily, dailies, weeklies, monthlies.
	Plan string `pulumi:"plan"`
	// Time of the day at which backup will be taken. Should be provided in a hhmm format (e.g. 2230).
	Time string `pulumi:"time"`
}

// ServerSimpleBackupInput is an input type that accepts ServerSimpleBackupArgs and ServerSimpleBackupOutput values.
// You can construct a concrete instance of `ServerSimpleBackupInput` via:
//
//	ServerSimpleBackupArgs{...}
type ServerSimpleBackupInput interface {
	pulumi.Input

	ToServerSimpleBackupOutput() ServerSimpleBackupOutput
	ToServerSimpleBackupOutputWithContext(context.Context) ServerSimpleBackupOutput
}

type ServerSimpleBackupArgs struct {
	// Simple backup plan. Accepted values: daily, dailies, weeklies, monthlies.
	Plan pulumi.StringInput `pulumi:"plan"`
	// Time of the day at which backup will be taken. Should be provided in a hhmm format (e.g. 2230).
	Time pulumi.StringInput `pulumi:"time"`
}

func (ServerSimpleBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSimpleBackup)(nil)).Elem()
}

func (i ServerSimpleBackupArgs) ToServerSimpleBackupOutput() ServerSimpleBackupOutput {
	return i.ToServerSimpleBackupOutputWithContext(context.Background())
}

func (i ServerSimpleBackupArgs) ToServerSimpleBackupOutputWithContext(ctx context.Context) ServerSimpleBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSimpleBackupOutput)
}

func (i ServerSimpleBackupArgs) ToServerSimpleBackupPtrOutput() ServerSimpleBackupPtrOutput {
	return i.ToServerSimpleBackupPtrOutputWithContext(context.Background())
}

func (i ServerSimpleBackupArgs) ToServerSimpleBackupPtrOutputWithContext(ctx context.Context) ServerSimpleBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSimpleBackupOutput).ToServerSimpleBackupPtrOutputWithContext(ctx)
}

// ServerSimpleBackupPtrInput is an input type that accepts ServerSimpleBackupArgs, ServerSimpleBackupPtr and ServerSimpleBackupPtrOutput values.
// You can construct a concrete instance of `ServerSimpleBackupPtrInput` via:
//
//	        ServerSimpleBackupArgs{...}
//
//	or:
//
//	        nil
type ServerSimpleBackupPtrInput interface {
	pulumi.Input

	ToServerSimpleBackupPtrOutput() ServerSimpleBackupPtrOutput
	ToServerSimpleBackupPtrOutputWithContext(context.Context) ServerSimpleBackupPtrOutput
}

type serverSimpleBackupPtrType ServerSimpleBackupArgs

func ServerSimpleBackupPtr(v *ServerSimpleBackupArgs) ServerSimpleBackupPtrInput {
	return (*serverSimpleBackupPtrType)(v)
}

func (*serverSimpleBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSimpleBackup)(nil)).Elem()
}

func (i *serverSimpleBackupPtrType) ToServerSimpleBackupPtrOutput() ServerSimpleBackupPtrOutput {
	return i.ToServerSimpleBackupPtrOutputWithContext(context.Background())
}

func (i *serverSimpleBackupPtrType) ToServerSimpleBackupPtrOutputWithContext(ctx context.Context) ServerSimpleBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerSimpleBackupPtrOutput)
}

type ServerSimpleBackupOutput struct{ *pulumi.OutputState }

func (ServerSimpleBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerSimpleBackup)(nil)).Elem()
}

func (o ServerSimpleBackupOutput) ToServerSimpleBackupOutput() ServerSimpleBackupOutput {
	return o
}

func (o ServerSimpleBackupOutput) ToServerSimpleBackupOutputWithContext(ctx context.Context) ServerSimpleBackupOutput {
	return o
}

func (o ServerSimpleBackupOutput) ToServerSimpleBackupPtrOutput() ServerSimpleBackupPtrOutput {
	return o.ToServerSimpleBackupPtrOutputWithContext(context.Background())
}

func (o ServerSimpleBackupOutput) ToServerSimpleBackupPtrOutputWithContext(ctx context.Context) ServerSimpleBackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerSimpleBackup) *ServerSimpleBackup {
		return &v
	}).(ServerSimpleBackupPtrOutput)
}

// Simple backup plan. Accepted values: daily, dailies, weeklies, monthlies.
func (o ServerSimpleBackupOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v ServerSimpleBackup) string { return v.Plan }).(pulumi.StringOutput)
}

// Time of the day at which backup will be taken. Should be provided in a hhmm format (e.g. 2230).
func (o ServerSimpleBackupOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v ServerSimpleBackup) string { return v.Time }).(pulumi.StringOutput)
}

type ServerSimpleBackupPtrOutput struct{ *pulumi.OutputState }

func (ServerSimpleBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerSimpleBackup)(nil)).Elem()
}

func (o ServerSimpleBackupPtrOutput) ToServerSimpleBackupPtrOutput() ServerSimpleBackupPtrOutput {
	return o
}

func (o ServerSimpleBackupPtrOutput) ToServerSimpleBackupPtrOutputWithContext(ctx context.Context) ServerSimpleBackupPtrOutput {
	return o
}

func (o ServerSimpleBackupPtrOutput) Elem() ServerSimpleBackupOutput {
	return o.ApplyT(func(v *ServerSimpleBackup) ServerSimpleBackup {
		if v != nil {
			return *v
		}
		var ret ServerSimpleBackup
		return ret
	}).(ServerSimpleBackupOutput)
}

// Simple backup plan. Accepted values: daily, dailies, weeklies, monthlies.
func (o ServerSimpleBackupPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSimpleBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

// Time of the day at which backup will be taken. Should be provided in a hhmm format (e.g. 2230).
func (o ServerSimpleBackupPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerSimpleBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type ServerStorageDevice struct {
	// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
	Address *string `pulumi:"address"`
	// The device position in the given bus (defined via field `address`). Valid values for address `virtio` are `0-15` (`0`, for example). Valid values for `scsi` or `ide` are `0-1:0-1` (`0:0`, for example). Leave empty to auto-select next available address in the given bus.
	AddressPosition *string `pulumi:"addressPosition"`
	// A valid storage UUID
	Storage string `pulumi:"storage"`
	// The device type the storage will be attached as
	Type *string `pulumi:"type"`
}

// ServerStorageDeviceInput is an input type that accepts ServerStorageDeviceArgs and ServerStorageDeviceOutput values.
// You can construct a concrete instance of `ServerStorageDeviceInput` via:
//
//	ServerStorageDeviceArgs{...}
type ServerStorageDeviceInput interface {
	pulumi.Input

	ToServerStorageDeviceOutput() ServerStorageDeviceOutput
	ToServerStorageDeviceOutputWithContext(context.Context) ServerStorageDeviceOutput
}

type ServerStorageDeviceArgs struct {
	// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The device position in the given bus (defined via field `address`). Valid values for address `virtio` are `0-15` (`0`, for example). Valid values for `scsi` or `ide` are `0-1:0-1` (`0:0`, for example). Leave empty to auto-select next available address in the given bus.
	AddressPosition pulumi.StringPtrInput `pulumi:"addressPosition"`
	// A valid storage UUID
	Storage pulumi.StringInput `pulumi:"storage"`
	// The device type the storage will be attached as
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServerStorageDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageDevice)(nil)).Elem()
}

func (i ServerStorageDeviceArgs) ToServerStorageDeviceOutput() ServerStorageDeviceOutput {
	return i.ToServerStorageDeviceOutputWithContext(context.Background())
}

func (i ServerStorageDeviceArgs) ToServerStorageDeviceOutputWithContext(ctx context.Context) ServerStorageDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageDeviceOutput)
}

// ServerStorageDeviceArrayInput is an input type that accepts ServerStorageDeviceArray and ServerStorageDeviceArrayOutput values.
// You can construct a concrete instance of `ServerStorageDeviceArrayInput` via:
//
//	ServerStorageDeviceArray{ ServerStorageDeviceArgs{...} }
type ServerStorageDeviceArrayInput interface {
	pulumi.Input

	ToServerStorageDeviceArrayOutput() ServerStorageDeviceArrayOutput
	ToServerStorageDeviceArrayOutputWithContext(context.Context) ServerStorageDeviceArrayOutput
}

type ServerStorageDeviceArray []ServerStorageDeviceInput

func (ServerStorageDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStorageDevice)(nil)).Elem()
}

func (i ServerStorageDeviceArray) ToServerStorageDeviceArrayOutput() ServerStorageDeviceArrayOutput {
	return i.ToServerStorageDeviceArrayOutputWithContext(context.Background())
}

func (i ServerStorageDeviceArray) ToServerStorageDeviceArrayOutputWithContext(ctx context.Context) ServerStorageDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageDeviceArrayOutput)
}

type ServerStorageDeviceOutput struct{ *pulumi.OutputState }

func (ServerStorageDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageDevice)(nil)).Elem()
}

func (o ServerStorageDeviceOutput) ToServerStorageDeviceOutput() ServerStorageDeviceOutput {
	return o
}

func (o ServerStorageDeviceOutput) ToServerStorageDeviceOutputWithContext(ctx context.Context) ServerStorageDeviceOutput {
	return o
}

// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
func (o ServerStorageDeviceOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStorageDevice) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The device position in the given bus (defined via field `address`). Valid values for address `virtio` are `0-15` (`0`, for example). Valid values for `scsi` or `ide` are `0-1:0-1` (`0:0`, for example). Leave empty to auto-select next available address in the given bus.
func (o ServerStorageDeviceOutput) AddressPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStorageDevice) *string { return v.AddressPosition }).(pulumi.StringPtrOutput)
}

// A valid storage UUID
func (o ServerStorageDeviceOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v ServerStorageDevice) string { return v.Storage }).(pulumi.StringOutput)
}

// The device type the storage will be attached as
func (o ServerStorageDeviceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStorageDevice) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServerStorageDeviceArrayOutput struct{ *pulumi.OutputState }

func (ServerStorageDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStorageDevice)(nil)).Elem()
}

func (o ServerStorageDeviceArrayOutput) ToServerStorageDeviceArrayOutput() ServerStorageDeviceArrayOutput {
	return o
}

func (o ServerStorageDeviceArrayOutput) ToServerStorageDeviceArrayOutputWithContext(ctx context.Context) ServerStorageDeviceArrayOutput {
	return o
}

func (o ServerStorageDeviceArrayOutput) Index(i pulumi.IntInput) ServerStorageDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerStorageDevice {
		return vs[0].([]ServerStorageDevice)[vs[1].(int)]
	}).(ServerStorageDeviceOutput)
}

type ServerTemplate struct {
	// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
	Address *string `pulumi:"address"`
	// The device position in the given bus (defined via field `address`). For example `0:0`, or `0`. Leave empty to auto-select next available address in the given bus.
	AddressPosition *string                   `pulumi:"addressPosition"`
	BackupRule      *ServerTemplateBackupRule `pulumi:"backupRule"`
	// If set to true, the backup taken before the partition and filesystem resize attempt will be deleted immediately after success.
	DeleteAutoresizeBackup *bool `pulumi:"deleteAutoresizeBackup"`
	// Sets if the storage is encrypted at rest
	Encrypt *bool `pulumi:"encrypt"`
	// If set to true, provider will attempt to resize partition and filesystem when the size of template storage changes.
	// 							Please note that before the resize attempt is made, backup of the storage will be taken. If the resize attempt fails, the backup will be used
	// 							to restore the storage and then deleted. If the resize attempt succeeds, backup will be kept (unless deleteAutoresizeBackup option is set to true).
	// 							Taking and keeping backups incure costs.
	FilesystemAutoresize *bool `pulumi:"filesystemAutoresize"`
	// The unique identifier for the storage
	Id *string `pulumi:"id"`
	// The size of the storage in gigabytes
	Size *int `pulumi:"size"`
	// A valid storage UUID or template name. You can list available public templates with `upctl storage list --public --template` and available private templates with `upctl storage list --template`.
	Storage string `pulumi:"storage"`
	// The storage tier to use
	Tier *string `pulumi:"tier"`
	// A short, informative description
	Title *string `pulumi:"title"`
}

// ServerTemplateInput is an input type that accepts ServerTemplateArgs and ServerTemplateOutput values.
// You can construct a concrete instance of `ServerTemplateInput` via:
//
//	ServerTemplateArgs{...}
type ServerTemplateInput interface {
	pulumi.Input

	ToServerTemplateOutput() ServerTemplateOutput
	ToServerTemplateOutputWithContext(context.Context) ServerTemplateOutput
}

type ServerTemplateArgs struct {
	// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The device position in the given bus (defined via field `address`). For example `0:0`, or `0`. Leave empty to auto-select next available address in the given bus.
	AddressPosition pulumi.StringPtrInput            `pulumi:"addressPosition"`
	BackupRule      ServerTemplateBackupRulePtrInput `pulumi:"backupRule"`
	// If set to true, the backup taken before the partition and filesystem resize attempt will be deleted immediately after success.
	DeleteAutoresizeBackup pulumi.BoolPtrInput `pulumi:"deleteAutoresizeBackup"`
	// Sets if the storage is encrypted at rest
	Encrypt pulumi.BoolPtrInput `pulumi:"encrypt"`
	// If set to true, provider will attempt to resize partition and filesystem when the size of template storage changes.
	// 							Please note that before the resize attempt is made, backup of the storage will be taken. If the resize attempt fails, the backup will be used
	// 							to restore the storage and then deleted. If the resize attempt succeeds, backup will be kept (unless deleteAutoresizeBackup option is set to true).
	// 							Taking and keeping backups incure costs.
	FilesystemAutoresize pulumi.BoolPtrInput `pulumi:"filesystemAutoresize"`
	// The unique identifier for the storage
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The size of the storage in gigabytes
	Size pulumi.IntPtrInput `pulumi:"size"`
	// A valid storage UUID or template name. You can list available public templates with `upctl storage list --public --template` and available private templates with `upctl storage list --template`.
	Storage pulumi.StringInput `pulumi:"storage"`
	// The storage tier to use
	Tier pulumi.StringPtrInput `pulumi:"tier"`
	// A short, informative description
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (ServerTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTemplate)(nil)).Elem()
}

func (i ServerTemplateArgs) ToServerTemplateOutput() ServerTemplateOutput {
	return i.ToServerTemplateOutputWithContext(context.Background())
}

func (i ServerTemplateArgs) ToServerTemplateOutputWithContext(ctx context.Context) ServerTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTemplateOutput)
}

func (i ServerTemplateArgs) ToServerTemplatePtrOutput() ServerTemplatePtrOutput {
	return i.ToServerTemplatePtrOutputWithContext(context.Background())
}

func (i ServerTemplateArgs) ToServerTemplatePtrOutputWithContext(ctx context.Context) ServerTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTemplateOutput).ToServerTemplatePtrOutputWithContext(ctx)
}

// ServerTemplatePtrInput is an input type that accepts ServerTemplateArgs, ServerTemplatePtr and ServerTemplatePtrOutput values.
// You can construct a concrete instance of `ServerTemplatePtrInput` via:
//
//	        ServerTemplateArgs{...}
//
//	or:
//
//	        nil
type ServerTemplatePtrInput interface {
	pulumi.Input

	ToServerTemplatePtrOutput() ServerTemplatePtrOutput
	ToServerTemplatePtrOutputWithContext(context.Context) ServerTemplatePtrOutput
}

type serverTemplatePtrType ServerTemplateArgs

func ServerTemplatePtr(v *ServerTemplateArgs) ServerTemplatePtrInput {
	return (*serverTemplatePtrType)(v)
}

func (*serverTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTemplate)(nil)).Elem()
}

func (i *serverTemplatePtrType) ToServerTemplatePtrOutput() ServerTemplatePtrOutput {
	return i.ToServerTemplatePtrOutputWithContext(context.Background())
}

func (i *serverTemplatePtrType) ToServerTemplatePtrOutputWithContext(ctx context.Context) ServerTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTemplatePtrOutput)
}

type ServerTemplateOutput struct{ *pulumi.OutputState }

func (ServerTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTemplate)(nil)).Elem()
}

func (o ServerTemplateOutput) ToServerTemplateOutput() ServerTemplateOutput {
	return o
}

func (o ServerTemplateOutput) ToServerTemplateOutputWithContext(ctx context.Context) ServerTemplateOutput {
	return o
}

func (o ServerTemplateOutput) ToServerTemplatePtrOutput() ServerTemplatePtrOutput {
	return o.ToServerTemplatePtrOutputWithContext(context.Background())
}

func (o ServerTemplateOutput) ToServerTemplatePtrOutputWithContext(ctx context.Context) ServerTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerTemplate) *ServerTemplate {
		return &v
	}).(ServerTemplatePtrOutput)
}

// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
func (o ServerTemplateOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The device position in the given bus (defined via field `address`). For example `0:0`, or `0`. Leave empty to auto-select next available address in the given bus.
func (o ServerTemplateOutput) AddressPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *string { return v.AddressPosition }).(pulumi.StringPtrOutput)
}

func (o ServerTemplateOutput) BackupRule() ServerTemplateBackupRulePtrOutput {
	return o.ApplyT(func(v ServerTemplate) *ServerTemplateBackupRule { return v.BackupRule }).(ServerTemplateBackupRulePtrOutput)
}

// If set to true, the backup taken before the partition and filesystem resize attempt will be deleted immediately after success.
func (o ServerTemplateOutput) DeleteAutoresizeBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *bool { return v.DeleteAutoresizeBackup }).(pulumi.BoolPtrOutput)
}

// Sets if the storage is encrypted at rest
func (o ServerTemplateOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

// If set to true, provider will attempt to resize partition and filesystem when the size of template storage changes.
//
//	Please note that before the resize attempt is made, backup of the storage will be taken. If the resize attempt fails, the backup will be used
//	to restore the storage and then deleted. If the resize attempt succeeds, backup will be kept (unless deleteAutoresizeBackup option is set to true).
//	Taking and keeping backups incure costs.
func (o ServerTemplateOutput) FilesystemAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *bool { return v.FilesystemAutoresize }).(pulumi.BoolPtrOutput)
}

// The unique identifier for the storage
func (o ServerTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The size of the storage in gigabytes
func (o ServerTemplateOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// A valid storage UUID or template name. You can list available public templates with `upctl storage list --public --template` and available private templates with `upctl storage list --template`.
func (o ServerTemplateOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTemplate) string { return v.Storage }).(pulumi.StringOutput)
}

// The storage tier to use
func (o ServerTemplateOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// A short, informative description
func (o ServerTemplateOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTemplate) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ServerTemplatePtrOutput struct{ *pulumi.OutputState }

func (ServerTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTemplate)(nil)).Elem()
}

func (o ServerTemplatePtrOutput) ToServerTemplatePtrOutput() ServerTemplatePtrOutput {
	return o
}

func (o ServerTemplatePtrOutput) ToServerTemplatePtrOutputWithContext(ctx context.Context) ServerTemplatePtrOutput {
	return o
}

func (o ServerTemplatePtrOutput) Elem() ServerTemplateOutput {
	return o.ApplyT(func(v *ServerTemplate) ServerTemplate {
		if v != nil {
			return *v
		}
		var ret ServerTemplate
		return ret
	}).(ServerTemplateOutput)
}

// The device address the storage will be attached to (`scsi`|`virtio`|`ide`). Leave `addressPosition` field empty to auto-select next available address from that bus.
func (o ServerTemplatePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The device position in the given bus (defined via field `address`). For example `0:0`, or `0`. Leave empty to auto-select next available address in the given bus.
func (o ServerTemplatePtrOutput) AddressPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.AddressPosition
	}).(pulumi.StringPtrOutput)
}

func (o ServerTemplatePtrOutput) BackupRule() ServerTemplateBackupRulePtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *ServerTemplateBackupRule {
		if v == nil {
			return nil
		}
		return v.BackupRule
	}).(ServerTemplateBackupRulePtrOutput)
}

// If set to true, the backup taken before the partition and filesystem resize attempt will be deleted immediately after success.
func (o ServerTemplatePtrOutput) DeleteAutoresizeBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteAutoresizeBackup
	}).(pulumi.BoolPtrOutput)
}

// Sets if the storage is encrypted at rest
func (o ServerTemplatePtrOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *bool {
		if v == nil {
			return nil
		}
		return v.Encrypt
	}).(pulumi.BoolPtrOutput)
}

// If set to true, provider will attempt to resize partition and filesystem when the size of template storage changes.
//
//	Please note that before the resize attempt is made, backup of the storage will be taken. If the resize attempt fails, the backup will be used
//	to restore the storage and then deleted. If the resize attempt succeeds, backup will be kept (unless deleteAutoresizeBackup option is set to true).
//	Taking and keeping backups incure costs.
func (o ServerTemplatePtrOutput) FilesystemAutoresize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *bool {
		if v == nil {
			return nil
		}
		return v.FilesystemAutoresize
	}).(pulumi.BoolPtrOutput)
}

// The unique identifier for the storage
func (o ServerTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The size of the storage in gigabytes
func (o ServerTemplatePtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

// A valid storage UUID or template name. You can list available public templates with `upctl storage list --public --template` and available private templates with `upctl storage list --template`.
func (o ServerTemplatePtrOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *string {
		if v == nil {
			return nil
		}
		return &v.Storage
	}).(pulumi.StringPtrOutput)
}

// The storage tier to use
func (o ServerTemplatePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// A short, informative description
func (o ServerTemplatePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type ServerTemplateBackupRule struct {
	// The weekday when the backup is created
	Interval string `pulumi:"interval"`
	// The number of days before a backup is automatically deleted
	Retention int `pulumi:"retention"`
	// The time of day when the backup is created
	Time string `pulumi:"time"`
}

// ServerTemplateBackupRuleInput is an input type that accepts ServerTemplateBackupRuleArgs and ServerTemplateBackupRuleOutput values.
// You can construct a concrete instance of `ServerTemplateBackupRuleInput` via:
//
//	ServerTemplateBackupRuleArgs{...}
type ServerTemplateBackupRuleInput interface {
	pulumi.Input

	ToServerTemplateBackupRuleOutput() ServerTemplateBackupRuleOutput
	ToServerTemplateBackupRuleOutputWithContext(context.Context) ServerTemplateBackupRuleOutput
}

type ServerTemplateBackupRuleArgs struct {
	// The weekday when the backup is created
	Interval pulumi.StringInput `pulumi:"interval"`
	// The number of days before a backup is automatically deleted
	Retention pulumi.IntInput `pulumi:"retention"`
	// The time of day when the backup is created
	Time pulumi.StringInput `pulumi:"time"`
}

func (ServerTemplateBackupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTemplateBackupRule)(nil)).Elem()
}

func (i ServerTemplateBackupRuleArgs) ToServerTemplateBackupRuleOutput() ServerTemplateBackupRuleOutput {
	return i.ToServerTemplateBackupRuleOutputWithContext(context.Background())
}

func (i ServerTemplateBackupRuleArgs) ToServerTemplateBackupRuleOutputWithContext(ctx context.Context) ServerTemplateBackupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTemplateBackupRuleOutput)
}

func (i ServerTemplateBackupRuleArgs) ToServerTemplateBackupRulePtrOutput() ServerTemplateBackupRulePtrOutput {
	return i.ToServerTemplateBackupRulePtrOutputWithContext(context.Background())
}

func (i ServerTemplateBackupRuleArgs) ToServerTemplateBackupRulePtrOutputWithContext(ctx context.Context) ServerTemplateBackupRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTemplateBackupRuleOutput).ToServerTemplateBackupRulePtrOutputWithContext(ctx)
}

// ServerTemplateBackupRulePtrInput is an input type that accepts ServerTemplateBackupRuleArgs, ServerTemplateBackupRulePtr and ServerTemplateBackupRulePtrOutput values.
// You can construct a concrete instance of `ServerTemplateBackupRulePtrInput` via:
//
//	        ServerTemplateBackupRuleArgs{...}
//
//	or:
//
//	        nil
type ServerTemplateBackupRulePtrInput interface {
	pulumi.Input

	ToServerTemplateBackupRulePtrOutput() ServerTemplateBackupRulePtrOutput
	ToServerTemplateBackupRulePtrOutputWithContext(context.Context) ServerTemplateBackupRulePtrOutput
}

type serverTemplateBackupRulePtrType ServerTemplateBackupRuleArgs

func ServerTemplateBackupRulePtr(v *ServerTemplateBackupRuleArgs) ServerTemplateBackupRulePtrInput {
	return (*serverTemplateBackupRulePtrType)(v)
}

func (*serverTemplateBackupRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTemplateBackupRule)(nil)).Elem()
}

func (i *serverTemplateBackupRulePtrType) ToServerTemplateBackupRulePtrOutput() ServerTemplateBackupRulePtrOutput {
	return i.ToServerTemplateBackupRulePtrOutputWithContext(context.Background())
}

func (i *serverTemplateBackupRulePtrType) ToServerTemplateBackupRulePtrOutputWithContext(ctx context.Context) ServerTemplateBackupRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTemplateBackupRulePtrOutput)
}

type ServerTemplateBackupRuleOutput struct{ *pulumi.OutputState }

func (ServerTemplateBackupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTemplateBackupRule)(nil)).Elem()
}

func (o ServerTemplateBackupRuleOutput) ToServerTemplateBackupRuleOutput() ServerTemplateBackupRuleOutput {
	return o
}

func (o ServerTemplateBackupRuleOutput) ToServerTemplateBackupRuleOutputWithContext(ctx context.Context) ServerTemplateBackupRuleOutput {
	return o
}

func (o ServerTemplateBackupRuleOutput) ToServerTemplateBackupRulePtrOutput() ServerTemplateBackupRulePtrOutput {
	return o.ToServerTemplateBackupRulePtrOutputWithContext(context.Background())
}

func (o ServerTemplateBackupRuleOutput) ToServerTemplateBackupRulePtrOutputWithContext(ctx context.Context) ServerTemplateBackupRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerTemplateBackupRule) *ServerTemplateBackupRule {
		return &v
	}).(ServerTemplateBackupRulePtrOutput)
}

// The weekday when the backup is created
func (o ServerTemplateBackupRuleOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTemplateBackupRule) string { return v.Interval }).(pulumi.StringOutput)
}

// The number of days before a backup is automatically deleted
func (o ServerTemplateBackupRuleOutput) Retention() pulumi.IntOutput {
	return o.ApplyT(func(v ServerTemplateBackupRule) int { return v.Retention }).(pulumi.IntOutput)
}

// The time of day when the backup is created
func (o ServerTemplateBackupRuleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTemplateBackupRule) string { return v.Time }).(pulumi.StringOutput)
}

type ServerTemplateBackupRulePtrOutput struct{ *pulumi.OutputState }

func (ServerTemplateBackupRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTemplateBackupRule)(nil)).Elem()
}

func (o ServerTemplateBackupRulePtrOutput) ToServerTemplateBackupRulePtrOutput() ServerTemplateBackupRulePtrOutput {
	return o
}

func (o ServerTemplateBackupRulePtrOutput) ToServerTemplateBackupRulePtrOutputWithContext(ctx context.Context) ServerTemplateBackupRulePtrOutput {
	return o
}

func (o ServerTemplateBackupRulePtrOutput) Elem() ServerTemplateBackupRuleOutput {
	return o.ApplyT(func(v *ServerTemplateBackupRule) ServerTemplateBackupRule {
		if v != nil {
			return *v
		}
		var ret ServerTemplateBackupRule
		return ret
	}).(ServerTemplateBackupRuleOutput)
}

// The weekday when the backup is created
func (o ServerTemplateBackupRulePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplateBackupRule) *string {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.StringPtrOutput)
}

// The number of days before a backup is automatically deleted
func (o ServerTemplateBackupRulePtrOutput) Retention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerTemplateBackupRule) *int {
		if v == nil {
			return nil
		}
		return &v.Retention
	}).(pulumi.IntPtrOutput)
}

// The time of day when the backup is created
func (o ServerTemplateBackupRulePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTemplateBackupRule) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type StorageBackupRule struct {
	// The weekday when the backup is created
	Interval string `pulumi:"interval"`
	// The number of days before a backup is automatically deleted
	Retention int `pulumi:"retention"`
	// The time of day when the backup is created
	Time string `pulumi:"time"`
}

// StorageBackupRuleInput is an input type that accepts StorageBackupRuleArgs and StorageBackupRuleOutput values.
// You can construct a concrete instance of `StorageBackupRuleInput` via:
//
//	StorageBackupRuleArgs{...}
type StorageBackupRuleInput interface {
	pulumi.Input

	ToStorageBackupRuleOutput() StorageBackupRuleOutput
	ToStorageBackupRuleOutputWithContext(context.Context) StorageBackupRuleOutput
}

type StorageBackupRuleArgs struct {
	// The weekday when the backup is created
	Interval pulumi.StringInput `pulumi:"interval"`
	// The number of days before a backup is automatically deleted
	Retention pulumi.IntInput `pulumi:"retention"`
	// The time of day when the backup is created
	Time pulumi.StringInput `pulumi:"time"`
}

func (StorageBackupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBackupRule)(nil)).Elem()
}

func (i StorageBackupRuleArgs) ToStorageBackupRuleOutput() StorageBackupRuleOutput {
	return i.ToStorageBackupRuleOutputWithContext(context.Background())
}

func (i StorageBackupRuleArgs) ToStorageBackupRuleOutputWithContext(ctx context.Context) StorageBackupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBackupRuleOutput)
}

func (i StorageBackupRuleArgs) ToStorageBackupRulePtrOutput() StorageBackupRulePtrOutput {
	return i.ToStorageBackupRulePtrOutputWithContext(context.Background())
}

func (i StorageBackupRuleArgs) ToStorageBackupRulePtrOutputWithContext(ctx context.Context) StorageBackupRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBackupRuleOutput).ToStorageBackupRulePtrOutputWithContext(ctx)
}

// StorageBackupRulePtrInput is an input type that accepts StorageBackupRuleArgs, StorageBackupRulePtr and StorageBackupRulePtrOutput values.
// You can construct a concrete instance of `StorageBackupRulePtrInput` via:
//
//	        StorageBackupRuleArgs{...}
//
//	or:
//
//	        nil
type StorageBackupRulePtrInput interface {
	pulumi.Input

	ToStorageBackupRulePtrOutput() StorageBackupRulePtrOutput
	ToStorageBackupRulePtrOutputWithContext(context.Context) StorageBackupRulePtrOutput
}

type storageBackupRulePtrType StorageBackupRuleArgs

func StorageBackupRulePtr(v *StorageBackupRuleArgs) StorageBackupRulePtrInput {
	return (*storageBackupRulePtrType)(v)
}

func (*storageBackupRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBackupRule)(nil)).Elem()
}

func (i *storageBackupRulePtrType) ToStorageBackupRulePtrOutput() StorageBackupRulePtrOutput {
	return i.ToStorageBackupRulePtrOutputWithContext(context.Background())
}

func (i *storageBackupRulePtrType) ToStorageBackupRulePtrOutputWithContext(ctx context.Context) StorageBackupRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBackupRulePtrOutput)
}

type StorageBackupRuleOutput struct{ *pulumi.OutputState }

func (StorageBackupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageBackupRule)(nil)).Elem()
}

func (o StorageBackupRuleOutput) ToStorageBackupRuleOutput() StorageBackupRuleOutput {
	return o
}

func (o StorageBackupRuleOutput) ToStorageBackupRuleOutputWithContext(ctx context.Context) StorageBackupRuleOutput {
	return o
}

func (o StorageBackupRuleOutput) ToStorageBackupRulePtrOutput() StorageBackupRulePtrOutput {
	return o.ToStorageBackupRulePtrOutputWithContext(context.Background())
}

func (o StorageBackupRuleOutput) ToStorageBackupRulePtrOutputWithContext(ctx context.Context) StorageBackupRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageBackupRule) *StorageBackupRule {
		return &v
	}).(StorageBackupRulePtrOutput)
}

// The weekday when the backup is created
func (o StorageBackupRuleOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBackupRule) string { return v.Interval }).(pulumi.StringOutput)
}

// The number of days before a backup is automatically deleted
func (o StorageBackupRuleOutput) Retention() pulumi.IntOutput {
	return o.ApplyT(func(v StorageBackupRule) int { return v.Retention }).(pulumi.IntOutput)
}

// The time of day when the backup is created
func (o StorageBackupRuleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v StorageBackupRule) string { return v.Time }).(pulumi.StringOutput)
}

type StorageBackupRulePtrOutput struct{ *pulumi.OutputState }

func (StorageBackupRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBackupRule)(nil)).Elem()
}

func (o StorageBackupRulePtrOutput) ToStorageBackupRulePtrOutput() StorageBackupRulePtrOutput {
	return o
}

func (o StorageBackupRulePtrOutput) ToStorageBackupRulePtrOutputWithContext(ctx context.Context) StorageBackupRulePtrOutput {
	return o
}

func (o StorageBackupRulePtrOutput) Elem() StorageBackupRuleOutput {
	return o.ApplyT(func(v *StorageBackupRule) StorageBackupRule {
		if v != nil {
			return *v
		}
		var ret StorageBackupRule
		return ret
	}).(StorageBackupRuleOutput)
}

// The weekday when the backup is created
func (o StorageBackupRulePtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBackupRule) *string {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.StringPtrOutput)
}

// The number of days before a backup is automatically deleted
func (o StorageBackupRulePtrOutput) Retention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageBackupRule) *int {
		if v == nil {
			return nil
		}
		return &v.Retention
	}).(pulumi.IntPtrOutput)
}

// The time of day when the backup is created
func (o StorageBackupRulePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBackupRule) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type StorageClone struct {
	// The unique identifier of the storage/template to clone
	Id string `pulumi:"id"`
}

// StorageCloneInput is an input type that accepts StorageCloneArgs and StorageCloneOutput values.
// You can construct a concrete instance of `StorageCloneInput` via:
//
//	StorageCloneArgs{...}
type StorageCloneInput interface {
	pulumi.Input

	ToStorageCloneOutput() StorageCloneOutput
	ToStorageCloneOutputWithContext(context.Context) StorageCloneOutput
}

type StorageCloneArgs struct {
	// The unique identifier of the storage/template to clone
	Id pulumi.StringInput `pulumi:"id"`
}

func (StorageCloneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClone)(nil)).Elem()
}

func (i StorageCloneArgs) ToStorageCloneOutput() StorageCloneOutput {
	return i.ToStorageCloneOutputWithContext(context.Background())
}

func (i StorageCloneArgs) ToStorageCloneOutputWithContext(ctx context.Context) StorageCloneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageCloneOutput)
}

func (i StorageCloneArgs) ToStorageClonePtrOutput() StorageClonePtrOutput {
	return i.ToStorageClonePtrOutputWithContext(context.Background())
}

func (i StorageCloneArgs) ToStorageClonePtrOutputWithContext(ctx context.Context) StorageClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageCloneOutput).ToStorageClonePtrOutputWithContext(ctx)
}

// StorageClonePtrInput is an input type that accepts StorageCloneArgs, StorageClonePtr and StorageClonePtrOutput values.
// You can construct a concrete instance of `StorageClonePtrInput` via:
//
//	        StorageCloneArgs{...}
//
//	or:
//
//	        nil
type StorageClonePtrInput interface {
	pulumi.Input

	ToStorageClonePtrOutput() StorageClonePtrOutput
	ToStorageClonePtrOutputWithContext(context.Context) StorageClonePtrOutput
}

type storageClonePtrType StorageCloneArgs

func StorageClonePtr(v *StorageCloneArgs) StorageClonePtrInput {
	return (*storageClonePtrType)(v)
}

func (*storageClonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClone)(nil)).Elem()
}

func (i *storageClonePtrType) ToStorageClonePtrOutput() StorageClonePtrOutput {
	return i.ToStorageClonePtrOutputWithContext(context.Background())
}

func (i *storageClonePtrType) ToStorageClonePtrOutputWithContext(ctx context.Context) StorageClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageClonePtrOutput)
}

type StorageCloneOutput struct{ *pulumi.OutputState }

func (StorageCloneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageClone)(nil)).Elem()
}

func (o StorageCloneOutput) ToStorageCloneOutput() StorageCloneOutput {
	return o
}

func (o StorageCloneOutput) ToStorageCloneOutputWithContext(ctx context.Context) StorageCloneOutput {
	return o
}

func (o StorageCloneOutput) ToStorageClonePtrOutput() StorageClonePtrOutput {
	return o.ToStorageClonePtrOutputWithContext(context.Background())
}

func (o StorageCloneOutput) ToStorageClonePtrOutputWithContext(ctx context.Context) StorageClonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageClone) *StorageClone {
		return &v
	}).(StorageClonePtrOutput)
}

// The unique identifier of the storage/template to clone
func (o StorageCloneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StorageClone) string { return v.Id }).(pulumi.StringOutput)
}

type StorageClonePtrOutput struct{ *pulumi.OutputState }

func (StorageClonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageClone)(nil)).Elem()
}

func (o StorageClonePtrOutput) ToStorageClonePtrOutput() StorageClonePtrOutput {
	return o
}

func (o StorageClonePtrOutput) ToStorageClonePtrOutputWithContext(ctx context.Context) StorageClonePtrOutput {
	return o
}

func (o StorageClonePtrOutput) Elem() StorageCloneOutput {
	return o.ApplyT(func(v *StorageClone) StorageClone {
		if v != nil {
			return *v
		}
		var ret StorageClone
		return ret
	}).(StorageCloneOutput)
}

// The unique identifier of the storage/template to clone
func (o StorageClonePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageClone) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type StorageImport struct {
	// sha256 sum of the imported data
	Sha256sum *string `pulumi:"sha256sum"`
	// The mode of the import task. One of `httpImport` or `directUpload`.
	Source string `pulumi:"source"`
	// For `directUpload`; an optional hash of the file to upload.
	SourceHash *string `pulumi:"sourceHash"`
	// The location of the file to import. For `httpImport` an accessible URL for `directUpload` a local file.
	SourceLocation string `pulumi:"sourceLocation"`
	// Number of bytes imported
	WrittenBytes *int `pulumi:"writtenBytes"`
}

// StorageImportInput is an input type that accepts StorageImportArgs and StorageImportOutput values.
// You can construct a concrete instance of `StorageImportInput` via:
//
//	StorageImportArgs{...}
type StorageImportInput interface {
	pulumi.Input

	ToStorageImportOutput() StorageImportOutput
	ToStorageImportOutputWithContext(context.Context) StorageImportOutput
}

type StorageImportArgs struct {
	// sha256 sum of the imported data
	Sha256sum pulumi.StringPtrInput `pulumi:"sha256sum"`
	// The mode of the import task. One of `httpImport` or `directUpload`.
	Source pulumi.StringInput `pulumi:"source"`
	// For `directUpload`; an optional hash of the file to upload.
	SourceHash pulumi.StringPtrInput `pulumi:"sourceHash"`
	// The location of the file to import. For `httpImport` an accessible URL for `directUpload` a local file.
	SourceLocation pulumi.StringInput `pulumi:"sourceLocation"`
	// Number of bytes imported
	WrittenBytes pulumi.IntPtrInput `pulumi:"writtenBytes"`
}

func (StorageImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageImport)(nil)).Elem()
}

func (i StorageImportArgs) ToStorageImportOutput() StorageImportOutput {
	return i.ToStorageImportOutputWithContext(context.Background())
}

func (i StorageImportArgs) ToStorageImportOutputWithContext(ctx context.Context) StorageImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageImportOutput)
}

func (i StorageImportArgs) ToStorageImportPtrOutput() StorageImportPtrOutput {
	return i.ToStorageImportPtrOutputWithContext(context.Background())
}

func (i StorageImportArgs) ToStorageImportPtrOutputWithContext(ctx context.Context) StorageImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageImportOutput).ToStorageImportPtrOutputWithContext(ctx)
}

// StorageImportPtrInput is an input type that accepts StorageImportArgs, StorageImportPtr and StorageImportPtrOutput values.
// You can construct a concrete instance of `StorageImportPtrInput` via:
//
//	        StorageImportArgs{...}
//
//	or:
//
//	        nil
type StorageImportPtrInput interface {
	pulumi.Input

	ToStorageImportPtrOutput() StorageImportPtrOutput
	ToStorageImportPtrOutputWithContext(context.Context) StorageImportPtrOutput
}

type storageImportPtrType StorageImportArgs

func StorageImportPtr(v *StorageImportArgs) StorageImportPtrInput {
	return (*storageImportPtrType)(v)
}

func (*storageImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageImport)(nil)).Elem()
}

func (i *storageImportPtrType) ToStorageImportPtrOutput() StorageImportPtrOutput {
	return i.ToStorageImportPtrOutputWithContext(context.Background())
}

func (i *storageImportPtrType) ToStorageImportPtrOutputWithContext(ctx context.Context) StorageImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageImportPtrOutput)
}

type StorageImportOutput struct{ *pulumi.OutputState }

func (StorageImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageImport)(nil)).Elem()
}

func (o StorageImportOutput) ToStorageImportOutput() StorageImportOutput {
	return o
}

func (o StorageImportOutput) ToStorageImportOutputWithContext(ctx context.Context) StorageImportOutput {
	return o
}

func (o StorageImportOutput) ToStorageImportPtrOutput() StorageImportPtrOutput {
	return o.ToStorageImportPtrOutputWithContext(context.Background())
}

func (o StorageImportOutput) ToStorageImportPtrOutputWithContext(ctx context.Context) StorageImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageImport) *StorageImport {
		return &v
	}).(StorageImportPtrOutput)
}

// sha256 sum of the imported data
func (o StorageImportOutput) Sha256sum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageImport) *string { return v.Sha256sum }).(pulumi.StringPtrOutput)
}

// The mode of the import task. One of `httpImport` or `directUpload`.
func (o StorageImportOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v StorageImport) string { return v.Source }).(pulumi.StringOutput)
}

// For `directUpload`; an optional hash of the file to upload.
func (o StorageImportOutput) SourceHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageImport) *string { return v.SourceHash }).(pulumi.StringPtrOutput)
}

// The location of the file to import. For `httpImport` an accessible URL for `directUpload` a local file.
func (o StorageImportOutput) SourceLocation() pulumi.StringOutput {
	return o.ApplyT(func(v StorageImport) string { return v.SourceLocation }).(pulumi.StringOutput)
}

// Number of bytes imported
func (o StorageImportOutput) WrittenBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageImport) *int { return v.WrittenBytes }).(pulumi.IntPtrOutput)
}

type StorageImportPtrOutput struct{ *pulumi.OutputState }

func (StorageImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageImport)(nil)).Elem()
}

func (o StorageImportPtrOutput) ToStorageImportPtrOutput() StorageImportPtrOutput {
	return o
}

func (o StorageImportPtrOutput) ToStorageImportPtrOutputWithContext(ctx context.Context) StorageImportPtrOutput {
	return o
}

func (o StorageImportPtrOutput) Elem() StorageImportOutput {
	return o.ApplyT(func(v *StorageImport) StorageImport {
		if v != nil {
			return *v
		}
		var ret StorageImport
		return ret
	}).(StorageImportOutput)
}

// sha256 sum of the imported data
func (o StorageImportPtrOutput) Sha256sum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageImport) *string {
		if v == nil {
			return nil
		}
		return v.Sha256sum
	}).(pulumi.StringPtrOutput)
}

// The mode of the import task. One of `httpImport` or `directUpload`.
func (o StorageImportPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageImport) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// For `directUpload`; an optional hash of the file to upload.
func (o StorageImportPtrOutput) SourceHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageImport) *string {
		if v == nil {
			return nil
		}
		return v.SourceHash
	}).(pulumi.StringPtrOutput)
}

// The location of the file to import. For `httpImport` an accessible URL for `directUpload` a local file.
func (o StorageImportPtrOutput) SourceLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageImport) *string {
		if v == nil {
			return nil
		}
		return &v.SourceLocation
	}).(pulumi.StringPtrOutput)
}

// Number of bytes imported
func (o StorageImportPtrOutput) WrittenBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageImport) *int {
		if v == nil {
			return nil
		}
		return v.WrittenBytes
	}).(pulumi.IntPtrOutput)
}

type GetHostsHost struct {
	// Free form text describing the host
	Description string `pulumi:"description"`
	// The unique id of the host
	HostId int `pulumi:"hostId"`
	// The zone the host is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
	Zone string `pulumi:"zone"`
}

// GetHostsHostInput is an input type that accepts GetHostsHostArgs and GetHostsHostOutput values.
// You can construct a concrete instance of `GetHostsHostInput` via:
//
//	GetHostsHostArgs{...}
type GetHostsHostInput interface {
	pulumi.Input

	ToGetHostsHostOutput() GetHostsHostOutput
	ToGetHostsHostOutputWithContext(context.Context) GetHostsHostOutput
}

type GetHostsHostArgs struct {
	// Free form text describing the host
	Description pulumi.StringInput `pulumi:"description"`
	// The unique id of the host
	HostId pulumi.IntInput `pulumi:"hostId"`
	// The zone the host is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetHostsHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHost)(nil)).Elem()
}

func (i GetHostsHostArgs) ToGetHostsHostOutput() GetHostsHostOutput {
	return i.ToGetHostsHostOutputWithContext(context.Background())
}

func (i GetHostsHostArgs) ToGetHostsHostOutputWithContext(ctx context.Context) GetHostsHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostOutput)
}

// GetHostsHostArrayInput is an input type that accepts GetHostsHostArray and GetHostsHostArrayOutput values.
// You can construct a concrete instance of `GetHostsHostArrayInput` via:
//
//	GetHostsHostArray{ GetHostsHostArgs{...} }
type GetHostsHostArrayInput interface {
	pulumi.Input

	ToGetHostsHostArrayOutput() GetHostsHostArrayOutput
	ToGetHostsHostArrayOutputWithContext(context.Context) GetHostsHostArrayOutput
}

type GetHostsHostArray []GetHostsHostInput

func (GetHostsHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHost)(nil)).Elem()
}

func (i GetHostsHostArray) ToGetHostsHostArrayOutput() GetHostsHostArrayOutput {
	return i.ToGetHostsHostArrayOutputWithContext(context.Background())
}

func (i GetHostsHostArray) ToGetHostsHostArrayOutputWithContext(ctx context.Context) GetHostsHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostArrayOutput)
}

type GetHostsHostOutput struct{ *pulumi.OutputState }

func (GetHostsHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHost)(nil)).Elem()
}

func (o GetHostsHostOutput) ToGetHostsHostOutput() GetHostsHostOutput {
	return o
}

func (o GetHostsHostOutput) ToGetHostsHostOutputWithContext(ctx context.Context) GetHostsHostOutput {
	return o
}

// Free form text describing the host
func (o GetHostsHostOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.Description }).(pulumi.StringOutput)
}

// The unique id of the host
func (o GetHostsHostOutput) HostId() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHost) int { return v.HostId }).(pulumi.IntOutput)
}

// The zone the host is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
func (o GetHostsHostOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHost) string { return v.Zone }).(pulumi.StringOutput)
}

type GetHostsHostArrayOutput struct{ *pulumi.OutputState }

func (GetHostsHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHost)(nil)).Elem()
}

func (o GetHostsHostArrayOutput) ToGetHostsHostArrayOutput() GetHostsHostArrayOutput {
	return o
}

func (o GetHostsHostArrayOutput) ToGetHostsHostArrayOutputWithContext(ctx context.Context) GetHostsHostArrayOutput {
	return o
}

func (o GetHostsHostArrayOutput) Index(i pulumi.IntInput) GetHostsHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsHost {
		return vs[0].([]GetHostsHost)[vs[1].(int)]
	}).(GetHostsHostOutput)
}

type GetIpAddressesAddress struct {
	// Is address for utility or public network
	Access string `pulumi:"access"`
	// An UpCloud assigned IP Address
	Address string `pulumi:"address"`
	// IP address family
	Family string `pulumi:"family"`
	// Does the IP Address represents a floating IP Address
	Floating bool `pulumi:"floating"`
	// MAC address of server interface to assign address to
	Mac string `pulumi:"mac"`
	// Is the address a part of a plan
	PartOfPlan bool `pulumi:"partOfPlan"`
	// A reverse DNS record entry
	PtrRecord string `pulumi:"ptrRecord"`
	// The unique identifier for a server
	Server string `pulumi:"server"`
	// Zone of address, required when assigning a detached floating IP address, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
	Zone string `pulumi:"zone"`
}

// GetIpAddressesAddressInput is an input type that accepts GetIpAddressesAddressArgs and GetIpAddressesAddressOutput values.
// You can construct a concrete instance of `GetIpAddressesAddressInput` via:
//
//	GetIpAddressesAddressArgs{...}
type GetIpAddressesAddressInput interface {
	pulumi.Input

	ToGetIpAddressesAddressOutput() GetIpAddressesAddressOutput
	ToGetIpAddressesAddressOutputWithContext(context.Context) GetIpAddressesAddressOutput
}

type GetIpAddressesAddressArgs struct {
	// Is address for utility or public network
	Access pulumi.StringInput `pulumi:"access"`
	// An UpCloud assigned IP Address
	Address pulumi.StringInput `pulumi:"address"`
	// IP address family
	Family pulumi.StringInput `pulumi:"family"`
	// Does the IP Address represents a floating IP Address
	Floating pulumi.BoolInput `pulumi:"floating"`
	// MAC address of server interface to assign address to
	Mac pulumi.StringInput `pulumi:"mac"`
	// Is the address a part of a plan
	PartOfPlan pulumi.BoolInput `pulumi:"partOfPlan"`
	// A reverse DNS record entry
	PtrRecord pulumi.StringInput `pulumi:"ptrRecord"`
	// The unique identifier for a server
	Server pulumi.StringInput `pulumi:"server"`
	// Zone of address, required when assigning a detached floating IP address, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetIpAddressesAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesAddress)(nil)).Elem()
}

func (i GetIpAddressesAddressArgs) ToGetIpAddressesAddressOutput() GetIpAddressesAddressOutput {
	return i.ToGetIpAddressesAddressOutputWithContext(context.Background())
}

func (i GetIpAddressesAddressArgs) ToGetIpAddressesAddressOutputWithContext(ctx context.Context) GetIpAddressesAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesAddressOutput)
}

// GetIpAddressesAddressArrayInput is an input type that accepts GetIpAddressesAddressArray and GetIpAddressesAddressArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesAddressArrayInput` via:
//
//	GetIpAddressesAddressArray{ GetIpAddressesAddressArgs{...} }
type GetIpAddressesAddressArrayInput interface {
	pulumi.Input

	ToGetIpAddressesAddressArrayOutput() GetIpAddressesAddressArrayOutput
	ToGetIpAddressesAddressArrayOutputWithContext(context.Context) GetIpAddressesAddressArrayOutput
}

type GetIpAddressesAddressArray []GetIpAddressesAddressInput

func (GetIpAddressesAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesAddress)(nil)).Elem()
}

func (i GetIpAddressesAddressArray) ToGetIpAddressesAddressArrayOutput() GetIpAddressesAddressArrayOutput {
	return i.ToGetIpAddressesAddressArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesAddressArray) ToGetIpAddressesAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesAddressArrayOutput)
}

type GetIpAddressesAddressOutput struct{ *pulumi.OutputState }

func (GetIpAddressesAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesAddress)(nil)).Elem()
}

func (o GetIpAddressesAddressOutput) ToGetIpAddressesAddressOutput() GetIpAddressesAddressOutput {
	return o
}

func (o GetIpAddressesAddressOutput) ToGetIpAddressesAddressOutputWithContext(ctx context.Context) GetIpAddressesAddressOutput {
	return o
}

// Is address for utility or public network
func (o GetIpAddressesAddressOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.Access }).(pulumi.StringOutput)
}

// An UpCloud assigned IP Address
func (o GetIpAddressesAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.Address }).(pulumi.StringOutput)
}

// IP address family
func (o GetIpAddressesAddressOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.Family }).(pulumi.StringOutput)
}

// Does the IP Address represents a floating IP Address
func (o GetIpAddressesAddressOutput) Floating() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) bool { return v.Floating }).(pulumi.BoolOutput)
}

// MAC address of server interface to assign address to
func (o GetIpAddressesAddressOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.Mac }).(pulumi.StringOutput)
}

// Is the address a part of a plan
func (o GetIpAddressesAddressOutput) PartOfPlan() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) bool { return v.PartOfPlan }).(pulumi.BoolOutput)
}

// A reverse DNS record entry
func (o GetIpAddressesAddressOutput) PtrRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.PtrRecord }).(pulumi.StringOutput)
}

// The unique identifier for a server
func (o GetIpAddressesAddressOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.Server }).(pulumi.StringOutput)
}

// Zone of address, required when assigning a detached floating IP address, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
func (o GetIpAddressesAddressOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesAddress) string { return v.Zone }).(pulumi.StringOutput)
}

type GetIpAddressesAddressArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesAddress)(nil)).Elem()
}

func (o GetIpAddressesAddressArrayOutput) ToGetIpAddressesAddressArrayOutput() GetIpAddressesAddressArrayOutput {
	return o
}

func (o GetIpAddressesAddressArrayOutput) ToGetIpAddressesAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesAddressArrayOutput {
	return o
}

func (o GetIpAddressesAddressArrayOutput) Index(i pulumi.IntInput) GetIpAddressesAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesAddress {
		return vs[0].([]GetIpAddressesAddress)[vs[1].(int)]
	}).(GetIpAddressesAddressOutput)
}

type GetManagedDatabaseMysqlSessionsSession struct {
	// Name of the application that is connected to this service.
	ApplicationName string `pulumi:"applicationName"`
	// IP address of the client connected to this service.
	ClientAddr string `pulumi:"clientAddr"`
	// Name of the database this service is connected to.
	Datname string `pulumi:"datname"`
	// Process ID of this service.
	Id string `pulumi:"id"`
	// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows an empty string.
	Query string `pulumi:"query"`
	// The active query current duration.
	QueryDuration string `pulumi:"queryDuration"`
	// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
	State string `pulumi:"state"`
	// Name of the user logged into this service.
	Usename string `pulumi:"usename"`
}

// GetManagedDatabaseMysqlSessionsSessionInput is an input type that accepts GetManagedDatabaseMysqlSessionsSessionArgs and GetManagedDatabaseMysqlSessionsSessionOutput values.
// You can construct a concrete instance of `GetManagedDatabaseMysqlSessionsSessionInput` via:
//
//	GetManagedDatabaseMysqlSessionsSessionArgs{...}
type GetManagedDatabaseMysqlSessionsSessionInput interface {
	pulumi.Input

	ToGetManagedDatabaseMysqlSessionsSessionOutput() GetManagedDatabaseMysqlSessionsSessionOutput
	ToGetManagedDatabaseMysqlSessionsSessionOutputWithContext(context.Context) GetManagedDatabaseMysqlSessionsSessionOutput
}

type GetManagedDatabaseMysqlSessionsSessionArgs struct {
	// Name of the application that is connected to this service.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// IP address of the client connected to this service.
	ClientAddr pulumi.StringInput `pulumi:"clientAddr"`
	// Name of the database this service is connected to.
	Datname pulumi.StringInput `pulumi:"datname"`
	// Process ID of this service.
	Id pulumi.StringInput `pulumi:"id"`
	// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows an empty string.
	Query pulumi.StringInput `pulumi:"query"`
	// The active query current duration.
	QueryDuration pulumi.StringInput `pulumi:"queryDuration"`
	// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
	State pulumi.StringInput `pulumi:"state"`
	// Name of the user logged into this service.
	Usename pulumi.StringInput `pulumi:"usename"`
}

func (GetManagedDatabaseMysqlSessionsSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseMysqlSessionsSession)(nil)).Elem()
}

func (i GetManagedDatabaseMysqlSessionsSessionArgs) ToGetManagedDatabaseMysqlSessionsSessionOutput() GetManagedDatabaseMysqlSessionsSessionOutput {
	return i.ToGetManagedDatabaseMysqlSessionsSessionOutputWithContext(context.Background())
}

func (i GetManagedDatabaseMysqlSessionsSessionArgs) ToGetManagedDatabaseMysqlSessionsSessionOutputWithContext(ctx context.Context) GetManagedDatabaseMysqlSessionsSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabaseMysqlSessionsSessionOutput)
}

// GetManagedDatabaseMysqlSessionsSessionArrayInput is an input type that accepts GetManagedDatabaseMysqlSessionsSessionArray and GetManagedDatabaseMysqlSessionsSessionArrayOutput values.
// You can construct a concrete instance of `GetManagedDatabaseMysqlSessionsSessionArrayInput` via:
//
//	GetManagedDatabaseMysqlSessionsSessionArray{ GetManagedDatabaseMysqlSessionsSessionArgs{...} }
type GetManagedDatabaseMysqlSessionsSessionArrayInput interface {
	pulumi.Input

	ToGetManagedDatabaseMysqlSessionsSessionArrayOutput() GetManagedDatabaseMysqlSessionsSessionArrayOutput
	ToGetManagedDatabaseMysqlSessionsSessionArrayOutputWithContext(context.Context) GetManagedDatabaseMysqlSessionsSessionArrayOutput
}

type GetManagedDatabaseMysqlSessionsSessionArray []GetManagedDatabaseMysqlSessionsSessionInput

func (GetManagedDatabaseMysqlSessionsSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabaseMysqlSessionsSession)(nil)).Elem()
}

func (i GetManagedDatabaseMysqlSessionsSessionArray) ToGetManagedDatabaseMysqlSessionsSessionArrayOutput() GetManagedDatabaseMysqlSessionsSessionArrayOutput {
	return i.ToGetManagedDatabaseMysqlSessionsSessionArrayOutputWithContext(context.Background())
}

func (i GetManagedDatabaseMysqlSessionsSessionArray) ToGetManagedDatabaseMysqlSessionsSessionArrayOutputWithContext(ctx context.Context) GetManagedDatabaseMysqlSessionsSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabaseMysqlSessionsSessionArrayOutput)
}

type GetManagedDatabaseMysqlSessionsSessionOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseMysqlSessionsSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseMysqlSessionsSession)(nil)).Elem()
}

func (o GetManagedDatabaseMysqlSessionsSessionOutput) ToGetManagedDatabaseMysqlSessionsSessionOutput() GetManagedDatabaseMysqlSessionsSessionOutput {
	return o
}

func (o GetManagedDatabaseMysqlSessionsSessionOutput) ToGetManagedDatabaseMysqlSessionsSessionOutputWithContext(ctx context.Context) GetManagedDatabaseMysqlSessionsSessionOutput {
	return o
}

// Name of the application that is connected to this service.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// IP address of the client connected to this service.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) ClientAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.ClientAddr }).(pulumi.StringOutput)
}

// Name of the database this service is connected to.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) Datname() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.Datname }).(pulumi.StringOutput)
}

// Process ID of this service.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.Id }).(pulumi.StringOutput)
}

// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows an empty string.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.Query }).(pulumi.StringOutput)
}

// The active query current duration.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) QueryDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.QueryDuration }).(pulumi.StringOutput)
}

// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.State }).(pulumi.StringOutput)
}

// Name of the user logged into this service.
func (o GetManagedDatabaseMysqlSessionsSessionOutput) Usename() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsSession) string { return v.Usename }).(pulumi.StringOutput)
}

type GetManagedDatabaseMysqlSessionsSessionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseMysqlSessionsSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabaseMysqlSessionsSession)(nil)).Elem()
}

func (o GetManagedDatabaseMysqlSessionsSessionArrayOutput) ToGetManagedDatabaseMysqlSessionsSessionArrayOutput() GetManagedDatabaseMysqlSessionsSessionArrayOutput {
	return o
}

func (o GetManagedDatabaseMysqlSessionsSessionArrayOutput) ToGetManagedDatabaseMysqlSessionsSessionArrayOutputWithContext(ctx context.Context) GetManagedDatabaseMysqlSessionsSessionArrayOutput {
	return o
}

func (o GetManagedDatabaseMysqlSessionsSessionArrayOutput) Index(i pulumi.IntInput) GetManagedDatabaseMysqlSessionsSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedDatabaseMysqlSessionsSession {
		return vs[0].([]GetManagedDatabaseMysqlSessionsSession)[vs[1].(int)]
	}).(GetManagedDatabaseMysqlSessionsSessionOutput)
}

type GetManagedDatabaseOpensearchIndicesIndex struct {
	// Timestamp indicating the creation time of the index.
	CreateTime string `pulumi:"createTime"`
	// Number of documents stored in the index.
	Docs int `pulumi:"docs"`
	// Health status of the index e.g. `green`, `yellow`, or `red`.
	Health string `pulumi:"health"`
	// Name of the index.
	IndexName string `pulumi:"indexName"`
	// Number of replicas configured for the index.
	NumberOfReplicas int `pulumi:"numberOfReplicas"`
	// Number of shards configured & used by the index.
	NumberOfShards int `pulumi:"numberOfShards"`
	// Indicates whether the index is in a read-only state that permits deletion of the entire index. This attribute can be automatically set to true in certain scenarios where the node disk space exceeds the flood stage.
	ReadOnlyAllowDelete bool `pulumi:"readOnlyAllowDelete"`
	// Size of the index in bytes.
	Size int `pulumi:"size"`
	// Status of the index e.g. `open` or `closed`.
	Status string `pulumi:"status"`
}

// GetManagedDatabaseOpensearchIndicesIndexInput is an input type that accepts GetManagedDatabaseOpensearchIndicesIndexArgs and GetManagedDatabaseOpensearchIndicesIndexOutput values.
// You can construct a concrete instance of `GetManagedDatabaseOpensearchIndicesIndexInput` via:
//
//	GetManagedDatabaseOpensearchIndicesIndexArgs{...}
type GetManagedDatabaseOpensearchIndicesIndexInput interface {
	pulumi.Input

	ToGetManagedDatabaseOpensearchIndicesIndexOutput() GetManagedDatabaseOpensearchIndicesIndexOutput
	ToGetManagedDatabaseOpensearchIndicesIndexOutputWithContext(context.Context) GetManagedDatabaseOpensearchIndicesIndexOutput
}

type GetManagedDatabaseOpensearchIndicesIndexArgs struct {
	// Timestamp indicating the creation time of the index.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Number of documents stored in the index.
	Docs pulumi.IntInput `pulumi:"docs"`
	// Health status of the index e.g. `green`, `yellow`, or `red`.
	Health pulumi.StringInput `pulumi:"health"`
	// Name of the index.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// Number of replicas configured for the index.
	NumberOfReplicas pulumi.IntInput `pulumi:"numberOfReplicas"`
	// Number of shards configured & used by the index.
	NumberOfShards pulumi.IntInput `pulumi:"numberOfShards"`
	// Indicates whether the index is in a read-only state that permits deletion of the entire index. This attribute can be automatically set to true in certain scenarios where the node disk space exceeds the flood stage.
	ReadOnlyAllowDelete pulumi.BoolInput `pulumi:"readOnlyAllowDelete"`
	// Size of the index in bytes.
	Size pulumi.IntInput `pulumi:"size"`
	// Status of the index e.g. `open` or `closed`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetManagedDatabaseOpensearchIndicesIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseOpensearchIndicesIndex)(nil)).Elem()
}

func (i GetManagedDatabaseOpensearchIndicesIndexArgs) ToGetManagedDatabaseOpensearchIndicesIndexOutput() GetManagedDatabaseOpensearchIndicesIndexOutput {
	return i.ToGetManagedDatabaseOpensearchIndicesIndexOutputWithContext(context.Background())
}

func (i GetManagedDatabaseOpensearchIndicesIndexArgs) ToGetManagedDatabaseOpensearchIndicesIndexOutputWithContext(ctx context.Context) GetManagedDatabaseOpensearchIndicesIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabaseOpensearchIndicesIndexOutput)
}

// GetManagedDatabaseOpensearchIndicesIndexArrayInput is an input type that accepts GetManagedDatabaseOpensearchIndicesIndexArray and GetManagedDatabaseOpensearchIndicesIndexArrayOutput values.
// You can construct a concrete instance of `GetManagedDatabaseOpensearchIndicesIndexArrayInput` via:
//
//	GetManagedDatabaseOpensearchIndicesIndexArray{ GetManagedDatabaseOpensearchIndicesIndexArgs{...} }
type GetManagedDatabaseOpensearchIndicesIndexArrayInput interface {
	pulumi.Input

	ToGetManagedDatabaseOpensearchIndicesIndexArrayOutput() GetManagedDatabaseOpensearchIndicesIndexArrayOutput
	ToGetManagedDatabaseOpensearchIndicesIndexArrayOutputWithContext(context.Context) GetManagedDatabaseOpensearchIndicesIndexArrayOutput
}

type GetManagedDatabaseOpensearchIndicesIndexArray []GetManagedDatabaseOpensearchIndicesIndexInput

func (GetManagedDatabaseOpensearchIndicesIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabaseOpensearchIndicesIndex)(nil)).Elem()
}

func (i GetManagedDatabaseOpensearchIndicesIndexArray) ToGetManagedDatabaseOpensearchIndicesIndexArrayOutput() GetManagedDatabaseOpensearchIndicesIndexArrayOutput {
	return i.ToGetManagedDatabaseOpensearchIndicesIndexArrayOutputWithContext(context.Background())
}

func (i GetManagedDatabaseOpensearchIndicesIndexArray) ToGetManagedDatabaseOpensearchIndicesIndexArrayOutputWithContext(ctx context.Context) GetManagedDatabaseOpensearchIndicesIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabaseOpensearchIndicesIndexArrayOutput)
}

type GetManagedDatabaseOpensearchIndicesIndexOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseOpensearchIndicesIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseOpensearchIndicesIndex)(nil)).Elem()
}

func (o GetManagedDatabaseOpensearchIndicesIndexOutput) ToGetManagedDatabaseOpensearchIndicesIndexOutput() GetManagedDatabaseOpensearchIndicesIndexOutput {
	return o
}

func (o GetManagedDatabaseOpensearchIndicesIndexOutput) ToGetManagedDatabaseOpensearchIndicesIndexOutputWithContext(ctx context.Context) GetManagedDatabaseOpensearchIndicesIndexOutput {
	return o
}

// Timestamp indicating the creation time of the index.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Number of documents stored in the index.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) Docs() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) int { return v.Docs }).(pulumi.IntOutput)
}

// Health status of the index e.g. `green`, `yellow`, or `red`.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) string { return v.Health }).(pulumi.StringOutput)
}

// Name of the index.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) string { return v.IndexName }).(pulumi.StringOutput)
}

// Number of replicas configured for the index.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) NumberOfReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) int { return v.NumberOfReplicas }).(pulumi.IntOutput)
}

// Number of shards configured & used by the index.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) NumberOfShards() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) int { return v.NumberOfShards }).(pulumi.IntOutput)
}

// Indicates whether the index is in a read-only state that permits deletion of the entire index. This attribute can be automatically set to true in certain scenarios where the node disk space exceeds the flood stage.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) ReadOnlyAllowDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) bool { return v.ReadOnlyAllowDelete }).(pulumi.BoolOutput)
}

// Size of the index in bytes.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) int { return v.Size }).(pulumi.IntOutput)
}

// Status of the index e.g. `open` or `closed`.
func (o GetManagedDatabaseOpensearchIndicesIndexOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseOpensearchIndicesIndex) string { return v.Status }).(pulumi.StringOutput)
}

type GetManagedDatabaseOpensearchIndicesIndexArrayOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseOpensearchIndicesIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabaseOpensearchIndicesIndex)(nil)).Elem()
}

func (o GetManagedDatabaseOpensearchIndicesIndexArrayOutput) ToGetManagedDatabaseOpensearchIndicesIndexArrayOutput() GetManagedDatabaseOpensearchIndicesIndexArrayOutput {
	return o
}

func (o GetManagedDatabaseOpensearchIndicesIndexArrayOutput) ToGetManagedDatabaseOpensearchIndicesIndexArrayOutputWithContext(ctx context.Context) GetManagedDatabaseOpensearchIndicesIndexArrayOutput {
	return o
}

func (o GetManagedDatabaseOpensearchIndicesIndexArrayOutput) Index(i pulumi.IntInput) GetManagedDatabaseOpensearchIndicesIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedDatabaseOpensearchIndicesIndex {
		return vs[0].([]GetManagedDatabaseOpensearchIndicesIndex)[vs[1].(int)]
	}).(GetManagedDatabaseOpensearchIndicesIndexOutput)
}

type GetManagedDatabasePostgresqlSessionsSession struct {
	// Name of the application that is connected to this service.
	ApplicationName string `pulumi:"applicationName"`
	// Time when this process was started, i.e., when the client connected to the server.
	BackendStart string `pulumi:"backendStart"`
	// Type of current service.
	BackendType string `pulumi:"backendType"`
	// Top-level transaction identifier of this service, if any.
	BackendXid int `pulumi:"backendXid"`
	// The current service's xmin horizon.
	BackendXmin int `pulumi:"backendXmin"`
	// IP address of the client connected to this service. If this field is null, it indicates either that the client is connected via a Unix socket on the server machine or that this is an internal process such as autovacuum.
	ClientAddr string `pulumi:"clientAddr"`
	// Host name of the connected client, as reported by a reverse DNS lookup of `clientAddr`.
	ClientHostname string `pulumi:"clientHostname"`
	// TCP port number that the client is using for communication with this service, or -1 if a Unix socket is used.
	ClientPort int `pulumi:"clientPort"`
	// OID of the database this service is connected to.
	Datid int `pulumi:"datid"`
	// Name of the database this service is connected to.
	Datname string `pulumi:"datname"`
	// Process ID of this service.
	Id string `pulumi:"id"`
	// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows the last query that was executed.
	Query string `pulumi:"query"`
	// The active query current duration.
	QueryDuration string `pulumi:"queryDuration"`
	// Time when the currently active query was started, or if state is not active, when the last query was started.
	QueryStart string `pulumi:"queryStart"`
	// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
	State string `pulumi:"state"`
	// Time when the state was last changed.
	StateChange string `pulumi:"stateChange"`
	// Name of the user logged into this service.
	Usename string `pulumi:"usename"`
	// OID of the user logged into this service.
	Usesysid int `pulumi:"usesysid"`
	// Wait event name if service is currently waiting.
	WaitEvent string `pulumi:"waitEvent"`
	// The type of event for which the service is waiting, if any; otherwise NULL.
	WaitEventType string `pulumi:"waitEventType"`
	// Time when this process' current transaction was started, or null if no transaction is active.
	XactStart string `pulumi:"xactStart"`
}

// GetManagedDatabasePostgresqlSessionsSessionInput is an input type that accepts GetManagedDatabasePostgresqlSessionsSessionArgs and GetManagedDatabasePostgresqlSessionsSessionOutput values.
// You can construct a concrete instance of `GetManagedDatabasePostgresqlSessionsSessionInput` via:
//
//	GetManagedDatabasePostgresqlSessionsSessionArgs{...}
type GetManagedDatabasePostgresqlSessionsSessionInput interface {
	pulumi.Input

	ToGetManagedDatabasePostgresqlSessionsSessionOutput() GetManagedDatabasePostgresqlSessionsSessionOutput
	ToGetManagedDatabasePostgresqlSessionsSessionOutputWithContext(context.Context) GetManagedDatabasePostgresqlSessionsSessionOutput
}

type GetManagedDatabasePostgresqlSessionsSessionArgs struct {
	// Name of the application that is connected to this service.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// Time when this process was started, i.e., when the client connected to the server.
	BackendStart pulumi.StringInput `pulumi:"backendStart"`
	// Type of current service.
	BackendType pulumi.StringInput `pulumi:"backendType"`
	// Top-level transaction identifier of this service, if any.
	BackendXid pulumi.IntInput `pulumi:"backendXid"`
	// The current service's xmin horizon.
	BackendXmin pulumi.IntInput `pulumi:"backendXmin"`
	// IP address of the client connected to this service. If this field is null, it indicates either that the client is connected via a Unix socket on the server machine or that this is an internal process such as autovacuum.
	ClientAddr pulumi.StringInput `pulumi:"clientAddr"`
	// Host name of the connected client, as reported by a reverse DNS lookup of `clientAddr`.
	ClientHostname pulumi.StringInput `pulumi:"clientHostname"`
	// TCP port number that the client is using for communication with this service, or -1 if a Unix socket is used.
	ClientPort pulumi.IntInput `pulumi:"clientPort"`
	// OID of the database this service is connected to.
	Datid pulumi.IntInput `pulumi:"datid"`
	// Name of the database this service is connected to.
	Datname pulumi.StringInput `pulumi:"datname"`
	// Process ID of this service.
	Id pulumi.StringInput `pulumi:"id"`
	// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows the last query that was executed.
	Query pulumi.StringInput `pulumi:"query"`
	// The active query current duration.
	QueryDuration pulumi.StringInput `pulumi:"queryDuration"`
	// Time when the currently active query was started, or if state is not active, when the last query was started.
	QueryStart pulumi.StringInput `pulumi:"queryStart"`
	// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
	State pulumi.StringInput `pulumi:"state"`
	// Time when the state was last changed.
	StateChange pulumi.StringInput `pulumi:"stateChange"`
	// Name of the user logged into this service.
	Usename pulumi.StringInput `pulumi:"usename"`
	// OID of the user logged into this service.
	Usesysid pulumi.IntInput `pulumi:"usesysid"`
	// Wait event name if service is currently waiting.
	WaitEvent pulumi.StringInput `pulumi:"waitEvent"`
	// The type of event for which the service is waiting, if any; otherwise NULL.
	WaitEventType pulumi.StringInput `pulumi:"waitEventType"`
	// Time when this process' current transaction was started, or null if no transaction is active.
	XactStart pulumi.StringInput `pulumi:"xactStart"`
}

func (GetManagedDatabasePostgresqlSessionsSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabasePostgresqlSessionsSession)(nil)).Elem()
}

func (i GetManagedDatabasePostgresqlSessionsSessionArgs) ToGetManagedDatabasePostgresqlSessionsSessionOutput() GetManagedDatabasePostgresqlSessionsSessionOutput {
	return i.ToGetManagedDatabasePostgresqlSessionsSessionOutputWithContext(context.Background())
}

func (i GetManagedDatabasePostgresqlSessionsSessionArgs) ToGetManagedDatabasePostgresqlSessionsSessionOutputWithContext(ctx context.Context) GetManagedDatabasePostgresqlSessionsSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabasePostgresqlSessionsSessionOutput)
}

// GetManagedDatabasePostgresqlSessionsSessionArrayInput is an input type that accepts GetManagedDatabasePostgresqlSessionsSessionArray and GetManagedDatabasePostgresqlSessionsSessionArrayOutput values.
// You can construct a concrete instance of `GetManagedDatabasePostgresqlSessionsSessionArrayInput` via:
//
//	GetManagedDatabasePostgresqlSessionsSessionArray{ GetManagedDatabasePostgresqlSessionsSessionArgs{...} }
type GetManagedDatabasePostgresqlSessionsSessionArrayInput interface {
	pulumi.Input

	ToGetManagedDatabasePostgresqlSessionsSessionArrayOutput() GetManagedDatabasePostgresqlSessionsSessionArrayOutput
	ToGetManagedDatabasePostgresqlSessionsSessionArrayOutputWithContext(context.Context) GetManagedDatabasePostgresqlSessionsSessionArrayOutput
}

type GetManagedDatabasePostgresqlSessionsSessionArray []GetManagedDatabasePostgresqlSessionsSessionInput

func (GetManagedDatabasePostgresqlSessionsSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabasePostgresqlSessionsSession)(nil)).Elem()
}

func (i GetManagedDatabasePostgresqlSessionsSessionArray) ToGetManagedDatabasePostgresqlSessionsSessionArrayOutput() GetManagedDatabasePostgresqlSessionsSessionArrayOutput {
	return i.ToGetManagedDatabasePostgresqlSessionsSessionArrayOutputWithContext(context.Background())
}

func (i GetManagedDatabasePostgresqlSessionsSessionArray) ToGetManagedDatabasePostgresqlSessionsSessionArrayOutputWithContext(ctx context.Context) GetManagedDatabasePostgresqlSessionsSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabasePostgresqlSessionsSessionArrayOutput)
}

type GetManagedDatabasePostgresqlSessionsSessionOutput struct{ *pulumi.OutputState }

func (GetManagedDatabasePostgresqlSessionsSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabasePostgresqlSessionsSession)(nil)).Elem()
}

func (o GetManagedDatabasePostgresqlSessionsSessionOutput) ToGetManagedDatabasePostgresqlSessionsSessionOutput() GetManagedDatabasePostgresqlSessionsSessionOutput {
	return o
}

func (o GetManagedDatabasePostgresqlSessionsSessionOutput) ToGetManagedDatabasePostgresqlSessionsSessionOutputWithContext(ctx context.Context) GetManagedDatabasePostgresqlSessionsSessionOutput {
	return o
}

// Name of the application that is connected to this service.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// Time when this process was started, i.e., when the client connected to the server.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) BackendStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.BackendStart }).(pulumi.StringOutput)
}

// Type of current service.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) BackendType() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.BackendType }).(pulumi.StringOutput)
}

// Top-level transaction identifier of this service, if any.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) BackendXid() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) int { return v.BackendXid }).(pulumi.IntOutput)
}

// The current service's xmin horizon.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) BackendXmin() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) int { return v.BackendXmin }).(pulumi.IntOutput)
}

// IP address of the client connected to this service. If this field is null, it indicates either that the client is connected via a Unix socket on the server machine or that this is an internal process such as autovacuum.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) ClientAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.ClientAddr }).(pulumi.StringOutput)
}

// Host name of the connected client, as reported by a reverse DNS lookup of `clientAddr`.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) ClientHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.ClientHostname }).(pulumi.StringOutput)
}

// TCP port number that the client is using for communication with this service, or -1 if a Unix socket is used.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) ClientPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) int { return v.ClientPort }).(pulumi.IntOutput)
}

// OID of the database this service is connected to.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) Datid() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) int { return v.Datid }).(pulumi.IntOutput)
}

// Name of the database this service is connected to.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) Datname() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.Datname }).(pulumi.StringOutput)
}

// Process ID of this service.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.Id }).(pulumi.StringOutput)
}

// Text of this service's most recent query. If state is active this field shows the currently executing query. In all other states, it shows the last query that was executed.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.Query }).(pulumi.StringOutput)
}

// The active query current duration.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) QueryDuration() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.QueryDuration }).(pulumi.StringOutput)
}

// Time when the currently active query was started, or if state is not active, when the last query was started.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) QueryStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.QueryStart }).(pulumi.StringOutput)
}

// Current overall state of this service: active: The service is executing a query, idle: The service is waiting for a new client command.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.State }).(pulumi.StringOutput)
}

// Time when the state was last changed.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) StateChange() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.StateChange }).(pulumi.StringOutput)
}

// Name of the user logged into this service.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) Usename() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.Usename }).(pulumi.StringOutput)
}

// OID of the user logged into this service.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) Usesysid() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) int { return v.Usesysid }).(pulumi.IntOutput)
}

// Wait event name if service is currently waiting.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) WaitEvent() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.WaitEvent }).(pulumi.StringOutput)
}

// The type of event for which the service is waiting, if any; otherwise NULL.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) WaitEventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.WaitEventType }).(pulumi.StringOutput)
}

// Time when this process' current transaction was started, or null if no transaction is active.
func (o GetManagedDatabasePostgresqlSessionsSessionOutput) XactStart() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabasePostgresqlSessionsSession) string { return v.XactStart }).(pulumi.StringOutput)
}

type GetManagedDatabasePostgresqlSessionsSessionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedDatabasePostgresqlSessionsSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabasePostgresqlSessionsSession)(nil)).Elem()
}

func (o GetManagedDatabasePostgresqlSessionsSessionArrayOutput) ToGetManagedDatabasePostgresqlSessionsSessionArrayOutput() GetManagedDatabasePostgresqlSessionsSessionArrayOutput {
	return o
}

func (o GetManagedDatabasePostgresqlSessionsSessionArrayOutput) ToGetManagedDatabasePostgresqlSessionsSessionArrayOutputWithContext(ctx context.Context) GetManagedDatabasePostgresqlSessionsSessionArrayOutput {
	return o
}

func (o GetManagedDatabasePostgresqlSessionsSessionArrayOutput) Index(i pulumi.IntInput) GetManagedDatabasePostgresqlSessionsSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedDatabasePostgresqlSessionsSession {
		return vs[0].([]GetManagedDatabasePostgresqlSessionsSession)[vs[1].(int)]
	}).(GetManagedDatabasePostgresqlSessionsSessionOutput)
}

type GetManagedDatabaseRedisSessionsSession struct {
	// Number of active channel subscriptions
	ActiveChannelSubscriptions int `pulumi:"activeChannelSubscriptions"`
	// Current database ID
	ActiveDatabase string `pulumi:"activeDatabase"`
	// Number of pattern matching subscriptions.
	ActivePatternMatchingChannelSubscriptions int `pulumi:"activePatternMatchingChannelSubscriptions"`
	// Name of the application that is connected to this service.
	ApplicationName string `pulumi:"applicationName"`
	// Number of pattern matching subscriptions.
	ClientAddr string `pulumi:"clientAddr"`
	// Total duration of the connection in nanoseconds.
	ConnectionAge int `pulumi:"connectionAge"`
	// Idle time of the connection in nanoseconds.
	ConnectionIdle int `pulumi:"connectionIdle"`
	// A set containing flags' descriptions.
	Flags []string `pulumi:"flags"`
	// Client connection flags in raw string format.
	FlagsRaw string `pulumi:"flagsRaw"`
	// Process ID of this session.
	Id string `pulumi:"id"`
	// Number of commands in a MULTI/EXEC context.
	MultiExecCommands int `pulumi:"multiExecCommands"`
	// Output buffer length.
	OutputBuffer int `pulumi:"outputBuffer"`
	// Output buffer memory usage.
	OutputBufferMemory int `pulumi:"outputBufferMemory"`
	// Output list length (replies are queued in this list when the buffer is full).
	OutputListLength int `pulumi:"outputListLength"`
	// The last executed command.
	Query string `pulumi:"query"`
	// Query buffer length (0 means no query pending).
	QueryBuffer int `pulumi:"queryBuffer"`
	// Free space of the query buffer (0 means the buffer is full).
	QueryBufferFree int `pulumi:"queryBufferFree"`
}

// GetManagedDatabaseRedisSessionsSessionInput is an input type that accepts GetManagedDatabaseRedisSessionsSessionArgs and GetManagedDatabaseRedisSessionsSessionOutput values.
// You can construct a concrete instance of `GetManagedDatabaseRedisSessionsSessionInput` via:
//
//	GetManagedDatabaseRedisSessionsSessionArgs{...}
type GetManagedDatabaseRedisSessionsSessionInput interface {
	pulumi.Input

	ToGetManagedDatabaseRedisSessionsSessionOutput() GetManagedDatabaseRedisSessionsSessionOutput
	ToGetManagedDatabaseRedisSessionsSessionOutputWithContext(context.Context) GetManagedDatabaseRedisSessionsSessionOutput
}

type GetManagedDatabaseRedisSessionsSessionArgs struct {
	// Number of active channel subscriptions
	ActiveChannelSubscriptions pulumi.IntInput `pulumi:"activeChannelSubscriptions"`
	// Current database ID
	ActiveDatabase pulumi.StringInput `pulumi:"activeDatabase"`
	// Number of pattern matching subscriptions.
	ActivePatternMatchingChannelSubscriptions pulumi.IntInput `pulumi:"activePatternMatchingChannelSubscriptions"`
	// Name of the application that is connected to this service.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// Number of pattern matching subscriptions.
	ClientAddr pulumi.StringInput `pulumi:"clientAddr"`
	// Total duration of the connection in nanoseconds.
	ConnectionAge pulumi.IntInput `pulumi:"connectionAge"`
	// Idle time of the connection in nanoseconds.
	ConnectionIdle pulumi.IntInput `pulumi:"connectionIdle"`
	// A set containing flags' descriptions.
	Flags pulumi.StringArrayInput `pulumi:"flags"`
	// Client connection flags in raw string format.
	FlagsRaw pulumi.StringInput `pulumi:"flagsRaw"`
	// Process ID of this session.
	Id pulumi.StringInput `pulumi:"id"`
	// Number of commands in a MULTI/EXEC context.
	MultiExecCommands pulumi.IntInput `pulumi:"multiExecCommands"`
	// Output buffer length.
	OutputBuffer pulumi.IntInput `pulumi:"outputBuffer"`
	// Output buffer memory usage.
	OutputBufferMemory pulumi.IntInput `pulumi:"outputBufferMemory"`
	// Output list length (replies are queued in this list when the buffer is full).
	OutputListLength pulumi.IntInput `pulumi:"outputListLength"`
	// The last executed command.
	Query pulumi.StringInput `pulumi:"query"`
	// Query buffer length (0 means no query pending).
	QueryBuffer pulumi.IntInput `pulumi:"queryBuffer"`
	// Free space of the query buffer (0 means the buffer is full).
	QueryBufferFree pulumi.IntInput `pulumi:"queryBufferFree"`
}

func (GetManagedDatabaseRedisSessionsSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseRedisSessionsSession)(nil)).Elem()
}

func (i GetManagedDatabaseRedisSessionsSessionArgs) ToGetManagedDatabaseRedisSessionsSessionOutput() GetManagedDatabaseRedisSessionsSessionOutput {
	return i.ToGetManagedDatabaseRedisSessionsSessionOutputWithContext(context.Background())
}

func (i GetManagedDatabaseRedisSessionsSessionArgs) ToGetManagedDatabaseRedisSessionsSessionOutputWithContext(ctx context.Context) GetManagedDatabaseRedisSessionsSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabaseRedisSessionsSessionOutput)
}

// GetManagedDatabaseRedisSessionsSessionArrayInput is an input type that accepts GetManagedDatabaseRedisSessionsSessionArray and GetManagedDatabaseRedisSessionsSessionArrayOutput values.
// You can construct a concrete instance of `GetManagedDatabaseRedisSessionsSessionArrayInput` via:
//
//	GetManagedDatabaseRedisSessionsSessionArray{ GetManagedDatabaseRedisSessionsSessionArgs{...} }
type GetManagedDatabaseRedisSessionsSessionArrayInput interface {
	pulumi.Input

	ToGetManagedDatabaseRedisSessionsSessionArrayOutput() GetManagedDatabaseRedisSessionsSessionArrayOutput
	ToGetManagedDatabaseRedisSessionsSessionArrayOutputWithContext(context.Context) GetManagedDatabaseRedisSessionsSessionArrayOutput
}

type GetManagedDatabaseRedisSessionsSessionArray []GetManagedDatabaseRedisSessionsSessionInput

func (GetManagedDatabaseRedisSessionsSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabaseRedisSessionsSession)(nil)).Elem()
}

func (i GetManagedDatabaseRedisSessionsSessionArray) ToGetManagedDatabaseRedisSessionsSessionArrayOutput() GetManagedDatabaseRedisSessionsSessionArrayOutput {
	return i.ToGetManagedDatabaseRedisSessionsSessionArrayOutputWithContext(context.Background())
}

func (i GetManagedDatabaseRedisSessionsSessionArray) ToGetManagedDatabaseRedisSessionsSessionArrayOutputWithContext(ctx context.Context) GetManagedDatabaseRedisSessionsSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedDatabaseRedisSessionsSessionArrayOutput)
}

type GetManagedDatabaseRedisSessionsSessionOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseRedisSessionsSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseRedisSessionsSession)(nil)).Elem()
}

func (o GetManagedDatabaseRedisSessionsSessionOutput) ToGetManagedDatabaseRedisSessionsSessionOutput() GetManagedDatabaseRedisSessionsSessionOutput {
	return o
}

func (o GetManagedDatabaseRedisSessionsSessionOutput) ToGetManagedDatabaseRedisSessionsSessionOutputWithContext(ctx context.Context) GetManagedDatabaseRedisSessionsSessionOutput {
	return o
}

// Number of active channel subscriptions
func (o GetManagedDatabaseRedisSessionsSessionOutput) ActiveChannelSubscriptions() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.ActiveChannelSubscriptions }).(pulumi.IntOutput)
}

// Current database ID
func (o GetManagedDatabaseRedisSessionsSessionOutput) ActiveDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) string { return v.ActiveDatabase }).(pulumi.StringOutput)
}

// Number of pattern matching subscriptions.
func (o GetManagedDatabaseRedisSessionsSessionOutput) ActivePatternMatchingChannelSubscriptions() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.ActivePatternMatchingChannelSubscriptions }).(pulumi.IntOutput)
}

// Name of the application that is connected to this service.
func (o GetManagedDatabaseRedisSessionsSessionOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// Number of pattern matching subscriptions.
func (o GetManagedDatabaseRedisSessionsSessionOutput) ClientAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) string { return v.ClientAddr }).(pulumi.StringOutput)
}

// Total duration of the connection in nanoseconds.
func (o GetManagedDatabaseRedisSessionsSessionOutput) ConnectionAge() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.ConnectionAge }).(pulumi.IntOutput)
}

// Idle time of the connection in nanoseconds.
func (o GetManagedDatabaseRedisSessionsSessionOutput) ConnectionIdle() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.ConnectionIdle }).(pulumi.IntOutput)
}

// A set containing flags' descriptions.
func (o GetManagedDatabaseRedisSessionsSessionOutput) Flags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) []string { return v.Flags }).(pulumi.StringArrayOutput)
}

// Client connection flags in raw string format.
func (o GetManagedDatabaseRedisSessionsSessionOutput) FlagsRaw() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) string { return v.FlagsRaw }).(pulumi.StringOutput)
}

// Process ID of this session.
func (o GetManagedDatabaseRedisSessionsSessionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) string { return v.Id }).(pulumi.StringOutput)
}

// Number of commands in a MULTI/EXEC context.
func (o GetManagedDatabaseRedisSessionsSessionOutput) MultiExecCommands() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.MultiExecCommands }).(pulumi.IntOutput)
}

// Output buffer length.
func (o GetManagedDatabaseRedisSessionsSessionOutput) OutputBuffer() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.OutputBuffer }).(pulumi.IntOutput)
}

// Output buffer memory usage.
func (o GetManagedDatabaseRedisSessionsSessionOutput) OutputBufferMemory() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.OutputBufferMemory }).(pulumi.IntOutput)
}

// Output list length (replies are queued in this list when the buffer is full).
func (o GetManagedDatabaseRedisSessionsSessionOutput) OutputListLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.OutputListLength }).(pulumi.IntOutput)
}

// The last executed command.
func (o GetManagedDatabaseRedisSessionsSessionOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) string { return v.Query }).(pulumi.StringOutput)
}

// Query buffer length (0 means no query pending).
func (o GetManagedDatabaseRedisSessionsSessionOutput) QueryBuffer() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.QueryBuffer }).(pulumi.IntOutput)
}

// Free space of the query buffer (0 means the buffer is full).
func (o GetManagedDatabaseRedisSessionsSessionOutput) QueryBufferFree() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedDatabaseRedisSessionsSession) int { return v.QueryBufferFree }).(pulumi.IntOutput)
}

type GetManagedDatabaseRedisSessionsSessionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseRedisSessionsSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedDatabaseRedisSessionsSession)(nil)).Elem()
}

func (o GetManagedDatabaseRedisSessionsSessionArrayOutput) ToGetManagedDatabaseRedisSessionsSessionArrayOutput() GetManagedDatabaseRedisSessionsSessionArrayOutput {
	return o
}

func (o GetManagedDatabaseRedisSessionsSessionArrayOutput) ToGetManagedDatabaseRedisSessionsSessionArrayOutputWithContext(ctx context.Context) GetManagedDatabaseRedisSessionsSessionArrayOutput {
	return o
}

func (o GetManagedDatabaseRedisSessionsSessionArrayOutput) Index(i pulumi.IntInput) GetManagedDatabaseRedisSessionsSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedDatabaseRedisSessionsSession {
		return vs[0].([]GetManagedDatabaseRedisSessionsSession)[vs[1].(int)]
	}).(GetManagedDatabaseRedisSessionsSessionOutput)
}

type GetManagedObjectStoragePoliciesPolicy struct {
	// Policy ARN.
	Arn string `pulumi:"arn"`
	// Attachment count.
	AttachmentCount int `pulumi:"attachmentCount"`
	// Creation time.
	CreatedAt string `pulumi:"createdAt"`
	// Default version id.
	DefaultVersionId string `pulumi:"defaultVersionId"`
	// Description of the policy.
	Description *string `pulumi:"description"`
	// Policy document, URL-encoded compliant with RFC 3986.
	Document string `pulumi:"document"`
	// Policy name.
	Name string `pulumi:"name"`
	// Managed Object Storage service UUID.
	ServiceUuid string `pulumi:"serviceUuid"`
	// Defines whether the policy was set up by the system.
	System bool `pulumi:"system"`
	// Update time.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetManagedObjectStoragePoliciesPolicyInput is an input type that accepts GetManagedObjectStoragePoliciesPolicyArgs and GetManagedObjectStoragePoliciesPolicyOutput values.
// You can construct a concrete instance of `GetManagedObjectStoragePoliciesPolicyInput` via:
//
//	GetManagedObjectStoragePoliciesPolicyArgs{...}
type GetManagedObjectStoragePoliciesPolicyInput interface {
	pulumi.Input

	ToGetManagedObjectStoragePoliciesPolicyOutput() GetManagedObjectStoragePoliciesPolicyOutput
	ToGetManagedObjectStoragePoliciesPolicyOutputWithContext(context.Context) GetManagedObjectStoragePoliciesPolicyOutput
}

type GetManagedObjectStoragePoliciesPolicyArgs struct {
	// Policy ARN.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Attachment count.
	AttachmentCount pulumi.IntInput `pulumi:"attachmentCount"`
	// Creation time.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Default version id.
	DefaultVersionId pulumi.StringInput `pulumi:"defaultVersionId"`
	// Description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Policy document, URL-encoded compliant with RFC 3986.
	Document pulumi.StringInput `pulumi:"document"`
	// Policy name.
	Name pulumi.StringInput `pulumi:"name"`
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringInput `pulumi:"serviceUuid"`
	// Defines whether the policy was set up by the system.
	System pulumi.BoolInput `pulumi:"system"`
	// Update time.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetManagedObjectStoragePoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedObjectStoragePoliciesPolicy)(nil)).Elem()
}

func (i GetManagedObjectStoragePoliciesPolicyArgs) ToGetManagedObjectStoragePoliciesPolicyOutput() GetManagedObjectStoragePoliciesPolicyOutput {
	return i.ToGetManagedObjectStoragePoliciesPolicyOutputWithContext(context.Background())
}

func (i GetManagedObjectStoragePoliciesPolicyArgs) ToGetManagedObjectStoragePoliciesPolicyOutputWithContext(ctx context.Context) GetManagedObjectStoragePoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedObjectStoragePoliciesPolicyOutput)
}

// GetManagedObjectStoragePoliciesPolicyArrayInput is an input type that accepts GetManagedObjectStoragePoliciesPolicyArray and GetManagedObjectStoragePoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetManagedObjectStoragePoliciesPolicyArrayInput` via:
//
//	GetManagedObjectStoragePoliciesPolicyArray{ GetManagedObjectStoragePoliciesPolicyArgs{...} }
type GetManagedObjectStoragePoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetManagedObjectStoragePoliciesPolicyArrayOutput() GetManagedObjectStoragePoliciesPolicyArrayOutput
	ToGetManagedObjectStoragePoliciesPolicyArrayOutputWithContext(context.Context) GetManagedObjectStoragePoliciesPolicyArrayOutput
}

type GetManagedObjectStoragePoliciesPolicyArray []GetManagedObjectStoragePoliciesPolicyInput

func (GetManagedObjectStoragePoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedObjectStoragePoliciesPolicy)(nil)).Elem()
}

func (i GetManagedObjectStoragePoliciesPolicyArray) ToGetManagedObjectStoragePoliciesPolicyArrayOutput() GetManagedObjectStoragePoliciesPolicyArrayOutput {
	return i.ToGetManagedObjectStoragePoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetManagedObjectStoragePoliciesPolicyArray) ToGetManagedObjectStoragePoliciesPolicyArrayOutputWithContext(ctx context.Context) GetManagedObjectStoragePoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedObjectStoragePoliciesPolicyArrayOutput)
}

type GetManagedObjectStoragePoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetManagedObjectStoragePoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedObjectStoragePoliciesPolicy)(nil)).Elem()
}

func (o GetManagedObjectStoragePoliciesPolicyOutput) ToGetManagedObjectStoragePoliciesPolicyOutput() GetManagedObjectStoragePoliciesPolicyOutput {
	return o
}

func (o GetManagedObjectStoragePoliciesPolicyOutput) ToGetManagedObjectStoragePoliciesPolicyOutputWithContext(ctx context.Context) GetManagedObjectStoragePoliciesPolicyOutput {
	return o
}

// Policy ARN.
func (o GetManagedObjectStoragePoliciesPolicyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.Arn }).(pulumi.StringOutput)
}

// Attachment count.
func (o GetManagedObjectStoragePoliciesPolicyOutput) AttachmentCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) int { return v.AttachmentCount }).(pulumi.IntOutput)
}

// Creation time.
func (o GetManagedObjectStoragePoliciesPolicyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Default version id.
func (o GetManagedObjectStoragePoliciesPolicyOutput) DefaultVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.DefaultVersionId }).(pulumi.StringOutput)
}

// Description of the policy.
func (o GetManagedObjectStoragePoliciesPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Policy document, URL-encoded compliant with RFC 3986.
func (o GetManagedObjectStoragePoliciesPolicyOutput) Document() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.Document }).(pulumi.StringOutput)
}

// Policy name.
func (o GetManagedObjectStoragePoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// Managed Object Storage service UUID.
func (o GetManagedObjectStoragePoliciesPolicyOutput) ServiceUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.ServiceUuid }).(pulumi.StringOutput)
}

// Defines whether the policy was set up by the system.
func (o GetManagedObjectStoragePoliciesPolicyOutput) System() pulumi.BoolOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) bool { return v.System }).(pulumi.BoolOutput)
}

// Update time.
func (o GetManagedObjectStoragePoliciesPolicyOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStoragePoliciesPolicy) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetManagedObjectStoragePoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetManagedObjectStoragePoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedObjectStoragePoliciesPolicy)(nil)).Elem()
}

func (o GetManagedObjectStoragePoliciesPolicyArrayOutput) ToGetManagedObjectStoragePoliciesPolicyArrayOutput() GetManagedObjectStoragePoliciesPolicyArrayOutput {
	return o
}

func (o GetManagedObjectStoragePoliciesPolicyArrayOutput) ToGetManagedObjectStoragePoliciesPolicyArrayOutputWithContext(ctx context.Context) GetManagedObjectStoragePoliciesPolicyArrayOutput {
	return o
}

func (o GetManagedObjectStoragePoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetManagedObjectStoragePoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedObjectStoragePoliciesPolicy {
		return vs[0].([]GetManagedObjectStoragePoliciesPolicy)[vs[1].(int)]
	}).(GetManagedObjectStoragePoliciesPolicyOutput)
}

type GetManagedObjectStorageRegionsRegion struct {
	// Name of the region.
	Name string `pulumi:"name"`
	// Primary zone of the region.
	PrimaryZone string `pulumi:"primaryZone"`
	// List of zones in the region.
	Zones []string `pulumi:"zones"`
}

// GetManagedObjectStorageRegionsRegionInput is an input type that accepts GetManagedObjectStorageRegionsRegionArgs and GetManagedObjectStorageRegionsRegionOutput values.
// You can construct a concrete instance of `GetManagedObjectStorageRegionsRegionInput` via:
//
//	GetManagedObjectStorageRegionsRegionArgs{...}
type GetManagedObjectStorageRegionsRegionInput interface {
	pulumi.Input

	ToGetManagedObjectStorageRegionsRegionOutput() GetManagedObjectStorageRegionsRegionOutput
	ToGetManagedObjectStorageRegionsRegionOutputWithContext(context.Context) GetManagedObjectStorageRegionsRegionOutput
}

type GetManagedObjectStorageRegionsRegionArgs struct {
	// Name of the region.
	Name pulumi.StringInput `pulumi:"name"`
	// Primary zone of the region.
	PrimaryZone pulumi.StringInput `pulumi:"primaryZone"`
	// List of zones in the region.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetManagedObjectStorageRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedObjectStorageRegionsRegion)(nil)).Elem()
}

func (i GetManagedObjectStorageRegionsRegionArgs) ToGetManagedObjectStorageRegionsRegionOutput() GetManagedObjectStorageRegionsRegionOutput {
	return i.ToGetManagedObjectStorageRegionsRegionOutputWithContext(context.Background())
}

func (i GetManagedObjectStorageRegionsRegionArgs) ToGetManagedObjectStorageRegionsRegionOutputWithContext(ctx context.Context) GetManagedObjectStorageRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedObjectStorageRegionsRegionOutput)
}

// GetManagedObjectStorageRegionsRegionArrayInput is an input type that accepts GetManagedObjectStorageRegionsRegionArray and GetManagedObjectStorageRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetManagedObjectStorageRegionsRegionArrayInput` via:
//
//	GetManagedObjectStorageRegionsRegionArray{ GetManagedObjectStorageRegionsRegionArgs{...} }
type GetManagedObjectStorageRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetManagedObjectStorageRegionsRegionArrayOutput() GetManagedObjectStorageRegionsRegionArrayOutput
	ToGetManagedObjectStorageRegionsRegionArrayOutputWithContext(context.Context) GetManagedObjectStorageRegionsRegionArrayOutput
}

type GetManagedObjectStorageRegionsRegionArray []GetManagedObjectStorageRegionsRegionInput

func (GetManagedObjectStorageRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedObjectStorageRegionsRegion)(nil)).Elem()
}

func (i GetManagedObjectStorageRegionsRegionArray) ToGetManagedObjectStorageRegionsRegionArrayOutput() GetManagedObjectStorageRegionsRegionArrayOutput {
	return i.ToGetManagedObjectStorageRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetManagedObjectStorageRegionsRegionArray) ToGetManagedObjectStorageRegionsRegionArrayOutputWithContext(ctx context.Context) GetManagedObjectStorageRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagedObjectStorageRegionsRegionArrayOutput)
}

type GetManagedObjectStorageRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetManagedObjectStorageRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedObjectStorageRegionsRegion)(nil)).Elem()
}

func (o GetManagedObjectStorageRegionsRegionOutput) ToGetManagedObjectStorageRegionsRegionOutput() GetManagedObjectStorageRegionsRegionOutput {
	return o
}

func (o GetManagedObjectStorageRegionsRegionOutput) ToGetManagedObjectStorageRegionsRegionOutputWithContext(ctx context.Context) GetManagedObjectStorageRegionsRegionOutput {
	return o
}

// Name of the region.
func (o GetManagedObjectStorageRegionsRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStorageRegionsRegion) string { return v.Name }).(pulumi.StringOutput)
}

// Primary zone of the region.
func (o GetManagedObjectStorageRegionsRegionOutput) PrimaryZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedObjectStorageRegionsRegion) string { return v.PrimaryZone }).(pulumi.StringOutput)
}

// List of zones in the region.
func (o GetManagedObjectStorageRegionsRegionOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetManagedObjectStorageRegionsRegion) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GetManagedObjectStorageRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetManagedObjectStorageRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagedObjectStorageRegionsRegion)(nil)).Elem()
}

func (o GetManagedObjectStorageRegionsRegionArrayOutput) ToGetManagedObjectStorageRegionsRegionArrayOutput() GetManagedObjectStorageRegionsRegionArrayOutput {
	return o
}

func (o GetManagedObjectStorageRegionsRegionArrayOutput) ToGetManagedObjectStorageRegionsRegionArrayOutputWithContext(ctx context.Context) GetManagedObjectStorageRegionsRegionArrayOutput {
	return o
}

func (o GetManagedObjectStorageRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetManagedObjectStorageRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagedObjectStorageRegionsRegion {
		return vs[0].([]GetManagedObjectStorageRegionsRegion)[vs[1].(int)]
	}).(GetManagedObjectStorageRegionsRegionOutput)
}

type GetNetworksNetwork struct {
	// The UUID of the network
	Id string `pulumi:"id"`
	// A list of IP subnets within the network
	IpNetworks []GetNetworksNetworkIpNetwork `pulumi:"ipNetworks"`
	// A valid name for the network
	Name string `pulumi:"name"`
	// A list of attached servers
	Servers []GetNetworksNetworkServer `pulumi:"servers"`
	// The network type
	Type string `pulumi:"type"`
	// The zone the network is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
	Zone string `pulumi:"zone"`
}

// GetNetworksNetworkInput is an input type that accepts GetNetworksNetworkArgs and GetNetworksNetworkOutput values.
// You can construct a concrete instance of `GetNetworksNetworkInput` via:
//
//	GetNetworksNetworkArgs{...}
type GetNetworksNetworkInput interface {
	pulumi.Input

	ToGetNetworksNetworkOutput() GetNetworksNetworkOutput
	ToGetNetworksNetworkOutputWithContext(context.Context) GetNetworksNetworkOutput
}

type GetNetworksNetworkArgs struct {
	// The UUID of the network
	Id pulumi.StringInput `pulumi:"id"`
	// A list of IP subnets within the network
	IpNetworks GetNetworksNetworkIpNetworkArrayInput `pulumi:"ipNetworks"`
	// A valid name for the network
	Name pulumi.StringInput `pulumi:"name"`
	// A list of attached servers
	Servers GetNetworksNetworkServerArrayInput `pulumi:"servers"`
	// The network type
	Type pulumi.StringInput `pulumi:"type"`
	// The zone the network is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetNetworksNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksNetwork)(nil)).Elem()
}

func (i GetNetworksNetworkArgs) ToGetNetworksNetworkOutput() GetNetworksNetworkOutput {
	return i.ToGetNetworksNetworkOutputWithContext(context.Background())
}

func (i GetNetworksNetworkArgs) ToGetNetworksNetworkOutputWithContext(ctx context.Context) GetNetworksNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksNetworkOutput)
}

// GetNetworksNetworkArrayInput is an input type that accepts GetNetworksNetworkArray and GetNetworksNetworkArrayOutput values.
// You can construct a concrete instance of `GetNetworksNetworkArrayInput` via:
//
//	GetNetworksNetworkArray{ GetNetworksNetworkArgs{...} }
type GetNetworksNetworkArrayInput interface {
	pulumi.Input

	ToGetNetworksNetworkArrayOutput() GetNetworksNetworkArrayOutput
	ToGetNetworksNetworkArrayOutputWithContext(context.Context) GetNetworksNetworkArrayOutput
}

type GetNetworksNetworkArray []GetNetworksNetworkInput

func (GetNetworksNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksNetwork)(nil)).Elem()
}

func (i GetNetworksNetworkArray) ToGetNetworksNetworkArrayOutput() GetNetworksNetworkArrayOutput {
	return i.ToGetNetworksNetworkArrayOutputWithContext(context.Background())
}

func (i GetNetworksNetworkArray) ToGetNetworksNetworkArrayOutputWithContext(ctx context.Context) GetNetworksNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksNetworkArrayOutput)
}

type GetNetworksNetworkOutput struct{ *pulumi.OutputState }

func (GetNetworksNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksNetwork)(nil)).Elem()
}

func (o GetNetworksNetworkOutput) ToGetNetworksNetworkOutput() GetNetworksNetworkOutput {
	return o
}

func (o GetNetworksNetworkOutput) ToGetNetworksNetworkOutputWithContext(ctx context.Context) GetNetworksNetworkOutput {
	return o
}

// The UUID of the network
func (o GetNetworksNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// A list of IP subnets within the network
func (o GetNetworksNetworkOutput) IpNetworks() GetNetworksNetworkIpNetworkArrayOutput {
	return o.ApplyT(func(v GetNetworksNetwork) []GetNetworksNetworkIpNetwork { return v.IpNetworks }).(GetNetworksNetworkIpNetworkArrayOutput)
}

// A valid name for the network
func (o GetNetworksNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetwork) string { return v.Name }).(pulumi.StringOutput)
}

// A list of attached servers
func (o GetNetworksNetworkOutput) Servers() GetNetworksNetworkServerArrayOutput {
	return o.ApplyT(func(v GetNetworksNetwork) []GetNetworksNetworkServer { return v.Servers }).(GetNetworksNetworkServerArrayOutput)
}

// The network type
func (o GetNetworksNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetwork) string { return v.Type }).(pulumi.StringOutput)
}

// The zone the network is in, e.g. `de-fra1`. You can list available zones with `upctl zone list`.
func (o GetNetworksNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetNetworksNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworksNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksNetwork)(nil)).Elem()
}

func (o GetNetworksNetworkArrayOutput) ToGetNetworksNetworkArrayOutput() GetNetworksNetworkArrayOutput {
	return o
}

func (o GetNetworksNetworkArrayOutput) ToGetNetworksNetworkArrayOutputWithContext(ctx context.Context) GetNetworksNetworkArrayOutput {
	return o
}

func (o GetNetworksNetworkArrayOutput) Index(i pulumi.IntInput) GetNetworksNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworksNetwork {
		return vs[0].([]GetNetworksNetwork)[vs[1].(int)]
	}).(GetNetworksNetworkOutput)
}

type GetNetworksNetworkIpNetwork struct {
	// The CIDR range of the subnet
	Address string `pulumi:"address"`
	// Is DHCP enabled?
	Dhcp bool `pulumi:"dhcp"`
	// Is the gateway the DHCP default route?
	DhcpDefaultRoute bool `pulumi:"dhcpDefaultRoute"`
	// The DNS servers given by DHCP
	DhcpDns []string `pulumi:"dhcpDns"`
	// The additional DHCP classless static routes given by DHCP
	DhcpRoutes []string `pulumi:"dhcpRoutes"`
	// IP address family
	Family string `pulumi:"family"`
	// Gateway address given by DHCP
	Gateway string `pulumi:"gateway"`
}

// GetNetworksNetworkIpNetworkInput is an input type that accepts GetNetworksNetworkIpNetworkArgs and GetNetworksNetworkIpNetworkOutput values.
// You can construct a concrete instance of `GetNetworksNetworkIpNetworkInput` via:
//
//	GetNetworksNetworkIpNetworkArgs{...}
type GetNetworksNetworkIpNetworkInput interface {
	pulumi.Input

	ToGetNetworksNetworkIpNetworkOutput() GetNetworksNetworkIpNetworkOutput
	ToGetNetworksNetworkIpNetworkOutputWithContext(context.Context) GetNetworksNetworkIpNetworkOutput
}

type GetNetworksNetworkIpNetworkArgs struct {
	// The CIDR range of the subnet
	Address pulumi.StringInput `pulumi:"address"`
	// Is DHCP enabled?
	Dhcp pulumi.BoolInput `pulumi:"dhcp"`
	// Is the gateway the DHCP default route?
	DhcpDefaultRoute pulumi.BoolInput `pulumi:"dhcpDefaultRoute"`
	// The DNS servers given by DHCP
	DhcpDns pulumi.StringArrayInput `pulumi:"dhcpDns"`
	// The additional DHCP classless static routes given by DHCP
	DhcpRoutes pulumi.StringArrayInput `pulumi:"dhcpRoutes"`
	// IP address family
	Family pulumi.StringInput `pulumi:"family"`
	// Gateway address given by DHCP
	Gateway pulumi.StringInput `pulumi:"gateway"`
}

func (GetNetworksNetworkIpNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksNetworkIpNetwork)(nil)).Elem()
}

func (i GetNetworksNetworkIpNetworkArgs) ToGetNetworksNetworkIpNetworkOutput() GetNetworksNetworkIpNetworkOutput {
	return i.ToGetNetworksNetworkIpNetworkOutputWithContext(context.Background())
}

func (i GetNetworksNetworkIpNetworkArgs) ToGetNetworksNetworkIpNetworkOutputWithContext(ctx context.Context) GetNetworksNetworkIpNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksNetworkIpNetworkOutput)
}

// GetNetworksNetworkIpNetworkArrayInput is an input type that accepts GetNetworksNetworkIpNetworkArray and GetNetworksNetworkIpNetworkArrayOutput values.
// You can construct a concrete instance of `GetNetworksNetworkIpNetworkArrayInput` via:
//
//	GetNetworksNetworkIpNetworkArray{ GetNetworksNetworkIpNetworkArgs{...} }
type GetNetworksNetworkIpNetworkArrayInput interface {
	pulumi.Input

	ToGetNetworksNetworkIpNetworkArrayOutput() GetNetworksNetworkIpNetworkArrayOutput
	ToGetNetworksNetworkIpNetworkArrayOutputWithContext(context.Context) GetNetworksNetworkIpNetworkArrayOutput
}

type GetNetworksNetworkIpNetworkArray []GetNetworksNetworkIpNetworkInput

func (GetNetworksNetworkIpNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksNetworkIpNetwork)(nil)).Elem()
}

func (i GetNetworksNetworkIpNetworkArray) ToGetNetworksNetworkIpNetworkArrayOutput() GetNetworksNetworkIpNetworkArrayOutput {
	return i.ToGetNetworksNetworkIpNetworkArrayOutputWithContext(context.Background())
}

func (i GetNetworksNetworkIpNetworkArray) ToGetNetworksNetworkIpNetworkArrayOutputWithContext(ctx context.Context) GetNetworksNetworkIpNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksNetworkIpNetworkArrayOutput)
}

type GetNetworksNetworkIpNetworkOutput struct{ *pulumi.OutputState }

func (GetNetworksNetworkIpNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksNetworkIpNetwork)(nil)).Elem()
}

func (o GetNetworksNetworkIpNetworkOutput) ToGetNetworksNetworkIpNetworkOutput() GetNetworksNetworkIpNetworkOutput {
	return o
}

func (o GetNetworksNetworkIpNetworkOutput) ToGetNetworksNetworkIpNetworkOutputWithContext(ctx context.Context) GetNetworksNetworkIpNetworkOutput {
	return o
}

// The CIDR range of the subnet
func (o GetNetworksNetworkIpNetworkOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) string { return v.Address }).(pulumi.StringOutput)
}

// Is DHCP enabled?
func (o GetNetworksNetworkIpNetworkOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

// Is the gateway the DHCP default route?
func (o GetNetworksNetworkIpNetworkOutput) DhcpDefaultRoute() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) bool { return v.DhcpDefaultRoute }).(pulumi.BoolOutput)
}

// The DNS servers given by DHCP
func (o GetNetworksNetworkIpNetworkOutput) DhcpDns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) []string { return v.DhcpDns }).(pulumi.StringArrayOutput)
}

// The additional DHCP classless static routes given by DHCP
func (o GetNetworksNetworkIpNetworkOutput) DhcpRoutes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) []string { return v.DhcpRoutes }).(pulumi.StringArrayOutput)
}

// IP address family
func (o GetNetworksNetworkIpNetworkOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) string { return v.Family }).(pulumi.StringOutput)
}

// Gateway address given by DHCP
func (o GetNetworksNetworkIpNetworkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetworkIpNetwork) string { return v.Gateway }).(pulumi.StringOutput)
}

type GetNetworksNetworkIpNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworksNetworkIpNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksNetworkIpNetwork)(nil)).Elem()
}

func (o GetNetworksNetworkIpNetworkArrayOutput) ToGetNetworksNetworkIpNetworkArrayOutput() GetNetworksNetworkIpNetworkArrayOutput {
	return o
}

func (o GetNetworksNetworkIpNetworkArrayOutput) ToGetNetworksNetworkIpNetworkArrayOutputWithContext(ctx context.Context) GetNetworksNetworkIpNetworkArrayOutput {
	return o
}

func (o GetNetworksNetworkIpNetworkArrayOutput) Index(i pulumi.IntInput) GetNetworksNetworkIpNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworksNetworkIpNetwork {
		return vs[0].([]GetNetworksNetworkIpNetwork)[vs[1].(int)]
	}).(GetNetworksNetworkIpNetworkOutput)
}

type GetNetworksNetworkServer struct {
	// The UUID of the server
	Id string `pulumi:"id"`
	// The short description of the server
	Title string `pulumi:"title"`
}

// GetNetworksNetworkServerInput is an input type that accepts GetNetworksNetworkServerArgs and GetNetworksNetworkServerOutput values.
// You can construct a concrete instance of `GetNetworksNetworkServerInput` via:
//
//	GetNetworksNetworkServerArgs{...}
type GetNetworksNetworkServerInput interface {
	pulumi.Input

	ToGetNetworksNetworkServerOutput() GetNetworksNetworkServerOutput
	ToGetNetworksNetworkServerOutputWithContext(context.Context) GetNetworksNetworkServerOutput
}

type GetNetworksNetworkServerArgs struct {
	// The UUID of the server
	Id pulumi.StringInput `pulumi:"id"`
	// The short description of the server
	Title pulumi.StringInput `pulumi:"title"`
}

func (GetNetworksNetworkServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksNetworkServer)(nil)).Elem()
}

func (i GetNetworksNetworkServerArgs) ToGetNetworksNetworkServerOutput() GetNetworksNetworkServerOutput {
	return i.ToGetNetworksNetworkServerOutputWithContext(context.Background())
}

func (i GetNetworksNetworkServerArgs) ToGetNetworksNetworkServerOutputWithContext(ctx context.Context) GetNetworksNetworkServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksNetworkServerOutput)
}

// GetNetworksNetworkServerArrayInput is an input type that accepts GetNetworksNetworkServerArray and GetNetworksNetworkServerArrayOutput values.
// You can construct a concrete instance of `GetNetworksNetworkServerArrayInput` via:
//
//	GetNetworksNetworkServerArray{ GetNetworksNetworkServerArgs{...} }
type GetNetworksNetworkServerArrayInput interface {
	pulumi.Input

	ToGetNetworksNetworkServerArrayOutput() GetNetworksNetworkServerArrayOutput
	ToGetNetworksNetworkServerArrayOutputWithContext(context.Context) GetNetworksNetworkServerArrayOutput
}

type GetNetworksNetworkServerArray []GetNetworksNetworkServerInput

func (GetNetworksNetworkServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksNetworkServer)(nil)).Elem()
}

func (i GetNetworksNetworkServerArray) ToGetNetworksNetworkServerArrayOutput() GetNetworksNetworkServerArrayOutput {
	return i.ToGetNetworksNetworkServerArrayOutputWithContext(context.Background())
}

func (i GetNetworksNetworkServerArray) ToGetNetworksNetworkServerArrayOutputWithContext(ctx context.Context) GetNetworksNetworkServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworksNetworkServerArrayOutput)
}

type GetNetworksNetworkServerOutput struct{ *pulumi.OutputState }

func (GetNetworksNetworkServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworksNetworkServer)(nil)).Elem()
}

func (o GetNetworksNetworkServerOutput) ToGetNetworksNetworkServerOutput() GetNetworksNetworkServerOutput {
	return o
}

func (o GetNetworksNetworkServerOutput) ToGetNetworksNetworkServerOutputWithContext(ctx context.Context) GetNetworksNetworkServerOutput {
	return o
}

// The UUID of the server
func (o GetNetworksNetworkServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetworkServer) string { return v.Id }).(pulumi.StringOutput)
}

// The short description of the server
func (o GetNetworksNetworkServerOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworksNetworkServer) string { return v.Title }).(pulumi.StringOutput)
}

type GetNetworksNetworkServerArrayOutput struct{ *pulumi.OutputState }

func (GetNetworksNetworkServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworksNetworkServer)(nil)).Elem()
}

func (o GetNetworksNetworkServerArrayOutput) ToGetNetworksNetworkServerArrayOutput() GetNetworksNetworkServerArrayOutput {
	return o
}

func (o GetNetworksNetworkServerArrayOutput) ToGetNetworksNetworkServerArrayOutputWithContext(ctx context.Context) GetNetworksNetworkServerArrayOutput {
	return o
}

func (o GetNetworksNetworkServerArrayOutput) Index(i pulumi.IntInput) GetNetworksNetworkServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworksNetworkServer {
		return vs[0].([]GetNetworksNetworkServer)[vs[1].(int)]
	}).(GetNetworksNetworkServerOutput)
}

type GetTagsTag struct {
	// Free form text representing the meaning of the tag
	Description string `pulumi:"description"`
	// The value representing the tag
	Name string `pulumi:"name"`
	// A collection of servers that have been assigned the tag
	Servers []string `pulumi:"servers"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// Free form text representing the meaning of the tag
	Description pulumi.StringInput `pulumi:"description"`
	// The value representing the tag
	Name pulumi.StringInput `pulumi:"name"`
	// A collection of servers that have been assigned the tag
	Servers pulumi.StringArrayInput `pulumi:"servers"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// Free form text representing the meaning of the tag
func (o GetTagsTagOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Description }).(pulumi.StringOutput)
}

// The value representing the tag
func (o GetTagsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of servers that have been assigned the tag
func (o GetTagsTagOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsTag) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayAddressInput)(nil)).Elem(), GatewayAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayAddressPtrInput)(nil)).Elem(), GatewayAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayAddressArrayInput)(nil)).Elem(), GatewayAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionLocalRouteInput)(nil)).Elem(), GatewayConnectionLocalRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionLocalRouteArrayInput)(nil)).Elem(), GatewayConnectionLocalRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionRemoteRouteInput)(nil)).Elem(), GatewayConnectionRemoteRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionRemoteRouteArrayInput)(nil)).Elem(), GatewayConnectionRemoteRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionTunnelIpsecAuthPskInput)(nil)).Elem(), GatewayConnectionTunnelIpsecAuthPskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionTunnelIpsecAuthPskPtrInput)(nil)).Elem(), GatewayConnectionTunnelIpsecAuthPskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionTunnelIpsecPropertiesInput)(nil)).Elem(), GatewayConnectionTunnelIpsecPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayConnectionTunnelIpsecPropertiesPtrInput)(nil)).Elem(), GatewayConnectionTunnelIpsecPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouterInput)(nil)).Elem(), GatewayRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouterPtrInput)(nil)).Elem(), GatewayRouterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodeGroupCustomPlanInput)(nil)).Elem(), KubernetesNodeGroupCustomPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodeGroupCustomPlanPtrInput)(nil)).Elem(), KubernetesNodeGroupCustomPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodeGroupKubeletArgInput)(nil)).Elem(), KubernetesNodeGroupKubeletArgArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodeGroupKubeletArgArrayInput)(nil)).Elem(), KubernetesNodeGroupKubeletArgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodeGroupTaintInput)(nil)).Elem(), KubernetesNodeGroupTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodeGroupTaintArrayInput)(nil)).Elem(), KubernetesNodeGroupTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendPropertiesInput)(nil)).Elem(), LoadbalancerBackendPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendPropertiesPtrInput)(nil)).Elem(), LoadbalancerBackendPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendNetworkInput)(nil)).Elem(), LoadbalancerFrontendNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendNetworkArrayInput)(nil)).Elem(), LoadbalancerFrontendNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendPropertiesInput)(nil)).Elem(), LoadbalancerFrontendPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendPropertiesPtrInput)(nil)).Elem(), LoadbalancerFrontendPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsPtrInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpRedirectInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsHttpRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpRedirectArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsHttpRedirectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpReturnInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsHttpReturnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsHttpReturnArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsHttpReturnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsSetForwardedHeaderInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsSetForwardedHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsSetForwardedHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsTcpRejectInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsTcpRejectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsTcpRejectArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsTcpRejectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsUseBackendInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsUseBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleActionsUseBackendArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleActionsUseBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersPtrInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySizeInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersBodySizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySizeArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersBodySizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySizeRangeInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersBodySizeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersBodySizeRangeArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersBodySizeRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersCookieInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersCookieArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersCookieArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHeaderInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHeaderArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHostInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHostArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHttpMethodInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersHttpMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersHttpMethodArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersHttpMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersNumMembersUpInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersNumMembersUpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersNumMembersUpArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersNumMembersUpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersPathInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersPathArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcIpInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersSrcIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcIpArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersSrcIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPortInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersSrcPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPortArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersSrcPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPortRangeInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersSrcPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersSrcPortRangeArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersSrcPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlParamInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersUrlParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlParamArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersUrlParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlQueryInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersUrlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendRuleMatchersUrlQueryArrayInput)(nil)).Elem(), LoadbalancerFrontendRuleMatchersUrlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNetworkInput)(nil)).Elem(), LoadbalancerNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNetworkArrayInput)(nil)).Elem(), LoadbalancerNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNodeInput)(nil)).Elem(), LoadbalancerNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNodeArrayInput)(nil)).Elem(), LoadbalancerNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNodeNetworkInput)(nil)).Elem(), LoadbalancerNodeNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNodeNetworkArrayInput)(nil)).Elem(), LoadbalancerNodeNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNodeNetworkIpAddressInput)(nil)).Elem(), LoadbalancerNodeNetworkIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerNodeNetworkIpAddressArrayInput)(nil)).Elem(), LoadbalancerNodeNetworkIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlComponentInput)(nil)).Elem(), ManagedDatabaseMysqlComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlComponentArrayInput)(nil)).Elem(), ManagedDatabaseMysqlComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlNetworkInput)(nil)).Elem(), ManagedDatabaseMysqlNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlNetworkArrayInput)(nil)).Elem(), ManagedDatabaseMysqlNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlNodeStateInput)(nil)).Elem(), ManagedDatabaseMysqlNodeStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlNodeStateArrayInput)(nil)).Elem(), ManagedDatabaseMysqlNodeStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlPropertiesInput)(nil)).Elem(), ManagedDatabaseMysqlPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlPropertiesPtrInput)(nil)).Elem(), ManagedDatabaseMysqlPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlPropertiesMigrationInput)(nil)).Elem(), ManagedDatabaseMysqlPropertiesMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseMysqlPropertiesMigrationPtrInput)(nil)).Elem(), ManagedDatabaseMysqlPropertiesMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchComponentInput)(nil)).Elem(), ManagedDatabaseOpensearchComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchComponentArrayInput)(nil)).Elem(), ManagedDatabaseOpensearchComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchNetworkInput)(nil)).Elem(), ManagedDatabaseOpensearchNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchNetworkArrayInput)(nil)).Elem(), ManagedDatabaseOpensearchNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchNodeStateInput)(nil)).Elem(), ManagedDatabaseOpensearchNodeStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchNodeStateArrayInput)(nil)).Elem(), ManagedDatabaseOpensearchNodeStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesAuthFailureListenersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesIndexTemplateInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesIndexTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesIndexTemplatePtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesIndexTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpenidInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesOpenidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpenidPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesOpenidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpensearchDashboardsInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesOpensearchDashboardsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesSamlInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseOpensearchPropertiesSamlPtrInput)(nil)).Elem(), ManagedDatabaseOpensearchPropertiesSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlComponentInput)(nil)).Elem(), ManagedDatabasePostgresqlComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlComponentArrayInput)(nil)).Elem(), ManagedDatabasePostgresqlComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlNetworkInput)(nil)).Elem(), ManagedDatabasePostgresqlNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlNetworkArrayInput)(nil)).Elem(), ManagedDatabasePostgresqlNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlNodeStateInput)(nil)).Elem(), ManagedDatabasePostgresqlNodeStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlNodeStateArrayInput)(nil)).Elem(), ManagedDatabasePostgresqlNodeStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPtrInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesMigrationInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesMigrationPtrInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPgbouncerInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesPgbouncerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPgbouncerPtrInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesPgbouncerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPglookoutInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesPglookoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesPglookoutPtrInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesPglookoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesTimescaledbInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesTimescaledbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabasePostgresqlPropertiesTimescaledbPtrInput)(nil)).Elem(), ManagedDatabasePostgresqlPropertiesTimescaledbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisComponentInput)(nil)).Elem(), ManagedDatabaseRedisComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisComponentArrayInput)(nil)).Elem(), ManagedDatabaseRedisComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisNetworkInput)(nil)).Elem(), ManagedDatabaseRedisNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisNetworkArrayInput)(nil)).Elem(), ManagedDatabaseRedisNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisNodeStateInput)(nil)).Elem(), ManagedDatabaseRedisNodeStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisNodeStateArrayInput)(nil)).Elem(), ManagedDatabaseRedisNodeStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisPropertiesInput)(nil)).Elem(), ManagedDatabaseRedisPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisPropertiesPtrInput)(nil)).Elem(), ManagedDatabaseRedisPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisPropertiesMigrationInput)(nil)).Elem(), ManagedDatabaseRedisPropertiesMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseRedisPropertiesMigrationPtrInput)(nil)).Elem(), ManagedDatabaseRedisPropertiesMigrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControlInput)(nil)).Elem(), ManagedDatabaseUserOpensearchAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControlPtrInput)(nil)).Elem(), ManagedDatabaseUserOpensearchAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControlRuleInput)(nil)).Elem(), ManagedDatabaseUserOpensearchAccessControlRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserOpensearchAccessControlRuleArrayInput)(nil)).Elem(), ManagedDatabaseUserOpensearchAccessControlRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserPgAccessControlInput)(nil)).Elem(), ManagedDatabaseUserPgAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserPgAccessControlPtrInput)(nil)).Elem(), ManagedDatabaseUserPgAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserRedisAccessControlInput)(nil)).Elem(), ManagedDatabaseUserRedisAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedDatabaseUserRedisAccessControlPtrInput)(nil)).Elem(), ManagedDatabaseUserRedisAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageEndpointInput)(nil)).Elem(), ManagedObjectStorageEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageEndpointArrayInput)(nil)).Elem(), ManagedObjectStorageEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageNetworkInput)(nil)).Elem(), ManagedObjectStorageNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageNetworkArrayInput)(nil)).Elem(), ManagedObjectStorageNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpNetworkInput)(nil)).Elem(), NetworkIpNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkIpNetworkPtrInput)(nil)).Elem(), NetworkIpNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPeeringNetworkInput)(nil)).Elem(), NetworkPeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPeeringNetworkPtrInput)(nil)).Elem(), NetworkPeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPeeringPeerNetworkInput)(nil)).Elem(), NetworkPeeringPeerNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPeeringPeerNetworkPtrInput)(nil)).Elem(), NetworkPeeringPeerNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketInput)(nil)).Elem(), ObjectStorageBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectStorageBucketArrayInput)(nil)).Elem(), ObjectStorageBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStaticRouteInput)(nil)).Elem(), RouterStaticRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouterStaticRouteArrayInput)(nil)).Elem(), RouterStaticRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerFirewallRulesFirewallRuleInput)(nil)).Elem(), ServerFirewallRulesFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerFirewallRulesFirewallRuleArrayInput)(nil)).Elem(), ServerFirewallRulesFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerLoginInput)(nil)).Elem(), ServerLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerLoginPtrInput)(nil)).Elem(), ServerLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkInterfaceInput)(nil)).Elem(), ServerNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkInterfaceArrayInput)(nil)).Elem(), ServerNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkInterfaceAdditionalIpAddressInput)(nil)).Elem(), ServerNetworkInterfaceAdditionalIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkInterfaceAdditionalIpAddressArrayInput)(nil)).Elem(), ServerNetworkInterfaceAdditionalIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerSimpleBackupInput)(nil)).Elem(), ServerSimpleBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerSimpleBackupPtrInput)(nil)).Elem(), ServerSimpleBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageDeviceInput)(nil)).Elem(), ServerStorageDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageDeviceArrayInput)(nil)).Elem(), ServerStorageDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTemplateInput)(nil)).Elem(), ServerTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTemplatePtrInput)(nil)).Elem(), ServerTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTemplateBackupRuleInput)(nil)).Elem(), ServerTemplateBackupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTemplateBackupRulePtrInput)(nil)).Elem(), ServerTemplateBackupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageBackupRuleInput)(nil)).Elem(), StorageBackupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageBackupRulePtrInput)(nil)).Elem(), StorageBackupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageCloneInput)(nil)).Elem(), StorageCloneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageClonePtrInput)(nil)).Elem(), StorageCloneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageImportInput)(nil)).Elem(), StorageImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageImportPtrInput)(nil)).Elem(), StorageImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostInput)(nil)).Elem(), GetHostsHostArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostArrayInput)(nil)).Elem(), GetHostsHostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesAddressInput)(nil)).Elem(), GetIpAddressesAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesAddressArrayInput)(nil)).Elem(), GetIpAddressesAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabaseMysqlSessionsSessionInput)(nil)).Elem(), GetManagedDatabaseMysqlSessionsSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabaseMysqlSessionsSessionArrayInput)(nil)).Elem(), GetManagedDatabaseMysqlSessionsSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabaseOpensearchIndicesIndexInput)(nil)).Elem(), GetManagedDatabaseOpensearchIndicesIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabaseOpensearchIndicesIndexArrayInput)(nil)).Elem(), GetManagedDatabaseOpensearchIndicesIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabasePostgresqlSessionsSessionInput)(nil)).Elem(), GetManagedDatabasePostgresqlSessionsSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabasePostgresqlSessionsSessionArrayInput)(nil)).Elem(), GetManagedDatabasePostgresqlSessionsSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabaseRedisSessionsSessionInput)(nil)).Elem(), GetManagedDatabaseRedisSessionsSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedDatabaseRedisSessionsSessionArrayInput)(nil)).Elem(), GetManagedDatabaseRedisSessionsSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedObjectStoragePoliciesPolicyInput)(nil)).Elem(), GetManagedObjectStoragePoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedObjectStoragePoliciesPolicyArrayInput)(nil)).Elem(), GetManagedObjectStoragePoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedObjectStorageRegionsRegionInput)(nil)).Elem(), GetManagedObjectStorageRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagedObjectStorageRegionsRegionArrayInput)(nil)).Elem(), GetManagedObjectStorageRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksNetworkInput)(nil)).Elem(), GetNetworksNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksNetworkArrayInput)(nil)).Elem(), GetNetworksNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksNetworkIpNetworkInput)(nil)).Elem(), GetNetworksNetworkIpNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksNetworkIpNetworkArrayInput)(nil)).Elem(), GetNetworksNetworkIpNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksNetworkServerInput)(nil)).Elem(), GetNetworksNetworkServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworksNetworkServerArrayInput)(nil)).Elem(), GetNetworksNetworkServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterOutputType(GatewayAddressOutput{})
	pulumi.RegisterOutputType(GatewayAddressPtrOutput{})
	pulumi.RegisterOutputType(GatewayAddressArrayOutput{})
	pulumi.RegisterOutputType(GatewayConnectionLocalRouteOutput{})
	pulumi.RegisterOutputType(GatewayConnectionLocalRouteArrayOutput{})
	pulumi.RegisterOutputType(GatewayConnectionRemoteRouteOutput{})
	pulumi.RegisterOutputType(GatewayConnectionRemoteRouteArrayOutput{})
	pulumi.RegisterOutputType(GatewayConnectionTunnelIpsecAuthPskOutput{})
	pulumi.RegisterOutputType(GatewayConnectionTunnelIpsecAuthPskPtrOutput{})
	pulumi.RegisterOutputType(GatewayConnectionTunnelIpsecPropertiesOutput{})
	pulumi.RegisterOutputType(GatewayConnectionTunnelIpsecPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GatewayRouterOutput{})
	pulumi.RegisterOutputType(GatewayRouterPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupCustomPlanOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupCustomPlanPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupKubeletArgOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupKubeletArgArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupTaintOutput{})
	pulumi.RegisterOutputType(KubernetesNodeGroupTaintArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendPropertiesOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendNetworkOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendNetworkArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendPropertiesOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendPropertiesPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsHttpRedirectOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsHttpRedirectArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsHttpReturnOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsHttpReturnArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsSetForwardedHeaderOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsSetForwardedHeaderArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsTcpRejectOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsTcpRejectArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsUseBackendOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleActionsUseBackendArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersBodySizeOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersBodySizeArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersBodySizeRangeOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersBodySizeRangeArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersCookieOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersCookieArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersHeaderOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersHeaderArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersHostOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersHostArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersHttpMethodOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersHttpMethodArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersNumMembersUpOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersNumMembersUpArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersPathOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersPathArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersSrcIpOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersSrcIpArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersSrcPortOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersSrcPortArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersSrcPortRangeOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersSrcPortRangeArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersUrlOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersUrlArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersUrlParamOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersUrlParamArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersUrlQueryOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendRuleMatchersUrlQueryArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerNetworkOutput{})
	pulumi.RegisterOutputType(LoadbalancerNetworkArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerNodeOutput{})
	pulumi.RegisterOutputType(LoadbalancerNodeArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerNodeNetworkOutput{})
	pulumi.RegisterOutputType(LoadbalancerNodeNetworkArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerNodeNetworkIpAddressOutput{})
	pulumi.RegisterOutputType(LoadbalancerNodeNetworkIpAddressArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlComponentOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlComponentArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlNetworkOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlNetworkArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlNodeStateOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlNodeStateArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlPropertiesMigrationOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseMysqlPropertiesMigrationPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchComponentOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchComponentArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchNetworkOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchNetworkArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchNodeStateOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchNodeStateArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesAuthFailureListenersOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesAuthFailureListenersPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesAuthFailureListenersInternalAuthenticationBackendLimitingPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesAuthFailureListenersIpRateLimitingPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesIndexTemplateOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesIndexTemplatePtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesOpenidOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesOpenidPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesOpensearchDashboardsPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesSamlOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseOpensearchPropertiesSamlPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlComponentOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlComponentArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlNetworkOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlNetworkArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlNodeStateOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlNodeStateArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesMigrationOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesMigrationPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesPgbouncerOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesPgbouncerPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesPglookoutOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesPglookoutPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesTimescaledbOutput{})
	pulumi.RegisterOutputType(ManagedDatabasePostgresqlPropertiesTimescaledbPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisComponentOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisComponentArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisNetworkOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisNetworkArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisNodeStateOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisNodeStateArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisPropertiesOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisPropertiesMigrationOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseRedisPropertiesMigrationPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserOpensearchAccessControlOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserOpensearchAccessControlPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserOpensearchAccessControlRuleOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserOpensearchAccessControlRuleArrayOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserPgAccessControlOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserPgAccessControlPtrOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserRedisAccessControlOutput{})
	pulumi.RegisterOutputType(ManagedDatabaseUserRedisAccessControlPtrOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageEndpointOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageEndpointArrayOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageNetworkOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageNetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkIpNetworkOutput{})
	pulumi.RegisterOutputType(NetworkIpNetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworkPeeringNetworkOutput{})
	pulumi.RegisterOutputType(NetworkPeeringNetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworkPeeringPeerNetworkOutput{})
	pulumi.RegisterOutputType(NetworkPeeringPeerNetworkPtrOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketOutput{})
	pulumi.RegisterOutputType(ObjectStorageBucketArrayOutput{})
	pulumi.RegisterOutputType(RouterStaticRouteOutput{})
	pulumi.RegisterOutputType(RouterStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(ServerFirewallRulesFirewallRuleOutput{})
	pulumi.RegisterOutputType(ServerFirewallRulesFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(ServerLoginOutput{})
	pulumi.RegisterOutputType(ServerLoginPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ServerNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ServerNetworkInterfaceAdditionalIpAddressOutput{})
	pulumi.RegisterOutputType(ServerNetworkInterfaceAdditionalIpAddressArrayOutput{})
	pulumi.RegisterOutputType(ServerSimpleBackupOutput{})
	pulumi.RegisterOutputType(ServerSimpleBackupPtrOutput{})
	pulumi.RegisterOutputType(ServerStorageDeviceOutput{})
	pulumi.RegisterOutputType(ServerStorageDeviceArrayOutput{})
	pulumi.RegisterOutputType(ServerTemplateOutput{})
	pulumi.RegisterOutputType(ServerTemplatePtrOutput{})
	pulumi.RegisterOutputType(ServerTemplateBackupRuleOutput{})
	pulumi.RegisterOutputType(ServerTemplateBackupRulePtrOutput{})
	pulumi.RegisterOutputType(StorageBackupRuleOutput{})
	pulumi.RegisterOutputType(StorageBackupRulePtrOutput{})
	pulumi.RegisterOutputType(StorageCloneOutput{})
	pulumi.RegisterOutputType(StorageClonePtrOutput{})
	pulumi.RegisterOutputType(StorageImportOutput{})
	pulumi.RegisterOutputType(StorageImportPtrOutput{})
	pulumi.RegisterOutputType(GetHostsHostOutput{})
	pulumi.RegisterOutputType(GetHostsHostArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesAddressOutput{})
	pulumi.RegisterOutputType(GetIpAddressesAddressArrayOutput{})
	pulumi.RegisterOutputType(GetManagedDatabaseMysqlSessionsSessionOutput{})
	pulumi.RegisterOutputType(GetManagedDatabaseMysqlSessionsSessionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedDatabaseOpensearchIndicesIndexOutput{})
	pulumi.RegisterOutputType(GetManagedDatabaseOpensearchIndicesIndexArrayOutput{})
	pulumi.RegisterOutputType(GetManagedDatabasePostgresqlSessionsSessionOutput{})
	pulumi.RegisterOutputType(GetManagedDatabasePostgresqlSessionsSessionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedDatabaseRedisSessionsSessionOutput{})
	pulumi.RegisterOutputType(GetManagedDatabaseRedisSessionsSessionArrayOutput{})
	pulumi.RegisterOutputType(GetManagedObjectStoragePoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetManagedObjectStoragePoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetManagedObjectStorageRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetManagedObjectStorageRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetNetworksNetworkOutput{})
	pulumi.RegisterOutputType(GetNetworksNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworksNetworkIpNetworkOutput{})
	pulumi.RegisterOutputType(GetNetworksNetworkIpNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworksNetworkServerOutput{})
	pulumi.RegisterOutputType(GetNetworksNetworkServerArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
}
