// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upcloud

import (
	"context"
	"reflect"

	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Current sessions of a MySQL managed database
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Use data source to gather a list of the active sessions for a Managed MySQL Database
//			// Create a Managed MySQL resource
//			exampleManagedDatabaseMysql, err := upcloud.NewManagedDatabaseMysql(ctx, "exampleManagedDatabaseMysql", &upcloud.ManagedDatabaseMysqlArgs{
//				Title: pulumi.String("mysql-example1"),
//				Plan:  pulumi.String("1x1xCPU-2GB-25GB"),
//				Zone:  pulumi.String("fi-hel1"),
//			})
//			if err != nil {
//				return err
//			}
//			_ = upcloud.GetManagedDatabaseMysqlSessionsOutput(ctx, upcloud.GetManagedDatabaseMysqlSessionsOutputArgs{
//				Service: exampleManagedDatabaseMysql.ID(),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetManagedDatabaseMysqlSessions(ctx *pulumi.Context, args *GetManagedDatabaseMysqlSessionsArgs, opts ...pulumi.InvokeOption) (*GetManagedDatabaseMysqlSessionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedDatabaseMysqlSessionsResult
	err := ctx.Invoke("upcloud:index/getManagedDatabaseMysqlSessions:getManagedDatabaseMysqlSessions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedDatabaseMysqlSessions.
type GetManagedDatabaseMysqlSessionsArgs struct {
	Limit    *int                                     `pulumi:"limit"`
	Offset   *int                                     `pulumi:"offset"`
	Order    *string                                  `pulumi:"order"`
	Service  string                                   `pulumi:"service"`
	Sessions []GetManagedDatabaseMysqlSessionsSession `pulumi:"sessions"`
}

// A collection of values returned by getManagedDatabaseMysqlSessions.
type GetManagedDatabaseMysqlSessionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string                                   `pulumi:"id"`
	Limit    *int                                     `pulumi:"limit"`
	Offset   *int                                     `pulumi:"offset"`
	Order    *string                                  `pulumi:"order"`
	Service  string                                   `pulumi:"service"`
	Sessions []GetManagedDatabaseMysqlSessionsSession `pulumi:"sessions"`
}

func GetManagedDatabaseMysqlSessionsOutput(ctx *pulumi.Context, args GetManagedDatabaseMysqlSessionsOutputArgs, opts ...pulumi.InvokeOption) GetManagedDatabaseMysqlSessionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedDatabaseMysqlSessionsResult, error) {
			args := v.(GetManagedDatabaseMysqlSessionsArgs)
			r, err := GetManagedDatabaseMysqlSessions(ctx, &args, opts...)
			var s GetManagedDatabaseMysqlSessionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedDatabaseMysqlSessionsResultOutput)
}

// A collection of arguments for invoking getManagedDatabaseMysqlSessions.
type GetManagedDatabaseMysqlSessionsOutputArgs struct {
	Limit    pulumi.IntPtrInput                               `pulumi:"limit"`
	Offset   pulumi.IntPtrInput                               `pulumi:"offset"`
	Order    pulumi.StringPtrInput                            `pulumi:"order"`
	Service  pulumi.StringInput                               `pulumi:"service"`
	Sessions GetManagedDatabaseMysqlSessionsSessionArrayInput `pulumi:"sessions"`
}

func (GetManagedDatabaseMysqlSessionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseMysqlSessionsArgs)(nil)).Elem()
}

// A collection of values returned by getManagedDatabaseMysqlSessions.
type GetManagedDatabaseMysqlSessionsResultOutput struct{ *pulumi.OutputState }

func (GetManagedDatabaseMysqlSessionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedDatabaseMysqlSessionsResult)(nil)).Elem()
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) ToGetManagedDatabaseMysqlSessionsResultOutput() GetManagedDatabaseMysqlSessionsResultOutput {
	return o
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) ToGetManagedDatabaseMysqlSessionsResultOutputWithContext(ctx context.Context) GetManagedDatabaseMysqlSessionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedDatabaseMysqlSessionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsResult) *string { return v.Order }).(pulumi.StringPtrOutput)
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsResult) string { return v.Service }).(pulumi.StringOutput)
}

func (o GetManagedDatabaseMysqlSessionsResultOutput) Sessions() GetManagedDatabaseMysqlSessionsSessionArrayOutput {
	return o.ApplyT(func(v GetManagedDatabaseMysqlSessionsResult) []GetManagedDatabaseMysqlSessionsSession {
		return v.Sessions
	}).(GetManagedDatabaseMysqlSessionsSessionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedDatabaseMysqlSessionsResultOutput{})
}
