// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upcloud

import (
	"context"
	"reflect"

	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Returns storage resource information based on defined arguments.
//
// Data object can be used to map storage to other resource based on the ID or just to read some other storage property like zone information.\
// Storage types are: normal, backup, cdrom, template
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			appImage, err := upcloud.LookupStorage(ctx, &upcloud.LookupStorageArgs{
//				Type:       "template",
//				NameRegex:  pulumi.StringRef("^app_image.*"),
//				MostRecent: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = upcloud.NewServer(ctx, "example", &upcloud.ServerArgs{
//				Hostname: pulumi.String("debian.example.tld"),
//				Zone:     pulumi.String("fi-hel1"),
//				NetworkInterfaces: upcloud.ServerNetworkInterfaceArray{
//					&upcloud.ServerNetworkInterfaceArgs{
//						Type: pulumi.String("public"),
//					},
//				},
//				Template: &upcloud.ServerTemplateArgs{
//					Storage: pulumi.String(appImage.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Build only new servers with your latest custom image
//			//
//			// Use the lifecycle meta-argument to ignore changes in server's template triggered by new image version
//			_, err = upcloud.NewServer(ctx, "example2", &upcloud.ServerArgs{
//				Hostname: pulumi.String("debian.example2.tld"),
//				Zone:     pulumi.String("fi-hel1"),
//				NetworkInterfaces: upcloud.ServerNetworkInterfaceArray{
//					&upcloud.ServerNetworkInterfaceArgs{
//						Type: pulumi.String("public"),
//					},
//				},
//				Template: &upcloud.ServerTemplateArgs{
//					Storage: pulumi.String(appImage.Id),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupStorage(ctx *pulumi.Context, args *LookupStorageArgs, opts ...pulumi.InvokeOption) (*LookupStorageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageResult
	err := ctx.Invoke("upcloud:index/getStorage:getStorage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStorage.
type LookupStorageArgs struct {
	AccessType *string `pulumi:"accessType"`
	MostRecent *bool   `pulumi:"mostRecent"`
	Name       *string `pulumi:"name"`
	NameRegex  *string `pulumi:"nameRegex"`
	Type       string  `pulumi:"type"`
	Zone       *string `pulumi:"zone"`
}

// A collection of values returned by getStorage.
type LookupStorageResult struct {
	AccessType string `pulumi:"accessType"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	MostRecent *bool   `pulumi:"mostRecent"`
	Name       *string `pulumi:"name"`
	NameRegex  *string `pulumi:"nameRegex"`
	Size       int     `pulumi:"size"`
	State      string  `pulumi:"state"`
	Tier       string  `pulumi:"tier"`
	Title      string  `pulumi:"title"`
	Type       string  `pulumi:"type"`
	Zone       string  `pulumi:"zone"`
}

func LookupStorageOutput(ctx *pulumi.Context, args LookupStorageOutputArgs, opts ...pulumi.InvokeOption) LookupStorageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageResult, error) {
			args := v.(LookupStorageArgs)
			r, err := LookupStorage(ctx, &args, opts...)
			var s LookupStorageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageResultOutput)
}

// A collection of arguments for invoking getStorage.
type LookupStorageOutputArgs struct {
	AccessType pulumi.StringPtrInput `pulumi:"accessType"`
	MostRecent pulumi.BoolPtrInput   `pulumi:"mostRecent"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	NameRegex  pulumi.StringPtrInput `pulumi:"nameRegex"`
	Type       pulumi.StringInput    `pulumi:"type"`
	Zone       pulumi.StringPtrInput `pulumi:"zone"`
}

func (LookupStorageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageArgs)(nil)).Elem()
}

// A collection of values returned by getStorage.
type LookupStorageResultOutput struct{ *pulumi.OutputState }

func (LookupStorageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageResult)(nil)).Elem()
}

func (o LookupStorageResultOutput) ToLookupStorageResultOutput() LookupStorageResultOutput {
	return o
}

func (o LookupStorageResultOutput) ToLookupStorageResultOutputWithContext(ctx context.Context) LookupStorageResultOutput {
	return o
}

func (o LookupStorageResultOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.AccessType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupStorageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupStorageResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupStorageResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o LookupStorageResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupStorageResultOutput) NameRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStorageResult) *string { return v.NameRegex }).(pulumi.StringPtrOutput)
}

func (o LookupStorageResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupStorageResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupStorageResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupStorageResultOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.Tier }).(pulumi.StringOutput)
}

func (o LookupStorageResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.Title }).(pulumi.StringOutput)
}

func (o LookupStorageResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupStorageResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageResultOutput{})
}
