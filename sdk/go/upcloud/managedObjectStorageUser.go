// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource represents an UpCloud Managed Object Storage user. No relation to UpCloud API accounts.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			this, err := upcloud.NewManagedObjectStorage(ctx, "this", &upcloud.ManagedObjectStorageArgs{
//				Name:             pulumi.String("example"),
//				Region:           pulumi.String("europe-1"),
//				ConfiguredStatus: pulumi.String("started"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = upcloud.NewManagedObjectStorageUser(ctx, "this", &upcloud.ManagedObjectStorageUserArgs{
//				Username:    pulumi.String("example"),
//				ServiceUuid: this.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ManagedObjectStorageUser struct {
	pulumi.CustomResourceState

	// User ARN.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Creation time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringOutput `pulumi:"serviceUuid"`
	// Custom usernames for accessing the object storage. No relation to UpCloud API accounts. See `ManagedObjectStorageUserAccessKey` for managing access keys and `ManagedObjectStorageUserPolicy` for managing policies.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewManagedObjectStorageUser registers a new resource with the given unique name, arguments, and options.
func NewManagedObjectStorageUser(ctx *pulumi.Context,
	name string, args *ManagedObjectStorageUserArgs, opts ...pulumi.ResourceOption) (*ManagedObjectStorageUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceUuid == nil {
		return nil, errors.New("invalid value for required argument 'ServiceUuid'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedObjectStorageUser
	err := ctx.RegisterResource("upcloud:index/managedObjectStorageUser:ManagedObjectStorageUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedObjectStorageUser gets an existing ManagedObjectStorageUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedObjectStorageUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedObjectStorageUserState, opts ...pulumi.ResourceOption) (*ManagedObjectStorageUser, error) {
	var resource ManagedObjectStorageUser
	err := ctx.ReadResource("upcloud:index/managedObjectStorageUser:ManagedObjectStorageUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedObjectStorageUser resources.
type managedObjectStorageUserState struct {
	// User ARN.
	Arn *string `pulumi:"arn"`
	// Creation time.
	CreatedAt *string `pulumi:"createdAt"`
	// Managed Object Storage service UUID.
	ServiceUuid *string `pulumi:"serviceUuid"`
	// Custom usernames for accessing the object storage. No relation to UpCloud API accounts. See `ManagedObjectStorageUserAccessKey` for managing access keys and `ManagedObjectStorageUserPolicy` for managing policies.
	Username *string `pulumi:"username"`
}

type ManagedObjectStorageUserState struct {
	// User ARN.
	Arn pulumi.StringPtrInput
	// Creation time.
	CreatedAt pulumi.StringPtrInput
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringPtrInput
	// Custom usernames for accessing the object storage. No relation to UpCloud API accounts. See `ManagedObjectStorageUserAccessKey` for managing access keys and `ManagedObjectStorageUserPolicy` for managing policies.
	Username pulumi.StringPtrInput
}

func (ManagedObjectStorageUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedObjectStorageUserState)(nil)).Elem()
}

type managedObjectStorageUserArgs struct {
	// Managed Object Storage service UUID.
	ServiceUuid string `pulumi:"serviceUuid"`
	// Custom usernames for accessing the object storage. No relation to UpCloud API accounts. See `ManagedObjectStorageUserAccessKey` for managing access keys and `ManagedObjectStorageUserPolicy` for managing policies.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a ManagedObjectStorageUser resource.
type ManagedObjectStorageUserArgs struct {
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringInput
	// Custom usernames for accessing the object storage. No relation to UpCloud API accounts. See `ManagedObjectStorageUserAccessKey` for managing access keys and `ManagedObjectStorageUserPolicy` for managing policies.
	Username pulumi.StringInput
}

func (ManagedObjectStorageUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedObjectStorageUserArgs)(nil)).Elem()
}

type ManagedObjectStorageUserInput interface {
	pulumi.Input

	ToManagedObjectStorageUserOutput() ManagedObjectStorageUserOutput
	ToManagedObjectStorageUserOutputWithContext(ctx context.Context) ManagedObjectStorageUserOutput
}

func (*ManagedObjectStorageUser) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedObjectStorageUser)(nil)).Elem()
}

func (i *ManagedObjectStorageUser) ToManagedObjectStorageUserOutput() ManagedObjectStorageUserOutput {
	return i.ToManagedObjectStorageUserOutputWithContext(context.Background())
}

func (i *ManagedObjectStorageUser) ToManagedObjectStorageUserOutputWithContext(ctx context.Context) ManagedObjectStorageUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageUserOutput)
}

// ManagedObjectStorageUserArrayInput is an input type that accepts ManagedObjectStorageUserArray and ManagedObjectStorageUserArrayOutput values.
// You can construct a concrete instance of `ManagedObjectStorageUserArrayInput` via:
//
//	ManagedObjectStorageUserArray{ ManagedObjectStorageUserArgs{...} }
type ManagedObjectStorageUserArrayInput interface {
	pulumi.Input

	ToManagedObjectStorageUserArrayOutput() ManagedObjectStorageUserArrayOutput
	ToManagedObjectStorageUserArrayOutputWithContext(context.Context) ManagedObjectStorageUserArrayOutput
}

type ManagedObjectStorageUserArray []ManagedObjectStorageUserInput

func (ManagedObjectStorageUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedObjectStorageUser)(nil)).Elem()
}

func (i ManagedObjectStorageUserArray) ToManagedObjectStorageUserArrayOutput() ManagedObjectStorageUserArrayOutput {
	return i.ToManagedObjectStorageUserArrayOutputWithContext(context.Background())
}

func (i ManagedObjectStorageUserArray) ToManagedObjectStorageUserArrayOutputWithContext(ctx context.Context) ManagedObjectStorageUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageUserArrayOutput)
}

// ManagedObjectStorageUserMapInput is an input type that accepts ManagedObjectStorageUserMap and ManagedObjectStorageUserMapOutput values.
// You can construct a concrete instance of `ManagedObjectStorageUserMapInput` via:
//
//	ManagedObjectStorageUserMap{ "key": ManagedObjectStorageUserArgs{...} }
type ManagedObjectStorageUserMapInput interface {
	pulumi.Input

	ToManagedObjectStorageUserMapOutput() ManagedObjectStorageUserMapOutput
	ToManagedObjectStorageUserMapOutputWithContext(context.Context) ManagedObjectStorageUserMapOutput
}

type ManagedObjectStorageUserMap map[string]ManagedObjectStorageUserInput

func (ManagedObjectStorageUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedObjectStorageUser)(nil)).Elem()
}

func (i ManagedObjectStorageUserMap) ToManagedObjectStorageUserMapOutput() ManagedObjectStorageUserMapOutput {
	return i.ToManagedObjectStorageUserMapOutputWithContext(context.Background())
}

func (i ManagedObjectStorageUserMap) ToManagedObjectStorageUserMapOutputWithContext(ctx context.Context) ManagedObjectStorageUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageUserMapOutput)
}

type ManagedObjectStorageUserOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedObjectStorageUser)(nil)).Elem()
}

func (o ManagedObjectStorageUserOutput) ToManagedObjectStorageUserOutput() ManagedObjectStorageUserOutput {
	return o
}

func (o ManagedObjectStorageUserOutput) ToManagedObjectStorageUserOutputWithContext(ctx context.Context) ManagedObjectStorageUserOutput {
	return o
}

// User ARN.
func (o ManagedObjectStorageUserOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUser) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Creation time.
func (o ManagedObjectStorageUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Managed Object Storage service UUID.
func (o ManagedObjectStorageUserOutput) ServiceUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUser) pulumi.StringOutput { return v.ServiceUuid }).(pulumi.StringOutput)
}

// Custom usernames for accessing the object storage. No relation to UpCloud API accounts. See `ManagedObjectStorageUserAccessKey` for managing access keys and `ManagedObjectStorageUserPolicy` for managing policies.
func (o ManagedObjectStorageUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUser) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type ManagedObjectStorageUserArrayOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedObjectStorageUser)(nil)).Elem()
}

func (o ManagedObjectStorageUserArrayOutput) ToManagedObjectStorageUserArrayOutput() ManagedObjectStorageUserArrayOutput {
	return o
}

func (o ManagedObjectStorageUserArrayOutput) ToManagedObjectStorageUserArrayOutputWithContext(ctx context.Context) ManagedObjectStorageUserArrayOutput {
	return o
}

func (o ManagedObjectStorageUserArrayOutput) Index(i pulumi.IntInput) ManagedObjectStorageUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedObjectStorageUser {
		return vs[0].([]*ManagedObjectStorageUser)[vs[1].(int)]
	}).(ManagedObjectStorageUserOutput)
}

type ManagedObjectStorageUserMapOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedObjectStorageUser)(nil)).Elem()
}

func (o ManagedObjectStorageUserMapOutput) ToManagedObjectStorageUserMapOutput() ManagedObjectStorageUserMapOutput {
	return o
}

func (o ManagedObjectStorageUserMapOutput) ToManagedObjectStorageUserMapOutputWithContext(ctx context.Context) ManagedObjectStorageUserMapOutput {
	return o
}

func (o ManagedObjectStorageUserMapOutput) MapIndex(k pulumi.StringInput) ManagedObjectStorageUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedObjectStorageUser {
		return vs[0].(map[string]*ManagedObjectStorageUser)[vs[1].(string)]
	}).(ManagedObjectStorageUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageUserInput)(nil)).Elem(), &ManagedObjectStorageUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageUserArrayInput)(nil)).Elem(), ManagedObjectStorageUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageUserMapInput)(nil)).Elem(), ManagedObjectStorageUserMap{})
	pulumi.RegisterOutputType(ManagedObjectStorageUserOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageUserArrayOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageUserMapOutput{})
}
