// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package upcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource represents an UpCloud Managed Object Storage user access key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/UpCloudLtd/pulumi-upcloud/sdk/go/upcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			this, err := upcloud.NewManagedObjectStorage(ctx, "this", &upcloud.ManagedObjectStorageArgs{
//				Name:             pulumi.String("example"),
//				Region:           pulumi.String("europe-1"),
//				ConfiguredStatus: pulumi.String("started"),
//			})
//			if err != nil {
//				return err
//			}
//			thisManagedObjectStorageUser, err := upcloud.NewManagedObjectStorageUser(ctx, "this", &upcloud.ManagedObjectStorageUserArgs{
//				Username:    pulumi.String("example"),
//				ServiceUuid: this.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = upcloud.NewManagedObjectStorageUserAccessKey(ctx, "this", &upcloud.ManagedObjectStorageUserAccessKeyArgs{
//				Username:    thisManagedObjectStorageUser.Username,
//				ServiceUuid: this.ID(),
//				Status:      pulumi.String("Active"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ManagedObjectStorageUserAccessKey struct {
	pulumi.CustomResourceState

	// Access key id.
	AccessKeyId pulumi.StringOutput `pulumi:"accessKeyId"`
	// Creation time.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Last used.
	LastUsedAt pulumi.StringOutput `pulumi:"lastUsedAt"`
	// Secret access key.
	SecretAccessKey pulumi.StringOutput `pulumi:"secretAccessKey"`
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringOutput `pulumi:"serviceUuid"`
	// Status of the key. Valid values: `Active`|`Inactive`
	Status pulumi.StringOutput `pulumi:"status"`
	// Username.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewManagedObjectStorageUserAccessKey registers a new resource with the given unique name, arguments, and options.
func NewManagedObjectStorageUserAccessKey(ctx *pulumi.Context,
	name string, args *ManagedObjectStorageUserAccessKeyArgs, opts ...pulumi.ResourceOption) (*ManagedObjectStorageUserAccessKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceUuid == nil {
		return nil, errors.New("invalid value for required argument 'ServiceUuid'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretAccessKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedObjectStorageUserAccessKey
	err := ctx.RegisterResource("upcloud:index/managedObjectStorageUserAccessKey:ManagedObjectStorageUserAccessKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedObjectStorageUserAccessKey gets an existing ManagedObjectStorageUserAccessKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedObjectStorageUserAccessKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedObjectStorageUserAccessKeyState, opts ...pulumi.ResourceOption) (*ManagedObjectStorageUserAccessKey, error) {
	var resource ManagedObjectStorageUserAccessKey
	err := ctx.ReadResource("upcloud:index/managedObjectStorageUserAccessKey:ManagedObjectStorageUserAccessKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedObjectStorageUserAccessKey resources.
type managedObjectStorageUserAccessKeyState struct {
	// Access key id.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// Creation time.
	CreatedAt *string `pulumi:"createdAt"`
	// Last used.
	LastUsedAt *string `pulumi:"lastUsedAt"`
	// Secret access key.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// Managed Object Storage service UUID.
	ServiceUuid *string `pulumi:"serviceUuid"`
	// Status of the key. Valid values: `Active`|`Inactive`
	Status *string `pulumi:"status"`
	// Username.
	Username *string `pulumi:"username"`
}

type ManagedObjectStorageUserAccessKeyState struct {
	// Access key id.
	AccessKeyId pulumi.StringPtrInput
	// Creation time.
	CreatedAt pulumi.StringPtrInput
	// Last used.
	LastUsedAt pulumi.StringPtrInput
	// Secret access key.
	SecretAccessKey pulumi.StringPtrInput
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringPtrInput
	// Status of the key. Valid values: `Active`|`Inactive`
	Status pulumi.StringPtrInput
	// Username.
	Username pulumi.StringPtrInput
}

func (ManagedObjectStorageUserAccessKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedObjectStorageUserAccessKeyState)(nil)).Elem()
}

type managedObjectStorageUserAccessKeyArgs struct {
	// Managed Object Storage service UUID.
	ServiceUuid string `pulumi:"serviceUuid"`
	// Status of the key. Valid values: `Active`|`Inactive`
	Status string `pulumi:"status"`
	// Username.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a ManagedObjectStorageUserAccessKey resource.
type ManagedObjectStorageUserAccessKeyArgs struct {
	// Managed Object Storage service UUID.
	ServiceUuid pulumi.StringInput
	// Status of the key. Valid values: `Active`|`Inactive`
	Status pulumi.StringInput
	// Username.
	Username pulumi.StringInput
}

func (ManagedObjectStorageUserAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedObjectStorageUserAccessKeyArgs)(nil)).Elem()
}

type ManagedObjectStorageUserAccessKeyInput interface {
	pulumi.Input

	ToManagedObjectStorageUserAccessKeyOutput() ManagedObjectStorageUserAccessKeyOutput
	ToManagedObjectStorageUserAccessKeyOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyOutput
}

func (*ManagedObjectStorageUserAccessKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedObjectStorageUserAccessKey)(nil)).Elem()
}

func (i *ManagedObjectStorageUserAccessKey) ToManagedObjectStorageUserAccessKeyOutput() ManagedObjectStorageUserAccessKeyOutput {
	return i.ToManagedObjectStorageUserAccessKeyOutputWithContext(context.Background())
}

func (i *ManagedObjectStorageUserAccessKey) ToManagedObjectStorageUserAccessKeyOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageUserAccessKeyOutput)
}

// ManagedObjectStorageUserAccessKeyArrayInput is an input type that accepts ManagedObjectStorageUserAccessKeyArray and ManagedObjectStorageUserAccessKeyArrayOutput values.
// You can construct a concrete instance of `ManagedObjectStorageUserAccessKeyArrayInput` via:
//
//	ManagedObjectStorageUserAccessKeyArray{ ManagedObjectStorageUserAccessKeyArgs{...} }
type ManagedObjectStorageUserAccessKeyArrayInput interface {
	pulumi.Input

	ToManagedObjectStorageUserAccessKeyArrayOutput() ManagedObjectStorageUserAccessKeyArrayOutput
	ToManagedObjectStorageUserAccessKeyArrayOutputWithContext(context.Context) ManagedObjectStorageUserAccessKeyArrayOutput
}

type ManagedObjectStorageUserAccessKeyArray []ManagedObjectStorageUserAccessKeyInput

func (ManagedObjectStorageUserAccessKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedObjectStorageUserAccessKey)(nil)).Elem()
}

func (i ManagedObjectStorageUserAccessKeyArray) ToManagedObjectStorageUserAccessKeyArrayOutput() ManagedObjectStorageUserAccessKeyArrayOutput {
	return i.ToManagedObjectStorageUserAccessKeyArrayOutputWithContext(context.Background())
}

func (i ManagedObjectStorageUserAccessKeyArray) ToManagedObjectStorageUserAccessKeyArrayOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageUserAccessKeyArrayOutput)
}

// ManagedObjectStorageUserAccessKeyMapInput is an input type that accepts ManagedObjectStorageUserAccessKeyMap and ManagedObjectStorageUserAccessKeyMapOutput values.
// You can construct a concrete instance of `ManagedObjectStorageUserAccessKeyMapInput` via:
//
//	ManagedObjectStorageUserAccessKeyMap{ "key": ManagedObjectStorageUserAccessKeyArgs{...} }
type ManagedObjectStorageUserAccessKeyMapInput interface {
	pulumi.Input

	ToManagedObjectStorageUserAccessKeyMapOutput() ManagedObjectStorageUserAccessKeyMapOutput
	ToManagedObjectStorageUserAccessKeyMapOutputWithContext(context.Context) ManagedObjectStorageUserAccessKeyMapOutput
}

type ManagedObjectStorageUserAccessKeyMap map[string]ManagedObjectStorageUserAccessKeyInput

func (ManagedObjectStorageUserAccessKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedObjectStorageUserAccessKey)(nil)).Elem()
}

func (i ManagedObjectStorageUserAccessKeyMap) ToManagedObjectStorageUserAccessKeyMapOutput() ManagedObjectStorageUserAccessKeyMapOutput {
	return i.ToManagedObjectStorageUserAccessKeyMapOutputWithContext(context.Background())
}

func (i ManagedObjectStorageUserAccessKeyMap) ToManagedObjectStorageUserAccessKeyMapOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedObjectStorageUserAccessKeyMapOutput)
}

type ManagedObjectStorageUserAccessKeyOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageUserAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedObjectStorageUserAccessKey)(nil)).Elem()
}

func (o ManagedObjectStorageUserAccessKeyOutput) ToManagedObjectStorageUserAccessKeyOutput() ManagedObjectStorageUserAccessKeyOutput {
	return o
}

func (o ManagedObjectStorageUserAccessKeyOutput) ToManagedObjectStorageUserAccessKeyOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyOutput {
	return o
}

// Access key id.
func (o ManagedObjectStorageUserAccessKeyOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.AccessKeyId }).(pulumi.StringOutput)
}

// Creation time.
func (o ManagedObjectStorageUserAccessKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Last used.
func (o ManagedObjectStorageUserAccessKeyOutput) LastUsedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.LastUsedAt }).(pulumi.StringOutput)
}

// Secret access key.
func (o ManagedObjectStorageUserAccessKeyOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.SecretAccessKey }).(pulumi.StringOutput)
}

// Managed Object Storage service UUID.
func (o ManagedObjectStorageUserAccessKeyOutput) ServiceUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.ServiceUuid }).(pulumi.StringOutput)
}

// Status of the key. Valid values: `Active`|`Inactive`
func (o ManagedObjectStorageUserAccessKeyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Username.
func (o ManagedObjectStorageUserAccessKeyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedObjectStorageUserAccessKey) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type ManagedObjectStorageUserAccessKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageUserAccessKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedObjectStorageUserAccessKey)(nil)).Elem()
}

func (o ManagedObjectStorageUserAccessKeyArrayOutput) ToManagedObjectStorageUserAccessKeyArrayOutput() ManagedObjectStorageUserAccessKeyArrayOutput {
	return o
}

func (o ManagedObjectStorageUserAccessKeyArrayOutput) ToManagedObjectStorageUserAccessKeyArrayOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyArrayOutput {
	return o
}

func (o ManagedObjectStorageUserAccessKeyArrayOutput) Index(i pulumi.IntInput) ManagedObjectStorageUserAccessKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedObjectStorageUserAccessKey {
		return vs[0].([]*ManagedObjectStorageUserAccessKey)[vs[1].(int)]
	}).(ManagedObjectStorageUserAccessKeyOutput)
}

type ManagedObjectStorageUserAccessKeyMapOutput struct{ *pulumi.OutputState }

func (ManagedObjectStorageUserAccessKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedObjectStorageUserAccessKey)(nil)).Elem()
}

func (o ManagedObjectStorageUserAccessKeyMapOutput) ToManagedObjectStorageUserAccessKeyMapOutput() ManagedObjectStorageUserAccessKeyMapOutput {
	return o
}

func (o ManagedObjectStorageUserAccessKeyMapOutput) ToManagedObjectStorageUserAccessKeyMapOutputWithContext(ctx context.Context) ManagedObjectStorageUserAccessKeyMapOutput {
	return o
}

func (o ManagedObjectStorageUserAccessKeyMapOutput) MapIndex(k pulumi.StringInput) ManagedObjectStorageUserAccessKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedObjectStorageUserAccessKey {
		return vs[0].(map[string]*ManagedObjectStorageUserAccessKey)[vs[1].(string)]
	}).(ManagedObjectStorageUserAccessKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageUserAccessKeyInput)(nil)).Elem(), &ManagedObjectStorageUserAccessKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageUserAccessKeyArrayInput)(nil)).Elem(), ManagedObjectStorageUserAccessKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedObjectStorageUserAccessKeyMapInput)(nil)).Elem(), ManagedObjectStorageUserAccessKeyMap{})
	pulumi.RegisterOutputType(ManagedObjectStorageUserAccessKeyOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageUserAccessKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagedObjectStorageUserAccessKeyMapOutput{})
}
